#
# Autogenerated by Thrift Compiler (0.13.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module G_a_a0_a_a_a
  PERSONAL = 1
  ROOM = 2
  GROUP = 3
  SQUARE_CHAT = 4
  VALUE_MAP = {1 => "PERSONAL", 2 => "ROOM", 3 => "GROUP", 4 => "SQUARE_CHAT"}
  VALID_VALUES = Set.new([PERSONAL, ROOM, GROUP, SQUARE_CHAT]).freeze
end

module G_a_a0_a_a_d
  INVALID_REQUEST = 1
  UNAUTHORIZED = 2
  SERVER_ERROR = 100
  VALUE_MAP = {1 => "INVALID_REQUEST", 2 => "UNAUTHORIZED", 100 => "SERVER_ERROR"}
  VALID_VALUES = Set.new([INVALID_REQUEST, UNAUTHORIZED, SERVER_ERROR]).freeze
end

module G_a_a0_a_a_c
  PRIORITY = 2
  REGULAR = 1
  MORE = 3
  VALUE_MAP = {2 => "PRIORITY", 1 => "REGULAR", 3 => "MORE"}
  VALID_VALUES = Set.new([PRIORITY, REGULAR, MORE]).freeze
end

module G_a_c_s_a_a_a_a_a
  IOS = 16
  IOS_RC = 17
  IOS_BETA = 18
  IOS_ALPHA = 19
  ANDROID = 32
  ANDROID_RC = 33
  ANDROID_BETA = 34
  ANDROID_ALPHA = 35
  WAP = 48
  WAP_RC = 49
  WAP_BETA = 50
  WAP_ALPHA = 51
  BOT = 64
  BOT_RC = 65
  BOT_BETA = 66
  BOT_ALPHA = 67
  WEB = 80
  WEB_RC = 81
  WEB_BETA = 82
  WEB_ALPHA = 83
  DESKTOPWIN = 96
  DESKTOPWIN_RC = 97
  DESKTOPWIN_BETA = 98
  DESKTOPWIN_ALPHA = 99
  DESKTOPMAC = 112
  DESKTOPMAC_RC = 113
  DESKTOPMAC_BETA = 114
  DESKTOPMAC_ALPHA = 115
  CHANNELGW = 128
  CHANNELGW_RC = 129
  CHANNELGW_BETA = 130
  CHANNELGW_ALPHA = 131
  CHANNELCP = 144
  CHANNELCP_RC = 145
  CHANNELCP_BETA = 146
  CHANNELCP_ALPHA = 147
  WINPHONE = 10
  WINPHONE_RC = 10
  WINPHONE_BETA = 10
  WINPHONE_ALPHA = 10
  BLACKBERRY = 11
  BLACKBERRY_RC = 11
  BLACKBERRY_BETA = 11
  BLACKBERRY_ALPHA = 11
  WINMETRO = 12
  WINMETRO_RC = 12
  WINMETRO_BETA = 12
  WINMETRO_ALPHA = 12
  S40 = 13
  S40_RC = 13
  S40_BETA = 13
  S40_ALPHA = 13
  CHRONO = 14
  CHRONO_RC = 14
  CHRONO_BETA = 14
  CHRONO_ALPHA = 14
  TIZEN = 16
  TIZEN_RC = 16
  TIZEN_BETA = 16
  TIZEN_ALPHA = 16
  VIRTUAL = 17
  FIREFOXOS = 18
  FIREFOXOS_RC = 18
  FIREFOXOS_BETA = 18
  FIREFOXOS_ALPHA = 18
  IOSIPAD = 19
  IOSIPAD_RC = 19
  IOSIPAD_BETA = 19
  IOSIPAD_ALPHA = 19
  BIZIOS = 20
  BIZIOS_RC = 20
  BIZIOS_BETA = 20
  BIZIOS_ALPHA = 20
  BIZANDROID = 21
  BIZANDROID_RC = 21
  BIZANDROID_BETA = 21
  BIZANDROID_ALPHA = 21
  BIZBOT = 22
  BIZBOT_RC = 22
  BIZBOT_BETA = 22
  BIZBOT_ALPHA = 22
  CHROMEOS = 23
  CHROMEOS_RC = 23
  CHROMEOS_BETA = 23
  CHROMEOS_ALPHA = 23
  ANDROIDLITE = 24
  ANDROIDLITE_RC = 24
  ANDROIDLITE_BETA = 24
  ANDROIDLITE_ALPHA = 24
  WIN10 = 25
  WIN10_RC = 25
  WIN10_BETA = 25
  WIN10_ALPHA = 25
  BIZWEB = 26
  BIZWEB_RC = 26
  BIZWEB_BETA = 26
  BIZWEB_ALPHA = 26
  DUMMYPRIMARY = 27
  DUMMYPRIMARY_RC = 27
  DUMMYPRIMARY_BETA = 27
  DUMMYPRIMARY_ALPHA = 27
  SQUARE = 28
  SQUARE_RC = 28
  SQUARE_BETA = 28
  SQUARE_ALPHA = 28
  INTERNAL = 29
  INTERNAL_RC = 29
  INTERNAL_BETA = 29
  INTERNAL_ALPHA = 29
  CLOVAFRIENDS = 30
  CLOVAFRIENDS_RC = 30
  CLOVAFRIENDS_BETA = 30
  CLOVAFRIENDS_ALPHA = 30
  WATCHOS = 31
  WATCHOS_RC = 31
  WATCHOS_BETA = 31
  WATCHOS_ALPHA = 31
  VALUE_MAP = {16 => "IOS", 17 => "IOS_RC", 18 => "IOS_BETA", 19 => "IOS_ALPHA", 32 => "ANDROID", 33 => "ANDROID_RC", 34 => "ANDROID_BETA", 35 => "ANDROID_ALPHA", 48 => "WAP", 49 => "WAP_RC", 50 => "WAP_BETA", 51 => "WAP_ALPHA", 64 => "BOT", 65 => "BOT_RC", 66 => "BOT_BETA", 67 => "BOT_ALPHA", 80 => "WEB", 81 => "WEB_RC", 82 => "WEB_BETA", 83 => "WEB_ALPHA", 96 => "DESKTOPWIN", 97 => "DESKTOPWIN_RC", 98 => "DESKTOPWIN_BETA", 99 => "DESKTOPWIN_ALPHA", 112 => "DESKTOPMAC", 113 => "DESKTOPMAC_RC", 114 => "DESKTOPMAC_BETA", 115 => "DESKTOPMAC_ALPHA", 128 => "CHANNELGW", 129 => "CHANNELGW_RC", 130 => "CHANNELGW_BETA", 131 => "CHANNELGW_ALPHA", 144 => "CHANNELCP", 145 => "CHANNELCP_RC", 146 => "CHANNELCP_BETA", 147 => "CHANNELCP_ALPHA", 10 => "WINPHONE", 10 => "WINPHONE_RC", 10 => "WINPHONE_BETA", 10 => "WINPHONE_ALPHA", 11 => "BLACKBERRY", 11 => "BLACKBERRY_RC", 11 => "BLACKBERRY_BETA", 11 => "BLACKBERRY_ALPHA", 12 => "WINMETRO", 12 => "WINMETRO_RC", 12 => "WINMETRO_BETA", 12 => "WINMETRO_ALPHA", 13 => "S40", 13 => "S40_RC", 13 => "S40_BETA", 13 => "S40_ALPHA", 14 => "CHRONO", 14 => "CHRONO_RC", 14 => "CHRONO_BETA", 14 => "CHRONO_ALPHA", 16 => "TIZEN", 16 => "TIZEN_RC", 16 => "TIZEN_BETA", 16 => "TIZEN_ALPHA", 17 => "VIRTUAL", 18 => "FIREFOXOS", 18 => "FIREFOXOS_RC", 18 => "FIREFOXOS_BETA", 18 => "FIREFOXOS_ALPHA", 19 => "IOSIPAD", 19 => "IOSIPAD_RC", 19 => "IOSIPAD_BETA", 19 => "IOSIPAD_ALPHA", 20 => "BIZIOS", 20 => "BIZIOS_RC", 20 => "BIZIOS_BETA", 20 => "BIZIOS_ALPHA", 21 => "BIZANDROID", 21 => "BIZANDROID_RC", 21 => "BIZANDROID_BETA", 21 => "BIZANDROID_ALPHA", 22 => "BIZBOT", 22 => "BIZBOT_RC", 22 => "BIZBOT_BETA", 22 => "BIZBOT_ALPHA", 23 => "CHROMEOS", 23 => "CHROMEOS_RC", 23 => "CHROMEOS_BETA", 23 => "CHROMEOS_ALPHA", 24 => "ANDROIDLITE", 24 => "ANDROIDLITE_RC", 24 => "ANDROIDLITE_BETA", 24 => "ANDROIDLITE_ALPHA", 25 => "WIN10", 25 => "WIN10_RC", 25 => "WIN10_BETA", 25 => "WIN10_ALPHA", 26 => "BIZWEB", 26 => "BIZWEB_RC", 26 => "BIZWEB_BETA", 26 => "BIZWEB_ALPHA", 27 => "DUMMYPRIMARY", 27 => "DUMMYPRIMARY_RC", 27 => "DUMMYPRIMARY_BETA", 27 => "DUMMYPRIMARY_ALPHA", 28 => "SQUARE", 28 => "SQUARE_RC", 28 => "SQUARE_BETA", 28 => "SQUARE_ALPHA", 29 => "INTERNAL", 29 => "INTERNAL_RC", 29 => "INTERNAL_BETA", 29 => "INTERNAL_ALPHA", 30 => "CLOVAFRIENDS", 30 => "CLOVAFRIENDS_RC", 30 => "CLOVAFRIENDS_BETA", 30 => "CLOVAFRIENDS_ALPHA", 31 => "WATCHOS", 31 => "WATCHOS_RC", 31 => "WATCHOS_BETA", 31 => "WATCHOS_ALPHA"}
  VALID_VALUES = Set.new([IOS, IOS_RC, IOS_BETA, IOS_ALPHA, ANDROID, ANDROID_RC, ANDROID_BETA, ANDROID_ALPHA, WAP, WAP_RC, WAP_BETA, WAP_ALPHA, BOT, BOT_RC, BOT_BETA, BOT_ALPHA, WEB, WEB_RC, WEB_BETA, WEB_ALPHA, DESKTOPWIN, DESKTOPWIN_RC, DESKTOPWIN_BETA, DESKTOPWIN_ALPHA, DESKTOPMAC, DESKTOPMAC_RC, DESKTOPMAC_BETA, DESKTOPMAC_ALPHA, CHANNELGW, CHANNELGW_RC, CHANNELGW_BETA, CHANNELGW_ALPHA, CHANNELCP, CHANNELCP_RC, CHANNELCP_BETA, CHANNELCP_ALPHA, WINPHONE, WINPHONE_RC, WINPHONE_BETA, WINPHONE_ALPHA, BLACKBERRY, BLACKBERRY_RC, BLACKBERRY_BETA, BLACKBERRY_ALPHA, WINMETRO, WINMETRO_RC, WINMETRO_BETA, WINMETRO_ALPHA, S40, S40_RC, S40_BETA, S40_ALPHA, CHRONO, CHRONO_RC, CHRONO_BETA, CHRONO_ALPHA, TIZEN, TIZEN_RC, TIZEN_BETA, TIZEN_ALPHA, VIRTUAL, FIREFOXOS, FIREFOXOS_RC, FIREFOXOS_BETA, FIREFOXOS_ALPHA, IOSIPAD, IOSIPAD_RC, IOSIPAD_BETA, IOSIPAD_ALPHA, BIZIOS, BIZIOS_RC, BIZIOS_BETA, BIZIOS_ALPHA, BIZANDROID, BIZANDROID_RC, BIZANDROID_BETA, BIZANDROID_ALPHA, BIZBOT, BIZBOT_RC, BIZBOT_BETA, BIZBOT_ALPHA, CHROMEOS, CHROMEOS_RC, CHROMEOS_BETA, CHROMEOS_ALPHA, ANDROIDLITE, ANDROIDLITE_RC, ANDROIDLITE_BETA, ANDROIDLITE_ALPHA, WIN10, WIN10_RC, WIN10_BETA, WIN10_ALPHA, BIZWEB, BIZWEB_RC, BIZWEB_BETA, BIZWEB_ALPHA, DUMMYPRIMARY, DUMMYPRIMARY_RC, DUMMYPRIMARY_BETA, DUMMYPRIMARY_ALPHA, SQUARE, SQUARE_RC, SQUARE_BETA, SQUARE_ALPHA, INTERNAL, INTERNAL_RC, INTERNAL_BETA, INTERNAL_ALPHA, CLOVAFRIENDS, CLOVAFRIENDS_RC, CLOVAFRIENDS_BETA, CLOVAFRIENDS_ALPHA, WATCHOS, WATCHOS_RC, WATCHOS_BETA, WATCHOS_ALPHA]).freeze
end

module G_a_c_s_a_a_a_a_u
  ILLEGAL_ARGUMENT = 0
  NOT_FOUND = 5
  INTERNAL_ERROR = 20
  VALUE_MAP = {0 => "ILLEGAL_ARGUMENT", 5 => "NOT_FOUND", 20 => "INTERNAL_ERROR"}
  VALID_VALUES = Set.new([ILLEGAL_ARGUMENT, NOT_FOUND, INTERNAL_ERROR]).freeze
end

module G_a_c_s_a_a_a_a_e
  BUTTON = 1
  ENTRY_SELECTED = 2
  BROADCAST_ENTER = 3
  BROADCAST_STAY = 5
  BROADCAST_LEAVE = 4
  VALUE_MAP = {1 => "BUTTON", 2 => "ENTRY_SELECTED", 3 => "BROADCAST_ENTER", 5 => "BROADCAST_STAY", 4 => "BROADCAST_LEAVE"}
  VALID_VALUES = Set.new([BUTTON, ENTRY_SELECTED, BROADCAST_ENTER, BROADCAST_STAY, BROADCAST_LEAVE]).freeze
end

module G_a_c_u_a_a_a
  UNKNOWN = 0
  INTERNAL_ERROR = 31
  ILLEGAL_ARGUMENT = 25
  AUTHENTICATION_FAILED = 25
  BOT_NOT_FOUND = 1
  BOT_NOT_AVAILABLE = 2
  NOT_A_MEMBER = 3
  VALUE_MAP = {0 => "UNKNOWN", 31 => "INTERNAL_ERROR", 25 => "ILLEGAL_ARGUMENT", 25 => "AUTHENTICATION_FAILED", 1 => "BOT_NOT_FOUND", 2 => "BOT_NOT_AVAILABLE", 3 => "NOT_A_MEMBER"}
  VALID_VALUES = Set.new([UNKNOWN, INTERNAL_ERROR, ILLEGAL_ARGUMENT, AUTHENTICATION_FAILED, BOT_NOT_FOUND, BOT_NOT_AVAILABLE, NOT_A_MEMBER]).freeze
end

module G_a_h_z0_a_j
  INVALID_REQUEST = 1
  UNAUTHORIZED = 2
  CONSENT_REQUIRED = 3
  VERSION_UPDATE_REQUIRED = 4
  SERVER_ERROR = 100
  VALUE_MAP = {1 => "INVALID_REQUEST", 2 => "UNAUTHORIZED", 3 => "CONSENT_REQUIRED", 4 => "VERSION_UPDATE_REQUIRED", 100 => "SERVER_ERROR"}
  VALID_VALUES = Set.new([INVALID_REQUEST, UNAUTHORIZED, CONSENT_REQUIRED, VERSION_UPDATE_REQUIRED, SERVER_ERROR]).freeze
end

module G_a_h_z0_a_l0
  SUCCESS = 0
  FAILURE = 1
  CANCEL = 2
  VALUE_MAP = {0 => "SUCCESS", 1 => "FAILURE", 2 => "CANCEL"}
  VALID_VALUES = Set.new([SUCCESS, FAILURE, CANCEL]).freeze
end

module G_a_h_z0_a_e
  ILLEGAL_ARGUMENT = 0
  INTERNAL_ERROR = 1
  CONNECTION_ERROR = 2
  AUTHENTICATIONI_FAILED = 3
  NEED_PERMISSION_APPROVAL = 4
  COIN_NOT_USABLE = 5
  WEBVIEW_NOT_ALLOWED = 6
  VALUE_MAP = {0 => "ILLEGAL_ARGUMENT", 1 => "INTERNAL_ERROR", 2 => "CONNECTION_ERROR", 3 => "AUTHENTICATIONI_FAILED", 4 => "NEED_PERMISSION_APPROVAL", 5 => "COIN_NOT_USABLE", 6 => "WEBVIEW_NOT_ALLOWED"}
  VALID_VALUES = Set.new([ILLEGAL_ARGUMENT, INTERNAL_ERROR, CONNECTION_ERROR, AUTHENTICATIONI_FAILED, NEED_PERMISSION_APPROVAL, COIN_NOT_USABLE, WEBVIEW_NOT_ALLOWED]).freeze
end

module G_a_h_z0_a_p
  LIGHT = 1
  LIGHT_TRANSLUCENT = 2
  DARK_TRANSLUCENT = 3
  LIGHT_ICON = 4
  DARK_ICON = 5
  ADAPTABLE_ICON = 6
  ADAPTABLE_DARK_ICON = 7
  ADAPTABLE_LIGHT_ICON = 8
  VALUE_MAP = {1 => "LIGHT", 2 => "LIGHT_TRANSLUCENT", 3 => "DARK_TRANSLUCENT", 4 => "LIGHT_ICON", 5 => "DARK_ICON", 6 => "ADAPTABLE_ICON", 7 => "ADAPTABLE_DARK_ICON", 8 => "ADAPTABLE_LIGHT_ICON"}
  VALID_VALUES = Set.new([LIGHT, LIGHT_TRANSLUCENT, DARK_TRANSLUCENT, LIGHT_ICON, DARK_ICON, ADAPTABLE_ICON, ADAPTABLE_DARK_ICON, ADAPTABLE_LIGHT_ICON]).freeze
end

module G_a_h_z0_a_a
  WHITE = 1
  BLACK = 2
  VALUE_MAP = {1 => "WHITE", 2 => "BLACK"}
  VALID_VALUES = Set.new([WHITE, BLACK]).freeze
end

module G_a_h_z0_a_n
  GEOLOCATION = 1
  ADVERTISING_ID = 2
  BLUETOOTH_LE = 3
  QR_CODE = 4
  ADVERTISING_SDK = 5
  ADD_TO_HOME = 6
  SHARE_TARGET_MESSAGE = 7
  VIDEO_AUTO_PLAY = 8
  PROFILE_PLUS = 9
  VALUE_MAP = {1 => "GEOLOCATION", 2 => "ADVERTISING_ID", 3 => "BLUETOOTH_LE", 4 => "QR_CODE", 5 => "ADVERTISING_SDK", 6 => "ADD_TO_HOME", 7 => "SHARE_TARGET_MESSAGE", 8 => "VIDEO_AUTO_PLAY", 9 => "PROFILE_PLUS"}
  VALID_VALUES = Set.new([GEOLOCATION, ADVERTISING_ID, BLUETOOTH_LE, QR_CODE, ADVERTISING_SDK, ADD_TO_HOME, SHARE_TARGET_MESSAGE, VIDEO_AUTO_PLAY, PROFILE_PLUS]).freeze
end

module G_a_h_z0_a_o
  ALLOW_DIRECT_LINK = 1
  VALUE_MAP = {1 => "ALLOW_DIRECT_LINK"}
  VALID_VALUES = Set.new([ALLOW_DIRECT_LINK]).freeze
end

module G_a_h_z0_a_j0
  CONCAT = 1
  REPLACE = 2
  VALUE_MAP = {1 => "CONCAT", 2 => "REPLACE"}
  VALID_VALUES = Set.new([CONCAT, REPLACE]).freeze
end

module G_a_j0_a_a_a_d_a
  INTERNAL_ERROR = 0
  ILLEGAL_ARGUMENT = 1
  VERIFICATION_FAILED = 2
  NOT_FOUND = 3
  RETRY_LATER = 4
  HUMAN_VERIFICATION_REQUIRED = 5
  INVALID_CONTEXT = 100
  APP_UPGRADE_REQUIRED = 101
  VALUE_MAP = {0 => "INTERNAL_ERROR", 1 => "ILLEGAL_ARGUMENT", 2 => "VERIFICATION_FAILED", 3 => "NOT_FOUND", 4 => "RETRY_LATER", 5 => "HUMAN_VERIFICATION_REQUIRED", 100 => "INVALID_CONTEXT", 101 => "APP_UPGRADE_REQUIRED"}
  VALID_VALUES = Set.new([INTERNAL_ERROR, ILLEGAL_ARGUMENT, VERIFICATION_FAILED, NOT_FOUND, RETRY_LATER, HUMAN_VERIFICATION_REQUIRED, INVALID_CONTEXT, APP_UPGRADE_REQUIRED]).freeze
end

module G_a_j0_a_a_a_c_a_a
  NEW = 1
  UPDATE = 2
  EVENT = 3
  VALUE_MAP = {1 => "NEW", 2 => "UPDATE", 3 => "EVENT"}
  VALID_VALUES = Set.new([NEW, UPDATE, EVENT]).freeze
end

module G_a_c_u0_a_a_a_a_s
  INTERNAL_ERROR = 0
  ILLEGAL_ARGUMENT = 1
  VERIFICATION_FAILED = 2
  RETRY_LATER = 4
  HUMAN_VERIFICATION_REQUIRED = 5
  APP_UPGRADE_REQUIRED = 101
  VALUE_MAP = {0 => "INTERNAL_ERROR", 1 => "ILLEGAL_ARGUMENT", 2 => "VERIFICATION_FAILED", 4 => "RETRY_LATER", 5 => "HUMAN_VERIFICATION_REQUIRED", 101 => "APP_UPGRADE_REQUIRED"}
  VALID_VALUES = Set.new([INTERNAL_ERROR, ILLEGAL_ARGUMENT, VERIFICATION_FAILED, RETRY_LATER, HUMAN_VERIFICATION_REQUIRED, APP_UPGRADE_REQUIRED]).freeze
end

module G_a_c_u0_a_a_a_a_r
  UNKNOWN = 0
  FACEBOOK = 1
  APPLE = 2
  VALUE_MAP = {0 => "UNKNOWN", 1 => "FACEBOOK", 2 => "APPLE"}
  VALID_VALUES = Set.new([UNKNOWN, FACEBOOK, APPLE]).freeze
end

module G_a_c_u0_a_b_h
  INTERNAL_ERROR = 0
  ILLEGAL_ARGUMENT = 1
  VERIFICATION_FAILED = 2
  NOT_FOUND = 3
  RETRY_LATER = 4
  HUMAN_VERIFICATION_REQUIRED = 5
  INVALID_CONTEXT = 100
  APP_UPGRADE_REQUIRED = 101
  VALUE_MAP = {0 => "INTERNAL_ERROR", 1 => "ILLEGAL_ARGUMENT", 2 => "VERIFICATION_FAILED", 3 => "NOT_FOUND", 4 => "RETRY_LATER", 5 => "HUMAN_VERIFICATION_REQUIRED", 100 => "INVALID_CONTEXT", 101 => "APP_UPGRADE_REQUIRED"}
  VALID_VALUES = Set.new([INTERNAL_ERROR, ILLEGAL_ARGUMENT, VERIFICATION_FAILED, NOT_FOUND, RETRY_LATER, HUMAN_VERIFICATION_REQUIRED, INVALID_CONTEXT, APP_UPGRADE_REQUIRED]).freeze
end

module G_a_c_u0_a_b_b
  UNKNOWN = 0
  PHONE_NUMBER = 1
  EMAIL = 2
  VALUE_MAP = {0 => "UNKNOWN", 1 => "PHONE_NUMBER", 2 => "EMAIL"}
  VALID_VALUES = Set.new([UNKNOWN, PHONE_NUMBER, EMAIL]).freeze
end

module G_a_c_u0_a_b_g
  UNKNOWN = 0
  V1 = 1
  VALUE_MAP = {0 => "UNKNOWN", 1 => "V1"}
  VALID_VALUES = Set.new([UNKNOWN, V1]).freeze
end

module G_a_c_u0_a_b_t
  UNKNOWN = 0
  UNAVAILABLE = 1
  SMS = 2
  TTS = 3
  VALUE_MAP = {0 => "UNKNOWN", 1 => "UNAVAILABLE", 2 => "SMS", 3 => "TTS"}
  VALID_VALUES = Set.new([UNKNOWN, UNAVAILABLE, SMS, TTS]).freeze
end

module G_a_c_u0_a_b_j1
  UNKNOWN = 0
  SKIP = 1
  WEB_BASED = 2
  VALUE_MAP = {0 => "UNKNOWN", 1 => "SKIP", 2 => "WEB_BASED"}
  VALID_VALUES = Set.new([UNKNOWN, SKIP, WEB_BASED]).freeze
end

module G_a_c_u0_a_b_o1
  UNKNOWN = 0
  FACEBOOK = 1
  APPLE = 2
  VALUE_MAP = {0 => "UNKNOWN", 1 => "FACEBOOK", 2 => "APPLE"}
  VALID_VALUES = Set.new([UNKNOWN, FACEBOOK, APPLE]).freeze
end

module G_a_c_u0_a_b_c
  UNKNOWN = 0
  SKIP = 1
  PASSWORD = 2
  WEB_BASED = 3
  VALUE_MAP = {0 => "UNKNOWN", 1 => "SKIP", 2 => "PASSWORD", 3 => "WEB_BASED"}
  VALID_VALUES = Set.new([UNKNOWN, SKIP, PASSWORD, WEB_BASED]).freeze
end

module G_a_c_u0_a_c_b_c
  INTERNAL_ERROR = 0
  ILLEGAL_ARGUMENT = 1
  VERIFICATION_FAILED = 2
  NOT_ALLOWED_QR_CODE_LOGIN = 3
  VERIFICATION_NOTICE_FAILED = 4
  RETRY_LATER = 5
  INVALID_CONTEXT = 100
  APP_UPGRADE_REQUIRED = 101
  VALUE_MAP = {0 => "INTERNAL_ERROR", 1 => "ILLEGAL_ARGUMENT", 2 => "VERIFICATION_FAILED", 3 => "NOT_ALLOWED_QR_CODE_LOGIN", 4 => "VERIFICATION_NOTICE_FAILED", 5 => "RETRY_LATER", 100 => "INVALID_CONTEXT", 101 => "APP_UPGRADE_REQUIRED"}
  VALID_VALUES = Set.new([INTERNAL_ERROR, ILLEGAL_ARGUMENT, VERIFICATION_FAILED, NOT_ALLOWED_QR_CODE_LOGIN, VERIFICATION_NOTICE_FAILED, RETRY_LATER, INVALID_CONTEXT, APP_UPGRADE_REQUIRED]).freeze
end

module G_a_c_u0_a_d_y0
  SUCCESS = 0
  GENERAL_USER_ERROR = 62
  ACCOUNT_NOT_EXISTS = 68
  ACCOUNT_INVALID_STATUS = 68
  ACCOUNT_ALREADY_EXISTS = 68
  MERCHANT_NOT_EXISTS = 69
  MERCHANT_INVALID_STATUS = 69
  AGREEMENT_REQUIRED = 69
  BLACKLISTED = 69
  WRONG_PASSWORD = 69
  INVALID_CREDIT_CARD = 69
  LIMIT_EXCEEDED = 69
  CANNOT_PROCEED = 69
  TOO_WEAK_PASSWORD = 70
  CANNOT_CREATE_ACCOUNT = 70
  TEMPORARY_PASSWORD_ERROR = 70
  MISSING_PARAMETERS = 71
  NO_VALID_MYCODE_ACCOUNT = 71
  INSUFFICIENT_BALANCE = 71
  TRANSACTION_NOT_FOUND = 71
  TRANSACTION_FINISHED = 72
  PAYMENT_AMOUNT_WRONG = 72
  BALANCE_ACCOUNT_NOT_EXISTS = 72
  DUPLICATED_CITIZEN_ID = 72
  PAYMENT_REQUEST_NOT_FOUND = 72
  AUTH_FAILED = 73
  PASSWORD_SETTING_REQUIRED = 73
  TRANSACTION_ALREADY_PROCESSED = 73
  CURRENCY_NOT_SUPPORTED = 73
  PAYMENT_NOT_AVAILABLE = 73
  TRANSFER_REQUEST_NOT_FOUND = 73
  INVALID_PAYMENT_AMOUNT = 73
  INSUFFICIENT_PAYMENT_AMOUNT = 74
  EXTERNAL_SYSTEM_MAINTENANCE = 74
  EXTERNAL_SYSTEM_INOPERATIONAL = 74
  SESSION_EXPIRED = 74
  UPGRADE_REQUIRED = 74
  REQUEST_TOKEN_EXPIRED = 74
  OPERATION_FINISHED = 74
  EXTERNAL_SYSTEM_ERROR = 74
  PARTIAL_AMOUNT_APPROVED = 81
  PINCODE_AUTH_REQUIRED = 100
  ADDITIONAL_AUTH_REQUIRED = 100
  NOT_BOUND = 100
  OTP_USER_REGISTRATION_ERROR = 100
  OTP_CARD_REGISTRATION_ERROR = 100
  NO_AUTH_METHOD = 100
  GENERAL_USER_ERROR_RESTART = 106
  GENERAL_USER_ERROR_REFRESH = 106
  GENERAL_USER_ERROR_CLOSE = 106
  INTERNAL_SERVER_ERROR = 35
  INTERNAL_SYSTEM_MAINTENANCE = 39
  UNKNOWN_ERROR = 39
  VALUE_MAP = {0 => "SUCCESS", 62 => "GENERAL_USER_ERROR", 68 => "ACCOUNT_NOT_EXISTS", 68 => "ACCOUNT_INVALID_STATUS", 68 => "ACCOUNT_ALREADY_EXISTS", 69 => "MERCHANT_NOT_EXISTS", 69 => "MERCHANT_INVALID_STATUS", 69 => "AGREEMENT_REQUIRED", 69 => "BLACKLISTED", 69 => "WRONG_PASSWORD", 69 => "INVALID_CREDIT_CARD", 69 => "LIMIT_EXCEEDED", 69 => "CANNOT_PROCEED", 70 => "TOO_WEAK_PASSWORD", 70 => "CANNOT_CREATE_ACCOUNT", 70 => "TEMPORARY_PASSWORD_ERROR", 71 => "MISSING_PARAMETERS", 71 => "NO_VALID_MYCODE_ACCOUNT", 71 => "INSUFFICIENT_BALANCE", 71 => "TRANSACTION_NOT_FOUND", 72 => "TRANSACTION_FINISHED", 72 => "PAYMENT_AMOUNT_WRONG", 72 => "BALANCE_ACCOUNT_NOT_EXISTS", 72 => "DUPLICATED_CITIZEN_ID", 72 => "PAYMENT_REQUEST_NOT_FOUND", 73 => "AUTH_FAILED", 73 => "PASSWORD_SETTING_REQUIRED", 73 => "TRANSACTION_ALREADY_PROCESSED", 73 => "CURRENCY_NOT_SUPPORTED", 73 => "PAYMENT_NOT_AVAILABLE", 73 => "TRANSFER_REQUEST_NOT_FOUND", 73 => "INVALID_PAYMENT_AMOUNT", 74 => "INSUFFICIENT_PAYMENT_AMOUNT", 74 => "EXTERNAL_SYSTEM_MAINTENANCE", 74 => "EXTERNAL_SYSTEM_INOPERATIONAL", 74 => "SESSION_EXPIRED", 74 => "UPGRADE_REQUIRED", 74 => "REQUEST_TOKEN_EXPIRED", 74 => "OPERATION_FINISHED", 74 => "EXTERNAL_SYSTEM_ERROR", 81 => "PARTIAL_AMOUNT_APPROVED", 100 => "PINCODE_AUTH_REQUIRED", 100 => "ADDITIONAL_AUTH_REQUIRED", 100 => "NOT_BOUND", 100 => "OTP_USER_REGISTRATION_ERROR", 100 => "OTP_CARD_REGISTRATION_ERROR", 100 => "NO_AUTH_METHOD", 106 => "GENERAL_USER_ERROR_RESTART", 106 => "GENERAL_USER_ERROR_REFRESH", 106 => "GENERAL_USER_ERROR_CLOSE", 35 => "INTERNAL_SERVER_ERROR", 39 => "INTERNAL_SYSTEM_MAINTENANCE", 39 => "UNKNOWN_ERROR"}
  VALID_VALUES = Set.new([SUCCESS, GENERAL_USER_ERROR, ACCOUNT_NOT_EXISTS, ACCOUNT_INVALID_STATUS, ACCOUNT_ALREADY_EXISTS, MERCHANT_NOT_EXISTS, MERCHANT_INVALID_STATUS, AGREEMENT_REQUIRED, BLACKLISTED, WRONG_PASSWORD, INVALID_CREDIT_CARD, LIMIT_EXCEEDED, CANNOT_PROCEED, TOO_WEAK_PASSWORD, CANNOT_CREATE_ACCOUNT, TEMPORARY_PASSWORD_ERROR, MISSING_PARAMETERS, NO_VALID_MYCODE_ACCOUNT, INSUFFICIENT_BALANCE, TRANSACTION_NOT_FOUND, TRANSACTION_FINISHED, PAYMENT_AMOUNT_WRONG, BALANCE_ACCOUNT_NOT_EXISTS, DUPLICATED_CITIZEN_ID, PAYMENT_REQUEST_NOT_FOUND, AUTH_FAILED, PASSWORD_SETTING_REQUIRED, TRANSACTION_ALREADY_PROCESSED, CURRENCY_NOT_SUPPORTED, PAYMENT_NOT_AVAILABLE, TRANSFER_REQUEST_NOT_FOUND, INVALID_PAYMENT_AMOUNT, INSUFFICIENT_PAYMENT_AMOUNT, EXTERNAL_SYSTEM_MAINTENANCE, EXTERNAL_SYSTEM_INOPERATIONAL, SESSION_EXPIRED, UPGRADE_REQUIRED, REQUEST_TOKEN_EXPIRED, OPERATION_FINISHED, EXTERNAL_SYSTEM_ERROR, PARTIAL_AMOUNT_APPROVED, PINCODE_AUTH_REQUIRED, ADDITIONAL_AUTH_REQUIRED, NOT_BOUND, OTP_USER_REGISTRATION_ERROR, OTP_CARD_REGISTRATION_ERROR, NO_AUTH_METHOD, GENERAL_USER_ERROR_RESTART, GENERAL_USER_ERROR_REFRESH, GENERAL_USER_ERROR_CLOSE, INTERNAL_SERVER_ERROR, INTERNAL_SYSTEM_MAINTENANCE, UNKNOWN_ERROR]).freeze
end

module G_a_c_u0_a_d_o0
  NONE = 1
  JP = 2
  TW = 3
  TH = 4
  ID = 5
  VALUE_MAP = {1 => "NONE", 2 => "JP", 3 => "TW", 4 => "TH", 5 => "ID"}
  VALID_VALUES = Set.new([NONE, JP, TW, TH, ID]).freeze
end

module G_a_c_u0_a_d_d0
  NONE = 0
  UNIQUE = 1
  LIST = 2
  VALUE_MAP = {0 => "NONE", 1 => "UNIQUE", 2 => "LIST"}
  VALID_VALUES = Set.new([NONE, UNIQUE, LIST]).freeze
end

module G_a_c_u0_a_d_u0
  DEPOSIT = 1
  TRANSFER = 2
  TRANSFER_REQUEST = 3
  DUTCH = 4
  BALANCE_TRX_LIST = 5
  CREDITCARD_PAY_LIST = 6
  CREDITCARD_REG = 7
  SETTINGS = 8
  CUSTOM = 100
  VALUE_MAP = {1 => "DEPOSIT", 2 => "TRANSFER", 3 => "TRANSFER_REQUEST", 4 => "DUTCH", 5 => "BALANCE_TRX_LIST", 6 => "CREDITCARD_PAY_LIST", 7 => "CREDITCARD_REG", 8 => "SETTINGS", 100 => "CUSTOM"}
  VALID_VALUES = Set.new([DEPOSIT, TRANSFER, TRANSFER_REQUEST, DUTCH, BALANCE_TRX_LIST, CREDITCARD_PAY_LIST, CREDITCARD_REG, SETTINGS, CUSTOM]).freeze
end

module G_a_c_u0_a_d_t0
  BUILTIN = 1
  CHANNEL = 2
  APP = 3
  WEB = 4
  VALUE_MAP = {1 => "BUILTIN", 2 => "CHANNEL", 3 => "APP", 4 => "WEB"}
  VALID_VALUES = Set.new([BUILTIN, CHANNEL, APP, WEB]).freeze
end

module G_a_c_u0_a_d_s0
  NONE = 1
  NEW = 2
  HOT = 3
  EVENT = 4
  VALUE_MAP = {1 => "NONE", 2 => "NEW", 3 => "HOT", 4 => "EVENT"}
  VALID_VALUES = Set.new([NONE, NEW, HOT, EVENT]).freeze
end

module G_a_c_u0_a_d_n1
  UNKNOWN = 0
  HORIZONTAL = 1
  SQUARE = 2
  VALUE_MAP = {0 => "UNKNOWN", 1 => "HORIZONTAL", 2 => "SQUARE"}
  VALID_VALUES = Set.new([UNKNOWN, HORIZONTAL, SQUARE]).freeze
end

module G_a_c_u0_a_d_k
  BANK = 1
  ATM = 2
  CONVENIENCE_STORE = 3
  DEBIT_CARD = 4
  E_CHANNEL = 5
  VIRTUAL_BANK_ACCOUNT = 6
  AUTO = 7
  CVS_LAWSON = 8
  SEVEN_BANK_DEPOSIT = 9
  CODE_DEPOSIT = 10
  VALUE_MAP = {1 => "BANK", 2 => "ATM", 3 => "CONVENIENCE_STORE", 4 => "DEBIT_CARD", 5 => "E_CHANNEL", 6 => "VIRTUAL_BANK_ACCOUNT", 7 => "AUTO", 8 => "CVS_LAWSON", 9 => "SEVEN_BANK_DEPOSIT", 10 => "CODE_DEPOSIT"}
  VALID_VALUES = Set.new([BANK, ATM, CONVENIENCE_STORE, DEBIT_CARD, E_CHANNEL, VIRTUAL_BANK_ACCOUNT, AUTO, CVS_LAWSON, SEVEN_BANK_DEPOSIT, CODE_DEPOSIT]).freeze
end

module G_a_c_u0_a_d_y7
  JOINING_AGREEMENT = 1
  PAYMENT = 2
  SETTING = 3
  ACCOUNT_SETTING = 4
  FINANCE_GATEWAY = 5
  JOINING_AGREEMENT_V2 = 6
  IMAGE = 7
  SETTING_MENU = 8
  VALUE_MAP = {1 => "JOINING_AGREEMENT", 2 => "PAYMENT", 3 => "SETTING", 4 => "ACCOUNT_SETTING", 5 => "FINANCE_GATEWAY", 6 => "JOINING_AGREEMENT_V2", 7 => "IMAGE", 8 => "SETTING_MENU"}
  VALID_VALUES = Set.new([JOINING_AGREEMENT, PAYMENT, SETTING, ACCOUNT_SETTING, FINANCE_GATEWAY, JOINING_AGREEMENT_V2, IMAGE, SETTING_MENU]).freeze
end

module G_a_c_u0_a_d_o7
  NONE = 0
  ONE_TIME_PAYMENT_AGREEMENT = 1
  SIMPLE_JOINING_AGREEMENT = 2
  LINE_CARD_CASH_AGREEMENT = 3
  LINE_CARD_MONEY_AGREEMENT = 4
  JOINING_WITH_LINE_CARD_AGREEMENT = 5
  LINE_CARD_AGREEMENT = 6
  VALUE_MAP = {0 => "NONE", 1 => "ONE_TIME_PAYMENT_AGREEMENT", 2 => "SIMPLE_JOINING_AGREEMENT", 3 => "LINE_CARD_CASH_AGREEMENT", 4 => "LINE_CARD_MONEY_AGREEMENT", 5 => "JOINING_WITH_LINE_CARD_AGREEMENT", 6 => "LINE_CARD_AGREEMENT"}
  VALID_VALUES = Set.new([NONE, ONE_TIME_PAYMENT_AGREEMENT, SIMPLE_JOINING_AGREEMENT, LINE_CARD_CASH_AGREEMENT, LINE_CARD_MONEY_AGREEMENT, JOINING_WITH_LINE_CARD_AGREEMENT, LINE_CARD_AGREEMENT]).freeze
end

module G_a_c_u0_a_d_v1
  VALUE_MAP = {}
  VALID_VALUES = Set.new([]).freeze
end

module G_a_c_u0_a_d_b8
  UNSPECIFIED = 0
  LV1 = 1
  LV2 = 2
  LV3 = 3
  LV4 = 4
  LV9 = 9
  VALUE_MAP = {0 => "UNSPECIFIED", 1 => "LV1", 2 => "LV2", 3 => "LV3", 4 => "LV4", 9 => "LV9"}
  VALID_VALUES = Set.new([UNSPECIFIED, LV1, LV2, LV3, LV4, LV9]).freeze
end

module G_a_c_u0_a_d_t7
  NONE = 1
  MESSAGE = 2
  NOTIFICATION = 3
  VALUE_MAP = {1 => "NONE", 2 => "MESSAGE", 3 => "NOTIFICATION"}
  VALID_VALUES = Set.new([NONE, MESSAGE, NOTIFICATION]).freeze
end

module G_a_c_u0_a_d_g1
  NONE = 1
  DEPOSIT_BANKS = 2
  BALANCE_TRX_LIST = 3
  TRANSFER_REQ_LIST = 4
  CREDITCARD_PAY_LIST = 5
  BALANCE_PAY_LIST = 6
  LINECASH_JOIN = 7
  IDENTIFICATION_UPLOAD = 8
  CUSTOM_CENTER = 9
  VALUE_MAP = {1 => "NONE", 2 => "DEPOSIT_BANKS", 3 => "BALANCE_TRX_LIST", 4 => "TRANSFER_REQ_LIST", 5 => "CREDITCARD_PAY_LIST", 6 => "BALANCE_PAY_LIST", 7 => "LINECASH_JOIN", 8 => "IDENTIFICATION_UPLOAD", 9 => "CUSTOM_CENTER"}
  VALID_VALUES = Set.new([NONE, DEPOSIT_BANKS, BALANCE_TRX_LIST, TRANSFER_REQ_LIST, CREDITCARD_PAY_LIST, BALANCE_PAY_LIST, LINECASH_JOIN, IDENTIFICATION_UPLOAD, CUSTOM_CENTER]).freeze
end

module G_a_c_u0_a_d_m
  AVAILABLE = 0
  DIFFERENT_REGION = 1
  UNSUPPORTED_DEVICE = 2
  PHONE_NUMBER_UNREGISTERED = 3
  UNAVAILABLE_FROM_LINE_PAY = 4
  INVALID_USER = 5
  VALUE_MAP = {0 => "AVAILABLE", 1 => "DIFFERENT_REGION", 2 => "UNSUPPORTED_DEVICE", 3 => "PHONE_NUMBER_UNREGISTERED", 4 => "UNAVAILABLE_FROM_LINE_PAY", 5 => "INVALID_USER"}
  VALID_VALUES = Set.new([AVAILABLE, DIFFERENT_REGION, UNSUPPORTED_DEVICE, PHONE_NUMBER_UNREGISTERED, UNAVAILABLE_FROM_LINE_PAY, INVALID_USER]).freeze
end

module G_a_c_u0_a_d_a
  PASSWORD = 1
  CARRY_FORWARD = 2
  VALUE_MAP = {1 => "PASSWORD", 2 => "CARRY_FORWARD"}
  VALID_VALUES = Set.new([PASSWORD, CARRY_FORWARD]).freeze
end

module G_a_c_u0_a_d_a1
  UNKNOWN = 0
  MAIN = 12
  DEPOSIT = 1
  DEPOSIT_BANK = 10
  DEPOSIT_DEBIT = 11
  DEPOSIT_ATM = 8
  DEPOSIT_CONVENIENCE_STORE = 9
  WITHDRAWAL = 2
  TRANSFER = 3
  PAYMENT = 4
  TRANSFER_REQUEST = 5
  DUTCH = 6
  REMOVAL = 7
  IDENTIFICATION = 13
  CREDIT_CARD_REGISTRATION = 14
  VALUE_MAP = {0 => "UNKNOWN", 12 => "MAIN", 1 => "DEPOSIT", 10 => "DEPOSIT_BANK", 11 => "DEPOSIT_DEBIT", 8 => "DEPOSIT_ATM", 9 => "DEPOSIT_CONVENIENCE_STORE", 2 => "WITHDRAWAL", 3 => "TRANSFER", 4 => "PAYMENT", 5 => "TRANSFER_REQUEST", 6 => "DUTCH", 7 => "REMOVAL", 13 => "IDENTIFICATION", 14 => "CREDIT_CARD_REGISTRATION"}
  VALID_VALUES = Set.new([UNKNOWN, MAIN, DEPOSIT, DEPOSIT_BANK, DEPOSIT_DEBIT, DEPOSIT_ATM, DEPOSIT_CONVENIENCE_STORE, WITHDRAWAL, TRANSFER, PAYMENT, TRANSFER_REQUEST, DUTCH, REMOVAL, IDENTIFICATION, CREDIT_CARD_REGISTRATION]).freeze
end

module G_a_c_u0_a_d_e0
  TTS = 1
  BANK_DEPOSIT = 2
  CREDIT_CARD = 3
  BALANCE = 4
  INDIVIDUAL_INFO = 5
  REFERENCE_NO = 6
  CITIZEN_ID = 7
  VALUE_MAP = {1 => "TTS", 2 => "BANK_DEPOSIT", 3 => "CREDIT_CARD", 4 => "BALANCE", 5 => "INDIVIDUAL_INFO", 6 => "REFERENCE_NO", 7 => "CITIZEN_ID"}
  VALID_VALUES = Set.new([TTS, BANK_DEPOSIT, CREDIT_CARD, BALANCE, INDIVIDUAL_INFO, REFERENCE_NO, CITIZEN_ID]).freeze
end

module G_a_c_u0_a_d_b1
  GENERAL = 1
  VALUE_MAP = {1 => "GENERAL"}
  VALID_VALUES = Set.new([GENERAL]).freeze
end

module G_a_c_u0_a_d_f0
  UNKNOWN = 0
  NONE = 1
  LP_PINCODE = 2
  OTP = 3
  IDPW = 4
  VALUE_MAP = {0 => "UNKNOWN", 1 => "NONE", 2 => "LP_PINCODE", 3 => "OTP", 4 => "IDPW"}
  VALID_VALUES = Set.new([UNKNOWN, NONE, LP_PINCODE, OTP, IDPW]).freeze
end

module G_a_c_u0_a_d_r1
  SESSION = 1
  VALUE_MAP = {1 => "SESSION"}
  VALID_VALUES = Set.new([SESSION]).freeze
end

module G_a_c_u0_a_d_w7
  DUTCH_FROM = 1
  FROM = 2
  DUTCH_TO = 3
  TO = 4
  MULTI_TO = 5
  MULTI_FROM = 6
  VALUE_MAP = {1 => "DUTCH_FROM", 2 => "FROM", 3 => "DUTCH_TO", 4 => "TO", 5 => "MULTI_TO", 6 => "MULTI_FROM"}
  VALID_VALUES = Set.new([DUTCH_FROM, FROM, DUTCH_TO, TO, MULTI_TO, MULTI_FROM]).freeze
end

module G_a_c_u0_a_d_v7
  FAIL = 5
  VALUE_MAP = {5 => "FAIL"}
  VALID_VALUES = Set.new([FAIL]).freeze
end

module G_a_c_u0_a_d_n8
  LINE = 1
  LINEPAY = 2
  VALUE_MAP = {1 => "LINE", 2 => "LINEPAY"}
  VALID_VALUES = Set.new([LINE, LINEPAY]).freeze
end

module G_a_c_u0_a_d_n0
  SCALE2 = 1
  SCALE3 = 2
  HDPI = 3
  XHDPI = 4
  VALUE_MAP = {1 => "SCALE2", 2 => "SCALE3", 3 => "HDPI", 4 => "XHDPI"}
  VALID_VALUES = Set.new([SCALE2, SCALE3, HDPI, XHDPI]).freeze
end

module G_a_c_u0_a_d_m8
  OK = 1
  NOT_ALIVE_USER = 2
  NEED_BALANCE_DISCLAIMER = 3
  ECONTEXT_CHARGING_IN_PROGRESS = 4
  TRANSFER_IN_PROGRESS = 6
  OK_REMAINING_BALANCE = 7
  ADVERSE_BALANCE = 8
  CONFIRM_REQUIRED = 9
  VALUE_MAP = {1 => "OK", 2 => "NOT_ALIVE_USER", 3 => "NEED_BALANCE_DISCLAIMER", 4 => "ECONTEXT_CHARGING_IN_PROGRESS", 6 => "TRANSFER_IN_PROGRESS", 7 => "OK_REMAINING_BALANCE", 8 => "ADVERSE_BALANCE", 9 => "CONFIRM_REQUIRED"}
  VALID_VALUES = Set.new([OK, NOT_ALIVE_USER, NEED_BALANCE_DISCLAIMER, ECONTEXT_CHARGING_IN_PROGRESS, TRANSFER_IN_PROGRESS, OK_REMAINING_BALANCE, ADVERSE_BALANCE, CONFIRM_REQUIRED]).freeze
end

module G_a_c_u0_a_d_d
  BANK_ALL = 1
  BANK_DEPOSIT = 2
  BANK_WITHDRAWAL = 3
  VALUE_MAP = {1 => "BANK_ALL", 2 => "BANK_DEPOSIT", 3 => "BANK_WITHDRAWAL"}
  VALID_VALUES = Set.new([BANK_ALL, BANK_DEPOSIT, BANK_WITHDRAWAL]).freeze
end

module G_a_c_u0_a_d_c
  PERSONAL_ACCOUNT = 1
  CURRENT_ACCOUNT = 2
  VALUE_MAP = {1 => "PERSONAL_ACCOUNT", 2 => "CURRENT_ACCOUNT"}
  VALID_VALUES = Set.new([PERSONAL_ACCOUNT, CURRENT_ACCOUNT]).freeze
end

module G_a_c_u0_a_d_n
  CHARGE = 1
  WITHDRAW = 2
  VALUE_MAP = {1 => "CHARGE", 2 => "WITHDRAW"}
  VALID_VALUES = Set.new([CHARGE, WITHDRAW]).freeze
end

module G_a_c_u0_a_d_m0
  NULL = 0
  ATM = 1
  CONVENIENCE_STORE = 2
  VALUE_MAP = {0 => "NULL", 1 => "ATM", 2 => "CONVENIENCE_STORE"}
  VALID_VALUES = Set.new([NULL, ATM, CONVENIENCE_STORE]).freeze
end

module G_a_c_u0_a_d_q
  UNKNOWN = 0
  LP = 1
  PAYMETHOD_CREDIT_CARD = 2
  PAYMETHOD_BANK_ACCOUNT = 3
  VALUE_MAP = {0 => "UNKNOWN", 1 => "LP", 2 => "PAYMETHOD_CREDIT_CARD", 3 => "PAYMETHOD_BANK_ACCOUNT"}
  VALID_VALUES = Set.new([UNKNOWN, LP, PAYMETHOD_CREDIT_CARD, PAYMETHOD_BANK_ACCOUNT]).freeze
end

module G_a_c_u0_a_d_p
  NULL = 0
  ALIVE = 1
  WAIT = 2
  REMOVE = 3
  IDENTIFICATION_REQUIRED = 4
  IDENTIFICATION_WAIT = 5
  MAINTENANCE = 6
  VALUE_MAP = {0 => "NULL", 1 => "ALIVE", 2 => "WAIT", 3 => "REMOVE", 4 => "IDENTIFICATION_REQUIRED", 5 => "IDENTIFICATION_WAIT", 6 => "MAINTENANCE"}
  VALID_VALUES = Set.new([NULL, ALIVE, WAIT, REMOVE, IDENTIFICATION_REQUIRED, IDENTIFICATION_WAIT, MAINTENANCE]).freeze
end

module G_a_c_u0_a_d_k0
  UNKNOWN = 0
  VISA = 1
  MASTER = 2
  AMEX = 3
  DINERS = 4
  JCB = 5
  VALUE_MAP = {0 => "UNKNOWN", 1 => "VISA", 2 => "MASTER", 3 => "AMEX", 4 => "DINERS", 5 => "JCB"}
  VALID_VALUES = Set.new([UNKNOWN, VISA, MASTER, AMEX, DINERS, JCB]).freeze
end

module G_a_c_u0_a_d_s
  BALANCE_INQUIRY = 1
  VALUE_MAP = {1 => "BALANCE_INQUIRY"}
  VALID_VALUES = Set.new([BALANCE_INQUIRY]).freeze
end

module G_a_c_u0_a_d_i
  PASSWORD = 1
  JOIN = 2
  VALUE_MAP = {1 => "PASSWORD", 2 => "JOIN"}
  VALID_VALUES = Set.new([PASSWORD, JOIN]).freeze
end

module G_a_c_u0_a_d_j1
  UNKNOWN = 0
  MORE_TAB = 1
  CHAT_ROOM_PLUS_MENU = 2
  TRANSFER = 3
  PAYMENT = 4
  LINECARD = 5
  INVITATION = 6
  VALUE_MAP = {0 => "UNKNOWN", 1 => "MORE_TAB", 2 => "CHAT_ROOM_PLUS_MENU", 3 => "TRANSFER", 4 => "PAYMENT", 5 => "LINECARD", 6 => "INVITATION"}
  VALID_VALUES = Set.new([UNKNOWN, MORE_TAB, CHAT_ROOM_PLUS_MENU, TRANSFER, PAYMENT, LINECARD, INVITATION]).freeze
end

module G_a_c_u0_a_d_i1
  CITIZEN_ID = 1
  PASSPORT = 2
  WORK_PERMIT = 3
  ALIEN_CARD = 4
  VALUE_MAP = {1 => "CITIZEN_ID", 2 => "PASSPORT", 3 => "WORK_PERMIT", 4 => "ALIEN_CARD"}
  VALID_VALUES = Set.new([CITIZEN_ID, PASSPORT, WORK_PERMIT, ALIEN_CARD]).freeze
end

module G_a_c_u0_a_d_i8
  UNKNOWN = 0
  PAYMENT = 1
  PAYMENT_CANCEL = 2
  PARTIAL_CANCEL = 3
  TRANSFER = 4
  TRANSFER_FAIL = 13
  NOT_JOIN_TRANSFER = 11
  NOT_JOIN_TRANSFER_COMPLETE = 12
  NOT_JOIN_TRANSFER_REFUND = 9
  DEPOSIT = 5
  DEPOSIT_WAIT = 10
  DEPOSIT_CANCEL = 14
  WITHDRAW = 6
  WITHDRAW_COMPLETE = 7
  WITHDRAW_FAIL = 8
  VALUE_MAP = {0 => "UNKNOWN", 1 => "PAYMENT", 2 => "PAYMENT_CANCEL", 3 => "PARTIAL_CANCEL", 4 => "TRANSFER", 13 => "TRANSFER_FAIL", 11 => "NOT_JOIN_TRANSFER", 12 => "NOT_JOIN_TRANSFER_COMPLETE", 9 => "NOT_JOIN_TRANSFER_REFUND", 5 => "DEPOSIT", 10 => "DEPOSIT_WAIT", 14 => "DEPOSIT_CANCEL", 6 => "WITHDRAW", 7 => "WITHDRAW_COMPLETE", 8 => "WITHDRAW_FAIL"}
  VALID_VALUES = Set.new([UNKNOWN, PAYMENT, PAYMENT_CANCEL, PARTIAL_CANCEL, TRANSFER, TRANSFER_FAIL, NOT_JOIN_TRANSFER, NOT_JOIN_TRANSFER_COMPLETE, NOT_JOIN_TRANSFER_REFUND, DEPOSIT, DEPOSIT_WAIT, DEPOSIT_CANCEL, WITHDRAW, WITHDRAW_COMPLETE, WITHDRAW_FAIL]).freeze
end

module G_a_c_u0_a_d_p1
  NULL = 0
  BALANCE = 1
  CREDIT_CARD = 2
  POINT = 3
  DEBIT_PAYMENT = 4
  VALUE_MAP = {0 => "NULL", 1 => "BALANCE", 2 => "CREDIT_CARD", 3 => "POINT", 4 => "DEBIT_PAYMENT"}
  VALID_VALUES = Set.new([NULL, BALANCE, CREDIT_CARD, POINT, DEBIT_PAYMENT]).freeze
end

module G_a_c_u0_a_d_q7
  NULL = 0
  ATM = 1
  CONVENIENCE_STORE = 2
  ALL = 3
  VALUE_MAP = {0 => "NULL", 1 => "ATM", 2 => "CONVENIENCE_STORE", 3 => "ALL"}
  VALID_VALUES = Set.new([NULL, ATM, CONVENIENCE_STORE, ALL]).freeze
end

module G_a_c_u0_a_d_r7
  ALL = 7
  READY = 1
  COMPLETE = 2
  WAIT = 3
  CANCEL = 4
  FAIL = 5
  EXPIRE = 6
  VALUE_MAP = {7 => "ALL", 1 => "READY", 2 => "COMPLETE", 3 => "WAIT", 4 => "CANCEL", 5 => "FAIL", 6 => "EXPIRE"}
  VALID_VALUES = Set.new([ALL, READY, COMPLETE, WAIT, CANCEL, FAIL, EXPIRE]).freeze
end

module G_a_c_u0_a_d_z
  SUCCESS = 1
  FAILURE = 2
  IN_PROGRESS = 3
  VALUE_MAP = {1 => "SUCCESS", 2 => "FAILURE", 3 => "IN_PROGRESS"}
  VALID_VALUES = Set.new([SUCCESS, FAILURE, IN_PROGRESS]).freeze
end

module G_a_c_u0_a_d_v
  FRIEND_FROM = 1
  FRIEND_TO = 2
  VALUE_MAP = {1 => "FRIEND_FROM", 2 => "FRIEND_TO"}
  VALID_VALUES = Set.new([FRIEND_FROM, FRIEND_TO]).freeze
end

module G_a_c_u0_a_d_a0
  MID = 1
  REF_NO = 2
  SVC_NO = 3
  VALUE_MAP = {1 => "MID", 2 => "REF_NO", 3 => "SVC_NO"}
  VALID_VALUES = Set.new([MID, REF_NO, SVC_NO]).freeze
end

module G_a_c_u0_a_d_j7
  MENUS = 1
  URLS = 2
  CARD_VALIDATION_RULES = 3
  MESSAGES = 4
  MYCODE_SHORTCUT = 5
  INVOICE = 6
  FEATURES = 7
  VALUE_MAP = {1 => "MENUS", 2 => "URLS", 3 => "CARD_VALIDATION_RULES", 4 => "MESSAGES", 5 => "MYCODE_SHORTCUT", 6 => "INVOICE", 7 => "FEATURES"}
  VALID_VALUES = Set.new([MENUS, URLS, CARD_VALIDATION_RULES, MESSAGES, MYCODE_SHORTCUT, INVOICE, FEATURES]).freeze
end

module G_a_c_u0_a_d_a8
  TRANSFER_ACCEPTABLE = 1
  REMOVE_INVOICE = 2
  INVOICE_CODE = 3
  SHOW_ALWAYS_INVOICE = 4
  VALUE_MAP = {1 => "TRANSFER_ACCEPTABLE", 2 => "REMOVE_INVOICE", 3 => "INVOICE_CODE", 4 => "SHOW_ALWAYS_INVOICE"}
  VALID_VALUES = Set.new([TRANSFER_ACCEPTABLE, REMOVE_INVOICE, INVOICE_CODE, SHOW_ALWAYS_INVOICE]).freeze
end

module G_a_c_u0_a_d_o1
  MAIN = 1
  MAIN_PLUS_BUTTON = 2
  VALUE_MAP = {1 => "MAIN", 2 => "MAIN_PLUS_BUTTON"}
  VALID_VALUES = Set.new([MAIN, MAIN_PLUS_BUTTON]).freeze
end

module G_a_c_u0_a_d_m1
  AUTH_METHODS_SELECTION = 1
  PASSWORD_SETTING = 2
  LINE_POINT_PAYMENT_INFO = 3
  PASSWORD_SETTING_AGAIN = 4
  PASSWORD = 5
  GENERAL = 6
  PASSWORD_TEMPORARY = 7
  PASSWORD_MYCODE_AUTH = 8
  SIGNUP = 9
  CARD_LIST = 10
  MYCODE_POINT_INFO = 11
  COUPON_GUIDE = 12
  VALUE_MAP = {1 => "AUTH_METHODS_SELECTION", 2 => "PASSWORD_SETTING", 3 => "LINE_POINT_PAYMENT_INFO", 4 => "PASSWORD_SETTING_AGAIN", 5 => "PASSWORD", 6 => "GENERAL", 7 => "PASSWORD_TEMPORARY", 8 => "PASSWORD_MYCODE_AUTH", 9 => "SIGNUP", 10 => "CARD_LIST", 11 => "MYCODE_POINT_INFO", 12 => "COUPON_GUIDE"}
  VALID_VALUES = Set.new([AUTH_METHODS_SELECTION, PASSWORD_SETTING, LINE_POINT_PAYMENT_INFO, PASSWORD_SETTING_AGAIN, PASSWORD, GENERAL, PASSWORD_TEMPORARY, PASSWORD_MYCODE_AUTH, SIGNUP, CARD_LIST, MYCODE_POINT_INFO, COUPON_GUIDE]).freeze
end

module G_a_c_u0_a_d_t
  IPASS = 1
  VALUE_MAP = {1 => "IPASS"}
  VALID_VALUES = Set.new([IPASS]).freeze
end

module G_a_c_u0_a_d_e8
  UNKNOWN = 0
  ALIVE = 1
  NOT_JOIN = 6
  SUSPENDED = 7
  REMOVED = 8
  VALUE_MAP = {0 => "UNKNOWN", 1 => "ALIVE", 6 => "NOT_JOIN", 7 => "SUSPENDED", 8 => "REMOVED"}
  VALID_VALUES = Set.new([UNKNOWN, ALIVE, NOT_JOIN, SUSPENDED, REMOVED]).freeze
end

module G_a_c_u0_a_d_s1
  UNKNOWN = 0
  VER1 = 1
  VER2 = 2
  EXTERNAL = 4
  NONE = 3
  VALUE_MAP = {0 => "UNKNOWN", 1 => "VER1", 2 => "VER2", 4 => "EXTERNAL", 3 => "NONE"}
  VALID_VALUES = Set.new([UNKNOWN, VER1, VER2, EXTERNAL, NONE]).freeze
end

module G_a_c_u0_a_d_f1
  TRANSFER = 1
  TRANSFER_REQUEST = 2
  DUTCH = 3
  INVITATION = 4
  VALUE_MAP = {1 => "TRANSFER", 2 => "TRANSFER_REQUEST", 3 => "DUTCH", 4 => "INVITATION"}
  VALID_VALUES = Set.new([TRANSFER, TRANSFER_REQUEST, DUTCH, INVITATION]).freeze
end

module G_a_c_u0_a_e_q
  UNKNOWN = 0
  SUCCESS = 1
  AUTHENTICATION_FAILURE = 2
  TIMEOUT = 3
  MAINTENANCE = 4
  ILLEGAL_ARGUMENT = 5
  INTERNAL_ERROR = 6
  VALUE_MAP = {0 => "UNKNOWN", 1 => "SUCCESS", 2 => "AUTHENTICATION_FAILURE", 3 => "TIMEOUT", 4 => "MAINTENANCE", 5 => "ILLEGAL_ARGUMENT", 6 => "INTERNAL_ERROR"}
  VALID_VALUES = Set.new([UNKNOWN, SUCCESS, AUTHENTICATION_FAILURE, TIMEOUT, MAINTENANCE, ILLEGAL_ARGUMENT, INTERNAL_ERROR]).freeze
end

module J0_a_e_a_b_mg
  UNKNOWN = 0
  GOURMET = 1
  BEAUTY = 2
  TRAVEL = 3
  SHOPPING = 4
  ENTERTAINMENT = 5
  SPORTS = 6
  TRANSPORT = 7
  LIFE = 8
  HOSPITAL = 9
  FINANCE = 10
  EDUCATION = 11
  OTHER = 12
  ALL = 39
  VALUE_MAP = {0 => "UNKNOWN", 1 => "GOURMET", 2 => "BEAUTY", 3 => "TRAVEL", 4 => "SHOPPING", 5 => "ENTERTAINMENT", 6 => "SPORTS", 7 => "TRANSPORT", 8 => "LIFE", 9 => "HOSPITAL", 10 => "FINANCE", 11 => "EDUCATION", 12 => "OTHER", 39 => "ALL"}
  VALID_VALUES = Set.new([UNKNOWN, GOURMET, BEAUTY, TRAVEL, SHOPPING, ENTERTAINMENT, SPORTS, TRANSPORT, LIFE, HOSPITAL, FINANCE, EDUCATION, OTHER, ALL]).freeze
end

module J0_a_a_b_a_a_o1
  PURCHASE_ONLY = 0
  PURCHASE_OR_SUBSCRIPTION = 1
  SUBSCRIPTION_ONLY = 2
  VALUE_MAP = {0 => "PURCHASE_ONLY", 1 => "PURCHASE_OR_SUBSCRIPTION", 2 => "SUBSCRIPTION_ONLY"}
  VALID_VALUES = Set.new([PURCHASE_ONLY, PURCHASE_OR_SUBSCRIPTION, SUBSCRIPTION_ONLY]).freeze
end

module J0_a_a_b_a_a_l2
  NONE = 0
  CARRIER = 1
  BUDDY = 2
  INSTALL = 3
  MISSION = 4
  MUSTBUY = 5
  VALUE_MAP = {0 => "NONE", 1 => "CARRIER", 2 => "BUDDY", 3 => "INSTALL", 4 => "MISSION", 5 => "MUSTBUY"}
  VALID_VALUES = Set.new([NONE, CARRIER, BUDDY, INSTALL, MISSION, MUSTBUY]).freeze
end

module J0_a_a_b_a_a_k2
  DEFAULT = 1
  VIEW_VIDEO = 2
  VALUE_MAP = {1 => "DEFAULT", 2 => "VIEW_VIDEO"}
  VALID_VALUES = Set.new([DEFAULT, VIEW_VIDEO]).freeze
end

module J0_a_a_b_a_a_g3
  STATIC = 1
  ANIMATION = 2
  SOUND = 3
  ANIMATION_SOUND = 4
  POPUP = 5
  POPUP_SOUND = 6
  NAME_TEXT = 7
  PER_STICKER_TEXT = 8
  VALUE_MAP = {1 => "STATIC", 2 => "ANIMATION", 3 => "SOUND", 4 => "ANIMATION_SOUND", 5 => "POPUP", 6 => "POPUP_SOUND", 7 => "NAME_TEXT", 8 => "PER_STICKER_TEXT"}
  VALID_VALUES = Set.new([STATIC, ANIMATION, SOUND, ANIMATION_SOUND, POPUP, POPUP_SOUND, NAME_TEXT, PER_STICKER_TEXT]).freeze
end

module J0_a_a_b_a_a_e1
  OK = 0
  PRODUCT_UNSUPPORTED = 1
  TEXT_NOT_SPECIFIED = 2
  TEXT_STYLE_UNAVAILABLE = 3
  CHARACTER_COUNT_LIMIT_EXCEEDED = 4
  CONTAINS_INVALID_WORD = 5
  VALUE_MAP = {0 => "OK", 1 => "PRODUCT_UNSUPPORTED", 2 => "TEXT_NOT_SPECIFIED", 3 => "TEXT_STYLE_UNAVAILABLE", 4 => "CHARACTER_COUNT_LIMIT_EXCEEDED", 5 => "CONTAINS_INVALID_WORD"}
  VALID_VALUES = Set.new([OK, PRODUCT_UNSUPPORTED, TEXT_NOT_SPECIFIED, TEXT_STYLE_UNAVAILABLE, CHARACTER_COUNT_LIMIT_EXCEEDED, CONTAINS_INVALID_WORD]).freeze
end

module J0_a_a_b_a_a_h3
  NORMAL = 0
  BIG = 1
  VALUE_MAP = {0 => "NORMAL", 1 => "BIG"}
  VALID_VALUES = Set.new([NORMAL, BIG]).freeze
end

module J0_a_a_b_a_a_m1
  FOREGROUND = 0
  BACKGROUND = 1
  VALUE_MAP = {0 => "FOREGROUND", 1 => "BACKGROUND"}
  VALID_VALUES = Set.new([FOREGROUND, BACKGROUND]).freeze
end

module J0_a_a_b_a_a_d4
  STATIC = 1
  ANIMATION = 2
  VALUE_MAP = {1 => "STATIC", 2 => "ANIMATION"}
  VALID_VALUES = Set.new([STATIC, ANIMATION]).freeze
end

module J0_a_a_b_a_a_l3
  STATIC = 1
  ANIMATION = 2
  VALUE_MAP = {1 => "STATIC", 2 => "ANIMATION"}
  VALID_VALUES = Set.new([STATIC, ANIMATION]).freeze
end

module J0_a_a_b_a_a_y3
  GENERAL = 0
  CREATORS = 1
  STICON = 2
  VALUE_MAP = {0 => "GENERAL", 1 => "CREATORS", 2 => "STICON"}
  VALID_VALUES = Set.new([GENERAL, CREATORS, STICON]).freeze
end

module J0_a_a_b_a_a_z1
  STICKER = 1
  THEME = 2
  STICON = 3
  VALUE_MAP = {1 => "STICKER", 2 => "THEME", 3 => "STICON"}
  VALID_VALUES = Set.new([STICKER, THEME, STICON]).freeze
end

module J0_a_e_a_b_t1
  RESERVED = 0
  OFFICIAL = 1
  LINE_AT_0 = 2
  LINE_AT = 3
  VALUE_MAP = {0 => "RESERVED", 1 => "OFFICIAL", 2 => "LINE_AT_0", 3 => "LINE_AT"}
  VALID_VALUES = Set.new([RESERVED, OFFICIAL, LINE_AT_0, LINE_AT]).freeze
end

module Com_linecorp_square_protocol_thrift_common_SquareType
  CLOSED = 0
  OPEN = 1
  VALUE_MAP = {0 => "CLOSED", 1 => "OPEN"}
  VALID_VALUES = Set.new([CLOSED, OPEN]).freeze
end

module Com_linecorp_square_protocol_thrift_common_SquareState
  ALIVE = 0
  DELETED = 1
  SUSPENDED = 2
  VALUE_MAP = {0 => "ALIVE", 1 => "DELETED", 2 => "SUSPENDED"}
  VALID_VALUES = Set.new([ALIVE, DELETED, SUSPENDED]).freeze
end

module Com_linecorp_square_protocol_thrift_common_SquareEmblem
  SUPER = 1
  OFFICIAL = 2
  VALUE_MAP = {1 => "SUPER", 2 => "OFFICIAL"}
  VALID_VALUES = Set.new([SUPER, OFFICIAL]).freeze
end

module Com_linecorp_square_protocol_thrift_common_SquareJoinMethodType
  NONE = 0
  APPROVAL = 1
  CODE = 2
  VALUE_MAP = {0 => "NONE", 1 => "APPROVAL", 2 => "CODE"}
  VALID_VALUES = Set.new([NONE, APPROVAL, CODE]).freeze
end

module G_a_c_u0_a_f_g_h
  CLIENT = 1
  SERVER = 2
  VALUE_MAP = {1 => "CLIENT", 2 => "SERVER"}
  VALID_VALUES = Set.new([CLIENT, SERVER]).freeze
end

module G_a_c_u0_a_f_g_i
  APP_INSTANCE_LOCAL = 1
  APP_TYPE_LOCAL = 2
  GLOBAL = 3
  VALUE_MAP = {1 => "APP_INSTANCE_LOCAL", 2 => "APP_TYPE_LOCAL", 3 => "GLOBAL"}
  VALID_VALUES = Set.new([APP_INSTANCE_LOCAL, APP_TYPE_LOCAL, GLOBAL]).freeze
end

module G_a_c_u0_a_f_g_n
  UNKNOWN = 0
  NONE = 1
  ILLEGAL_ARGUMENT = 65
  NOT_FOUND = 65
  NOT_AVAILABLE = 65
  TOO_LARGE_VALUE = 65
  CLOCK_DRIFT_DETECTED = 65
  UNSUPPORTED_APPLICATION_TYPE = 65
  DUPLICATED_ENTRY = 65
  AUTHENTICATION_FAILED = 66
  INTERNAL_SERVER_ERROR = 81
  SERVICE_IN_MAINTENANCE_MODE = 81
  SERVICE_UNAVAILABLE = 81
  VALUE_MAP = {0 => "UNKNOWN", 1 => "NONE", 65 => "ILLEGAL_ARGUMENT", 65 => "NOT_FOUND", 65 => "NOT_AVAILABLE", 65 => "TOO_LARGE_VALUE", 65 => "CLOCK_DRIFT_DETECTED", 65 => "UNSUPPORTED_APPLICATION_TYPE", 65 => "DUPLICATED_ENTRY", 66 => "AUTHENTICATION_FAILED", 81 => "INTERNAL_SERVER_ERROR", 81 => "SERVICE_IN_MAINTENANCE_MODE", 81 => "SERVICE_UNAVAILABLE"}
  VALID_VALUES = Set.new([UNKNOWN, NONE, ILLEGAL_ARGUMENT, NOT_FOUND, NOT_AVAILABLE, TOO_LARGE_VALUE, CLOCK_DRIFT_DETECTED, UNSUPPORTED_APPLICATION_TYPE, DUPLICATED_ENTRY, AUTHENTICATION_FAILED, INTERNAL_SERVER_ERROR, SERVICE_IN_MAINTENANCE_MODE, SERVICE_UNAVAILABLE]).freeze
end

module G_a_c_y0_a_a_m0
  INTERNAL_SERVER_ERROR = 0
  UNAUTHORIZED = 1
  INVALID_REQUEST = 2
  INVALID_STATE = 3
  DEVICE_LIMIT_EXCEEDED = 16
  UNSUPPORTED_REGION = 16
  VALUE_MAP = {0 => "INTERNAL_SERVER_ERROR", 1 => "UNAUTHORIZED", 2 => "INVALID_REQUEST", 3 => "INVALID_STATE", 16 => "DEVICE_LIMIT_EXCEEDED", 16 => "UNSUPPORTED_REGION"}
  VALID_VALUES = Set.new([INTERNAL_SERVER_ERROR, UNAUTHORIZED, INVALID_REQUEST, INVALID_STATE, DEVICE_LIMIT_EXCEEDED, UNSUPPORTED_REGION]).freeze
end

module G_a_c_y0_a_a_f
  ONETIME = 0
  AUTOMATIC = 1
  BEACON = 2
  VALUE_MAP = {0 => "ONETIME", 1 => "AUTOMATIC", 2 => "BEACON"}
  VALID_VALUES = Set.new([ONETIME, AUTOMATIC, BEACON]).freeze
end

module G_a_c_y0_a_a_e
  SUCCESS = 0
  UNKNOWN_ERROR = 1
  BLUETOOTH_NOT_AVAILABLE = 2
  CONNECTION_TIMEOUT = 3
  CONNECTION_ERROR = 4
  CONNECTION_IN_PROGRESS = 5
  VALUE_MAP = {0 => "SUCCESS", 1 => "UNKNOWN_ERROR", 2 => "BLUETOOTH_NOT_AVAILABLE", 3 => "CONNECTION_TIMEOUT", 4 => "CONNECTION_ERROR", 5 => "CONNECTION_IN_PROGRESS"}
  VALID_VALUES = Set.new([SUCCESS, UNKNOWN_ERROR, BLUETOOTH_NOT_AVAILABLE, CONNECTION_TIMEOUT, CONNECTION_ERROR, CONNECTION_IN_PROGRESS]).freeze
end

module G_a_c_y0_a_a_g0
  SUCCESS = 0
  UNKNOWN_ERROR = 1
  GATT_ERROR = 2
  GATT_OPERATION_NOT_SUPPORTED = 3
  GATT_SERVICE_NOT_FOUND = 4
  GATT_CHARACTERISTIC_NOT_FOUND = 5
  GATT_CONNECTION_CLOSED = 6
  CONNECTION_INVALID = 7
  VALUE_MAP = {0 => "SUCCESS", 1 => "UNKNOWN_ERROR", 2 => "GATT_ERROR", 3 => "GATT_OPERATION_NOT_SUPPORTED", 4 => "GATT_SERVICE_NOT_FOUND", 5 => "GATT_CHARACTERISTIC_NOT_FOUND", 6 => "GATT_CONNECTION_CLOSED", 7 => "CONNECTION_INVALID"}
  VALID_VALUES = Set.new([SUCCESS, UNKNOWN_ERROR, GATT_ERROR, GATT_OPERATION_NOT_SUPPORTED, GATT_SERVICE_NOT_FOUND, GATT_CHARACTERISTIC_NOT_FOUND, GATT_CONNECTION_CLOSED, CONNECTION_INVALID]).freeze
end

module G_a_c_y0_a_a_b0
  CLOUD = 1
  BLE = 2
  BEACON = 3
  VALUE_MAP = {1 => "CLOUD", 2 => "BLE", 3 => "BEACON"}
  VALID_VALUES = Set.new([CLOUD, BLE, BEACON]).freeze
end

module J0_a_a_b_a_a_v3
  STICKERS_PREMIUM = 1
  VALUE_MAP = {1 => "STICKERS_PREMIUM"}
  VALID_VALUES = Set.new([STICKERS_PREMIUM]).freeze
end

module J0_a_a_b_a_a_n3
  GOOGLE = 0
  APPLE = 1
  WEBSTORE = 2
  VALUE_MAP = {0 => "GOOGLE", 1 => "APPLE", 2 => "WEBSTORE"}
  VALID_VALUES = Set.new([GOOGLE, APPLE, WEBSTORE]).freeze
end

module J0_a_a_b_a_a_x2
  UNKNOWN = 0
  NONE = 1
  ILLEGAL_ARGUMENT = 65
  NOT_FOUND = 65
  NOT_AVAILABLE = 65
  NOT_PAID_PRODUCT = 65
  NOT_FREE_PRODUCT = 65
  ALREADY_OWNED = 65
  ERROR_WITH_CUSTOM_MESSAGE = 65
  NOT_AVAILABLE_TO_RECIPIENT = 65
  NOT_AVAILABLE_FOR_CHANNEL_ID = 65
  NOT_SALE_FOR_COUNTRY = 65
  NOT_SALES_PERIOD = 65
  NOT_SALE_FOR_DEVICE = 65
  NOT_SALE_FOR_VERSION = 65
  ALREADY_EXPIRED = 65
  AUTHENTICATION_FAILED = 66
  BALANCE_SHORTAGE = 67
  INTERNAL_SERVER_ERROR = 81
  SERVICE_IN_MAINTENANCE_MODE = 81
  SERVICE_UNAVAILABLE = 81
  VALUE_MAP = {0 => "UNKNOWN", 1 => "NONE", 65 => "ILLEGAL_ARGUMENT", 65 => "NOT_FOUND", 65 => "NOT_AVAILABLE", 65 => "NOT_PAID_PRODUCT", 65 => "NOT_FREE_PRODUCT", 65 => "ALREADY_OWNED", 65 => "ERROR_WITH_CUSTOM_MESSAGE", 65 => "NOT_AVAILABLE_TO_RECIPIENT", 65 => "NOT_AVAILABLE_FOR_CHANNEL_ID", 65 => "NOT_SALE_FOR_COUNTRY", 65 => "NOT_SALES_PERIOD", 65 => "NOT_SALE_FOR_DEVICE", 65 => "NOT_SALE_FOR_VERSION", 65 => "ALREADY_EXPIRED", 66 => "AUTHENTICATION_FAILED", 67 => "BALANCE_SHORTAGE", 81 => "INTERNAL_SERVER_ERROR", 81 => "SERVICE_IN_MAINTENANCE_MODE", 81 => "SERVICE_UNAVAILABLE"}
  VALID_VALUES = Set.new([UNKNOWN, NONE, ILLEGAL_ARGUMENT, NOT_FOUND, NOT_AVAILABLE, NOT_PAID_PRODUCT, NOT_FREE_PRODUCT, ALREADY_OWNED, ERROR_WITH_CUSTOM_MESSAGE, NOT_AVAILABLE_TO_RECIPIENT, NOT_AVAILABLE_FOR_CHANNEL_ID, NOT_SALE_FOR_COUNTRY, NOT_SALES_PERIOD, NOT_SALE_FOR_DEVICE, NOT_SALE_FOR_VERSION, ALREADY_EXPIRED, AUTHENTICATION_FAILED, BALANCE_SHORTAGE, INTERNAL_SERVER_ERROR, SERVICE_IN_MAINTENANCE_MODE, SERVICE_UNAVAILABLE]).freeze
end

module J0_a_a_b_a_a_p3
  OK = 0
  UNKNOWN = 1
  NOT_SUPPORTED = 2
  NO_SUBSCRIPTION = 3
  SUBSCRIPTION_EXISTS = 4
  NOT_AVAILABLE = 5
  CONFLICT = 6
  OUTDATED_VERSION = 7
  NO_STUDENT_INFORMATION = 8
  VALUE_MAP = {0 => "OK", 1 => "UNKNOWN", 2 => "NOT_SUPPORTED", 3 => "NO_SUBSCRIPTION", 4 => "SUBSCRIPTION_EXISTS", 5 => "NOT_AVAILABLE", 6 => "CONFLICT", 7 => "OUTDATED_VERSION", 8 => "NO_STUDENT_INFORMATION"}
  VALID_VALUES = Set.new([OK, UNKNOWN, NOT_SUPPORTED, NO_SUBSCRIPTION, SUBSCRIPTION_EXISTS, NOT_AVAILABLE, CONFLICT, OUTDATED_VERSION, NO_STUDENT_INFORMATION]).freeze
end

module J0_a_a_b_a_a_u1
  ON_SALE = 0
  OUTDATED_VERSION = 1
  NOT_ON_SALE = 2
  VALUE_MAP = {0 => "ON_SALE", 1 => "OUTDATED_VERSION", 2 => "NOT_ON_SALE"}
  VALID_VALUES = Set.new([ON_SALE, OUTDATED_VERSION, NOT_ON_SALE]).freeze
end

module J0_a_a_b_a_a_w3
  OK = 0
  UNKNOWN = 1
  NO_SUBSCRIPTION = 2
  EXISTS = 3
  NOT_FOUND = 4
  EXCEEDS_LIMIT = 5
  NOT_AVAILABLE = 6
  VALUE_MAP = {0 => "OK", 1 => "UNKNOWN", 2 => "NO_SUBSCRIPTION", 3 => "EXISTS", 4 => "NOT_FOUND", 5 => "EXCEEDS_LIMIT", 6 => "NOT_AVAILABLE"}
  VALID_VALUES = Set.new([OK, UNKNOWN, NO_SUBSCRIPTION, EXISTS, NOT_FOUND, EXCEEDS_LIMIT, NOT_AVAILABLE]).freeze
end

module J0_a_a_b_a_a_c3
  POPULAR = 0
  NEW_RELEASE = 1
  EVENT = 2
  RECOMMENDED = 3
  POPULAR_WEEKLY = 4
  POPULAR_MONTHLY = 5
  POPULAR_RECENTLY_PUBLISHED = 6
  BUDDY = 7
  EXTRA_EVENT = 8
  BROWSING_HISTORY = 9
  POPULAR_TOTAL_SALES = 10
  NEW_SUBSCRIPTION = 11
  POPULAR_SUBSCRIPTION_30D = 12
  VALUE_MAP = {0 => "POPULAR", 1 => "NEW_RELEASE", 2 => "EVENT", 3 => "RECOMMENDED", 4 => "POPULAR_WEEKLY", 5 => "POPULAR_MONTHLY", 6 => "POPULAR_RECENTLY_PUBLISHED", 7 => "BUDDY", 8 => "EXTRA_EVENT", 9 => "BROWSING_HISTORY", 10 => "POPULAR_TOTAL_SALES", 11 => "NEW_SUBSCRIPTION", 12 => "POPULAR_SUBSCRIPTION_30D"}
  VALID_VALUES = Set.new([POPULAR, NEW_RELEASE, EVENT, RECOMMENDED, POPULAR_WEEKLY, POPULAR_MONTHLY, POPULAR_RECENTLY_PUBLISHED, BUDDY, EXTRA_EVENT, BROWSING_HISTORY, POPULAR_TOTAL_SALES, NEW_SUBSCRIPTION, POPULAR_SUBSCRIPTION_30D]).freeze
end

module J0_a_a_b_a_a_r
  ALL = 0
  MALE = 1
  FEMALE = 2
  VALUE_MAP = {0 => "ALL", 1 => "MALE", 2 => "FEMALE"}
  VALID_VALUES = Set.new([ALL, MALE, FEMALE]).freeze
end

module J0_a_a_b_a_a_q
  ALL = 0
  AGE_0_19 = 1
  AGE_20_29 = 2
  AGE_30_39 = 3
  AGE_40_INF = 4
  VALUE_MAP = {0 => "ALL", 1 => "AGE_0_19", 2 => "AGE_20_29", 3 => "AGE_30_39", 4 => "AGE_40_INF"}
  VALID_VALUES = Set.new([ALL, AGE_0_19, AGE_20_29, AGE_30_39, AGE_40_INF]).freeze
end

module J0_a_a_b_a_a_s3
  GENERAL = 1
  STUDENT = 2
  VALUE_MAP = {1 => "GENERAL", 2 => "STUDENT"}
  VALID_VALUES = Set.new([GENERAL, STUDENT]).freeze
end

module J0_a_a_b_a_a_u3
  MONTHLY = 1
  YEARLY = 2
  VALUE_MAP = {1 => "MONTHLY", 2 => "YEARLY"}
  VALID_VALUES = Set.new([MONTHLY, YEARLY]).freeze
end

module J0_a_a_b_a_a_r3
  AVAILABLE = 0
  DIFFERENT_STORE = 1
  NOT_STUDENT = 2
  ALREADY_PURCHASED = 3
  VALUE_MAP = {0 => "AVAILABLE", 1 => "DIFFERENT_STORE", 2 => "NOT_STUDENT", 3 => "ALREADY_PURCHASED"}
  VALID_VALUES = Set.new([AVAILABLE, DIFFERENT_STORE, NOT_STUDENT, ALREADY_PURCHASED]).freeze
end

module J0_a_a_b_a_a_t3
  BASIC = 1
  PLUS = 2
  VALUE_MAP = {1 => "BASIC", 2 => "PLUS"}
  VALID_VALUES = Set.new([BASIC, PLUS]).freeze
end

module J0_a_a_b_a_a_i
  VALID = 0
  INVALID = 1
  VALUE_MAP = {0 => "VALID", 1 => "INVALID"}
  VALID_VALUES = Set.new([VALID, INVALID]).freeze
end

module J0_a_a_b_a_a_b4
  NOT_PURCHASED = 0
  SUBSCRIPTION = 1
  VALUE_MAP = {0 => "NOT_PURCHASED", 1 => "SUBSCRIPTION"}
  VALID_VALUES = Set.new([NOT_PURCHASED, SUBSCRIPTION]).freeze
end

module J0_a_a_b_a_a_s2
  UNKNOWN = 0
  PRODUCT = 1
  USER = 2
  PREMIUM_USER = 3
  VALUE_MAP = {0 => "UNKNOWN", 1 => "PRODUCT", 2 => "USER", 3 => "PREMIUM_USER"}
  VALID_VALUES = Set.new([UNKNOWN, PRODUCT, USER, PREMIUM_USER]).freeze
end

module G_a_t0_a_a_b
  BUTTON = 0
  QR = 1
  VALUE_MAP = {0 => "BUTTON", 1 => "QR"}
  VALID_VALUES = Set.new([BUTTON, QR]).freeze
end

module G_a_t0_a_a_c
  UNKNOWN_ERROR = 0
  CHANNEL_TOKEN_EXPIRED = 1
  CHANNEL_TOKEN_INVALID = 2
  TICKET_ALREADY_USED_ERROR = 3
  INTERNAL_SERVER_ERROR = 4
  OLDER_LINE_VERSION_ERROR = 5
  VALUE_MAP = {0 => "UNKNOWN_ERROR", 1 => "CHANNEL_TOKEN_EXPIRED", 2 => "CHANNEL_TOKEN_INVALID", 3 => "TICKET_ALREADY_USED_ERROR", 4 => "INTERNAL_SERVER_ERROR", 5 => "OLDER_LINE_VERSION_ERROR"}
  VALID_VALUES = Set.new([UNKNOWN_ERROR, CHANNEL_TOKEN_EXPIRED, CHANNEL_TOKEN_INVALID, TICKET_ALREADY_USED_ERROR, INTERNAL_SERVER_ERROR, OLDER_LINE_VERSION_ERROR]).freeze
end

module G_a_r1_x_d
  PREFIX = 0
  SUFFIX = 1
  VALUE_MAP = {0 => "PREFIX", 1 => "SUFFIX"}
  VALID_VALUES = Set.new([PREFIX, SUFFIX]).freeze
end

module G_a_r1_x_r
  ALIVE = 1
  SUSPENDED = 2
  UNREGISTERED = 3
  VALUE_MAP = {1 => "ALIVE", 2 => "SUSPENDED", 3 => "UNREGISTERED"}
  VALID_VALUES = Set.new([ALIVE, SUSPENDED, UNREGISTERED]).freeze
end

module G_a_r1_x_q
  LV1 = 0
  LV2 = 1
  LV3 = 2
  LV9 = 3
  VALUE_MAP = {0 => "LV1", 1 => "LV2", 2 => "LV3", 3 => "LV9"}
  VALID_VALUES = Set.new([LV1, LV2, LV3, LV9]).freeze
end

module G_a_r1_x_a0
  REGULAR = 0
  SILVER = 1
  GOLD = 2
  PLATINUM = 3
  VALUE_MAP = {0 => "REGULAR", 1 => "SILVER", 2 => "GOLD", 3 => "PLATINUM"}
  VALID_VALUES = Set.new([REGULAR, SILVER, GOLD, PLATINUM]).freeze
end

module G_a_r1_x_e0
  AUTHENTICATION_FAILED = 25
  INTERNAL_SERVER_ERROR = 31
  SERVICE_IN_MAINTENANCE_MODE = 31
  VALUE_MAP = {25 => "AUTHENTICATION_FAILED", 31 => "INTERNAL_SERVER_ERROR", 31 => "SERVICE_IN_MAINTENANCE_MODE"}
  VALID_VALUES = Set.new([AUTHENTICATION_FAILED, INTERNAL_SERVER_ERROR, SERVICE_IN_MAINTENANCE_MODE]).freeze
end

module J0_a_e_a_b_ba
  ILLEGAL_ARGUMENT = 0
  AUTHENTICATION_FAILED = 1
  DB_FAILED = 2
  INVALID_STATE = 3
  EXCESSIVE_ACCESS = 4
  NOT_FOUND = 5
  INVALID_MID = 9
  NOT_A_MEMBER = 10
  INVALID_LENGTH = 6
  NOT_AVAILABLE_USER = 7
  NOT_AUTHORIZED_DEVICE = 8
  NOT_AUTHORIZED_SESSION = 14
  INCOMPATIBLE_APP_VERSION = 11
  NOT_READY = 12
  NOT_AVAILABLE_SESSION = 13
  SYSTEM_ERROR = 15
  NO_AVAILABLE_VERIFICATION_METHOD = 16
  NOT_AUTHENTICATED = 17
  INVALID_IDENTITY_CREDENTIAL = 18
  NOT_AVAILABLE_IDENTITY_IDENTIFIER = 19
  INTERNAL_ERROR = 20
  NO_SUCH_IDENTITY_IDENFIER = 21
  DEACTIVATED_ACCOUNT_BOUND_TO_THIS_IDENTITY = 22
  ILLEGAL_IDENTITY_CREDENTIAL = 23
  UNKNOWN_CHANNEL = 24
  NO_SUCH_MESSAGE_BOX = 25
  NOT_AVAILABLE_MESSAGE_BOX = 26
  CHANNEL_DOES_NOT_MATCH = 27
  NOT_YOUR_MESSAGE = 28
  MESSAGE_DEFINED_ERROR = 29
  USER_CANNOT_ACCEPT_PRESENTS = 30
  USER_NOT_STICKER_OWNER = 32
  MAINTENANCE_ERROR = 33
  ACCOUNT_NOT_MATCHED = 34
  ABUSE_BLOCK = 35
  NOT_FRIEND = 36
  NOT_ALLOWED_CALL = 37
  BLOCK_FRIEND = 38
  INCOMPATIBLE_VOIP_VERSION = 39
  INVALID_SNS_ACCESS_TOKEN = 40
  EXTERNAL_SERVICE_NOT_AVAILABLE = 41
  NOT_ALLOWED_ADD_CONTACT = 42
  NOT_CERTIFICATED = 43
  NOT_ALLOWED_SECONDARY_DEVICE = 44
  INVALID_PIN_CODE = 45
  NOT_FOUND_IDENTITY_CREDENTIAL = 46
  EXCEED_FILE_MAX_SIZE = 47
  EXCEED_DAILY_QUOTA = 48
  NOT_SUPPORT_SEND_FILE = 49
  MUST_UPGRADE = 50
  NOT_AVAILABLE_PIN_CODE_SESSION = 51
  EXPIRED_REVISION = 52
  NOT_YET_PHONE_NUMBER = 54
  BAD_CALL_NUMBER = 55
  UNAVAILABLE_CALL_NUMBER = 56
  NOT_SUPPORT_CALL_SERVICE = 57
  CONGESTION_CONTROL = 58
  NO_BALANCE = 59
  NOT_PERMITTED_CALLER_ID = 60
  NO_CALLER_ID_LIMIT_EXCEEDED = 61
  CALLER_ID_VERIFICATION_REQUIRED = 62
  NO_CALLER_ID_LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED = 63
  MESSAGE_NOT_FOUND = 64
  INVALID_ACCOUNT_MIGRATION_PINCODE_FORMAT = 65
  ACCOUNT_MIGRATION_PINCODE_NOT_MATCHED = 66
  ACCOUNT_MIGRATION_PINCODE_BLOCKED = 67
  INVALID_PASSWORD_FORMAT = 69
  FEATURE_RESTRICTED = 70
  MESSAGE_NOT_DESTRUCTIBLE = 71
  PAID_CALL_REDEEM_FAILED = 72
  PREVENTED_JOIN_BY_TICKET = 73
  SEND_MESSAGE_NOT_PERMITTED_FROM_LINE_AT = 75
  SEND_MESSAGE_NOT_PERMITTED_WHILE_AUTO_REPLY = 76
  SECURITY_CENTER_NOT_VERIFIED = 77
  SECURITY_CENTER_BLOCKED_BY_SETTING = 78
  SECURITY_CENTER_BLOCKED = 79
  TALK_PROXY_EXCEPTION = 80
  E2EE_INVALID_PROTOCOL = 81
  E2EE_RETRY_ENCRYPT = 82
  E2EE_UPDATE_SENDER_KEY = 83
  E2EE_UPDATE_RECEIVER_KEY = 84
  E2EE_INVALID_ARGUMENT = 85
  E2EE_INVALID_VERSION = 86
  E2EE_SENDER_DISABLED = 87
  E2EE_RECEIVER_DISABLED = 88
  E2EE_SENDER_NOT_ALLOWED = 89
  E2EE_RECEIVER_NOT_ALLOWED = 90
  E2EE_RESEND_FAIL = 91
  E2EE_RESEND_OK = 92
  HITOKOTO_BACKUP_NO_AVAILABLE_DATA = 93
  E2EE_UPDATE_PRIMARY_DEVICE = 94
  SUCCESS = 95
  CANCEL = 96
  E2EE_PRIMARY_NOT_SUPPORT = 97
  E2EE_RETRY_PLAIN = 98
  E2EE_RECREATE_GROUP_KEY = 99
  E2EE_GROUP_TOO_MANY_MEMBERS = 100
  SERVER_BUSY = 101
  NOT_ALLOWED_ADD_FOLLOW = 102
  INCOMING_FRIEND_REQUEST_LIMIT = 103
  OUTGOING_FRIEND_REQUEST_LIMIT = 104
  OUTGOING_FRIEND_REQUEST_QUOTA = 105
  DUPLICATED = 106
  BANNED = 107
  NOT_AN_INVITEE = 108
  NOT_AN_OUTSIDER = 109
  EMPTY_GROUP = 111
  EXCEED_FOLLOW_LIMIT = 112
  UNSUPPORTED_ACCOUNT_TYPE = 113
  AGREEMENT_REQUIRED = 114
  SHOULD_RETRY = 115
  OVER_MAX_CHATS_PER_USER = 116
  NOT_AVAILABLE_API = 117
  VALUE_MAP = {0 => "ILLEGAL_ARGUMENT", 1 => "AUTHENTICATION_FAILED", 2 => "DB_FAILED", 3 => "INVALID_STATE", 4 => "EXCESSIVE_ACCESS", 5 => "NOT_FOUND", 9 => "INVALID_MID", 10 => "NOT_A_MEMBER", 6 => "INVALID_LENGTH", 7 => "NOT_AVAILABLE_USER", 8 => "NOT_AUTHORIZED_DEVICE", 14 => "NOT_AUTHORIZED_SESSION", 11 => "INCOMPATIBLE_APP_VERSION", 12 => "NOT_READY", 13 => "NOT_AVAILABLE_SESSION", 15 => "SYSTEM_ERROR", 16 => "NO_AVAILABLE_VERIFICATION_METHOD", 17 => "NOT_AUTHENTICATED", 18 => "INVALID_IDENTITY_CREDENTIAL", 19 => "NOT_AVAILABLE_IDENTITY_IDENTIFIER", 20 => "INTERNAL_ERROR", 21 => "NO_SUCH_IDENTITY_IDENFIER", 22 => "DEACTIVATED_ACCOUNT_BOUND_TO_THIS_IDENTITY", 23 => "ILLEGAL_IDENTITY_CREDENTIAL", 24 => "UNKNOWN_CHANNEL", 25 => "NO_SUCH_MESSAGE_BOX", 26 => "NOT_AVAILABLE_MESSAGE_BOX", 27 => "CHANNEL_DOES_NOT_MATCH", 28 => "NOT_YOUR_MESSAGE", 29 => "MESSAGE_DEFINED_ERROR", 30 => "USER_CANNOT_ACCEPT_PRESENTS", 32 => "USER_NOT_STICKER_OWNER", 33 => "MAINTENANCE_ERROR", 34 => "ACCOUNT_NOT_MATCHED", 35 => "ABUSE_BLOCK", 36 => "NOT_FRIEND", 37 => "NOT_ALLOWED_CALL", 38 => "BLOCK_FRIEND", 39 => "INCOMPATIBLE_VOIP_VERSION", 40 => "INVALID_SNS_ACCESS_TOKEN", 41 => "EXTERNAL_SERVICE_NOT_AVAILABLE", 42 => "NOT_ALLOWED_ADD_CONTACT", 43 => "NOT_CERTIFICATED", 44 => "NOT_ALLOWED_SECONDARY_DEVICE", 45 => "INVALID_PIN_CODE", 46 => "NOT_FOUND_IDENTITY_CREDENTIAL", 47 => "EXCEED_FILE_MAX_SIZE", 48 => "EXCEED_DAILY_QUOTA", 49 => "NOT_SUPPORT_SEND_FILE", 50 => "MUST_UPGRADE", 51 => "NOT_AVAILABLE_PIN_CODE_SESSION", 52 => "EXPIRED_REVISION", 54 => "NOT_YET_PHONE_NUMBER", 55 => "BAD_CALL_NUMBER", 56 => "UNAVAILABLE_CALL_NUMBER", 57 => "NOT_SUPPORT_CALL_SERVICE", 58 => "CONGESTION_CONTROL", 59 => "NO_BALANCE", 60 => "NOT_PERMITTED_CALLER_ID", 61 => "NO_CALLER_ID_LIMIT_EXCEEDED", 62 => "CALLER_ID_VERIFICATION_REQUIRED", 63 => "NO_CALLER_ID_LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED", 64 => "MESSAGE_NOT_FOUND", 65 => "INVALID_ACCOUNT_MIGRATION_PINCODE_FORMAT", 66 => "ACCOUNT_MIGRATION_PINCODE_NOT_MATCHED", 67 => "ACCOUNT_MIGRATION_PINCODE_BLOCKED", 69 => "INVALID_PASSWORD_FORMAT", 70 => "FEATURE_RESTRICTED", 71 => "MESSAGE_NOT_DESTRUCTIBLE", 72 => "PAID_CALL_REDEEM_FAILED", 73 => "PREVENTED_JOIN_BY_TICKET", 75 => "SEND_MESSAGE_NOT_PERMITTED_FROM_LINE_AT", 76 => "SEND_MESSAGE_NOT_PERMITTED_WHILE_AUTO_REPLY", 77 => "SECURITY_CENTER_NOT_VERIFIED", 78 => "SECURITY_CENTER_BLOCKED_BY_SETTING", 79 => "SECURITY_CENTER_BLOCKED", 80 => "TALK_PROXY_EXCEPTION", 81 => "E2EE_INVALID_PROTOCOL", 82 => "E2EE_RETRY_ENCRYPT", 83 => "E2EE_UPDATE_SENDER_KEY", 84 => "E2EE_UPDATE_RECEIVER_KEY", 85 => "E2EE_INVALID_ARGUMENT", 86 => "E2EE_INVALID_VERSION", 87 => "E2EE_SENDER_DISABLED", 88 => "E2EE_RECEIVER_DISABLED", 89 => "E2EE_SENDER_NOT_ALLOWED", 90 => "E2EE_RECEIVER_NOT_ALLOWED", 91 => "E2EE_RESEND_FAIL", 92 => "E2EE_RESEND_OK", 93 => "HITOKOTO_BACKUP_NO_AVAILABLE_DATA", 94 => "E2EE_UPDATE_PRIMARY_DEVICE", 95 => "SUCCESS", 96 => "CANCEL", 97 => "E2EE_PRIMARY_NOT_SUPPORT", 98 => "E2EE_RETRY_PLAIN", 99 => "E2EE_RECREATE_GROUP_KEY", 100 => "E2EE_GROUP_TOO_MANY_MEMBERS", 101 => "SERVER_BUSY", 102 => "NOT_ALLOWED_ADD_FOLLOW", 103 => "INCOMING_FRIEND_REQUEST_LIMIT", 104 => "OUTGOING_FRIEND_REQUEST_LIMIT", 105 => "OUTGOING_FRIEND_REQUEST_QUOTA", 106 => "DUPLICATED", 107 => "BANNED", 108 => "NOT_AN_INVITEE", 109 => "NOT_AN_OUTSIDER", 111 => "EMPTY_GROUP", 112 => "EXCEED_FOLLOW_LIMIT", 113 => "UNSUPPORTED_ACCOUNT_TYPE", 114 => "AGREEMENT_REQUIRED", 115 => "SHOULD_RETRY", 116 => "OVER_MAX_CHATS_PER_USER", 117 => "NOT_AVAILABLE_API"}
  VALID_VALUES = Set.new([ILLEGAL_ARGUMENT, AUTHENTICATION_FAILED, DB_FAILED, INVALID_STATE, EXCESSIVE_ACCESS, NOT_FOUND, INVALID_MID, NOT_A_MEMBER, INVALID_LENGTH, NOT_AVAILABLE_USER, NOT_AUTHORIZED_DEVICE, NOT_AUTHORIZED_SESSION, INCOMPATIBLE_APP_VERSION, NOT_READY, NOT_AVAILABLE_SESSION, SYSTEM_ERROR, NO_AVAILABLE_VERIFICATION_METHOD, NOT_AUTHENTICATED, INVALID_IDENTITY_CREDENTIAL, NOT_AVAILABLE_IDENTITY_IDENTIFIER, INTERNAL_ERROR, NO_SUCH_IDENTITY_IDENFIER, DEACTIVATED_ACCOUNT_BOUND_TO_THIS_IDENTITY, ILLEGAL_IDENTITY_CREDENTIAL, UNKNOWN_CHANNEL, NO_SUCH_MESSAGE_BOX, NOT_AVAILABLE_MESSAGE_BOX, CHANNEL_DOES_NOT_MATCH, NOT_YOUR_MESSAGE, MESSAGE_DEFINED_ERROR, USER_CANNOT_ACCEPT_PRESENTS, USER_NOT_STICKER_OWNER, MAINTENANCE_ERROR, ACCOUNT_NOT_MATCHED, ABUSE_BLOCK, NOT_FRIEND, NOT_ALLOWED_CALL, BLOCK_FRIEND, INCOMPATIBLE_VOIP_VERSION, INVALID_SNS_ACCESS_TOKEN, EXTERNAL_SERVICE_NOT_AVAILABLE, NOT_ALLOWED_ADD_CONTACT, NOT_CERTIFICATED, NOT_ALLOWED_SECONDARY_DEVICE, INVALID_PIN_CODE, NOT_FOUND_IDENTITY_CREDENTIAL, EXCEED_FILE_MAX_SIZE, EXCEED_DAILY_QUOTA, NOT_SUPPORT_SEND_FILE, MUST_UPGRADE, NOT_AVAILABLE_PIN_CODE_SESSION, EXPIRED_REVISION, NOT_YET_PHONE_NUMBER, BAD_CALL_NUMBER, UNAVAILABLE_CALL_NUMBER, NOT_SUPPORT_CALL_SERVICE, CONGESTION_CONTROL, NO_BALANCE, NOT_PERMITTED_CALLER_ID, NO_CALLER_ID_LIMIT_EXCEEDED, CALLER_ID_VERIFICATION_REQUIRED, NO_CALLER_ID_LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED, MESSAGE_NOT_FOUND, INVALID_ACCOUNT_MIGRATION_PINCODE_FORMAT, ACCOUNT_MIGRATION_PINCODE_NOT_MATCHED, ACCOUNT_MIGRATION_PINCODE_BLOCKED, INVALID_PASSWORD_FORMAT, FEATURE_RESTRICTED, MESSAGE_NOT_DESTRUCTIBLE, PAID_CALL_REDEEM_FAILED, PREVENTED_JOIN_BY_TICKET, SEND_MESSAGE_NOT_PERMITTED_FROM_LINE_AT, SEND_MESSAGE_NOT_PERMITTED_WHILE_AUTO_REPLY, SECURITY_CENTER_NOT_VERIFIED, SECURITY_CENTER_BLOCKED_BY_SETTING, SECURITY_CENTER_BLOCKED, TALK_PROXY_EXCEPTION, E2EE_INVALID_PROTOCOL, E2EE_RETRY_ENCRYPT, E2EE_UPDATE_SENDER_KEY, E2EE_UPDATE_RECEIVER_KEY, E2EE_INVALID_ARGUMENT, E2EE_INVALID_VERSION, E2EE_SENDER_DISABLED, E2EE_RECEIVER_DISABLED, E2EE_SENDER_NOT_ALLOWED, E2EE_RECEIVER_NOT_ALLOWED, E2EE_RESEND_FAIL, E2EE_RESEND_OK, HITOKOTO_BACKUP_NO_AVAILABLE_DATA, E2EE_UPDATE_PRIMARY_DEVICE, SUCCESS, CANCEL, E2EE_PRIMARY_NOT_SUPPORT, E2EE_RETRY_PLAIN, E2EE_RECREATE_GROUP_KEY, E2EE_GROUP_TOO_MANY_MEMBERS, SERVER_BUSY, NOT_ALLOWED_ADD_FOLLOW, INCOMING_FRIEND_REQUEST_LIMIT, OUTGOING_FRIEND_REQUEST_LIMIT, OUTGOING_FRIEND_REQUEST_QUOTA, DUPLICATED, BANNED, NOT_AN_INVITEE, NOT_AN_OUTSIDER, EMPTY_GROUP, EXCEED_FOLLOW_LIMIT, UNSUPPORTED_ACCOUNT_TYPE, AGREEMENT_REQUIRED, SHOULD_RETRY, OVER_MAX_CHATS_PER_USER, NOT_AVAILABLE_API]).freeze
end

module J0_a_e_a_b_ge
  PAYMENT_APPLE = 1
  PAYMENT_GOOGLE = 2
  VALUE_MAP = {1 => "PAYMENT_APPLE", 2 => "PAYMENT_GOOGLE"}
  VALID_VALUES = Set.new([PAYMENT_APPLE, PAYMENT_GOOGLE]).freeze
end

module J0_a_e_a_b_ee
  PAYMENT_PG_NONE = 0
  PAYMENT_PG_AU = 1
  PAYMENT_PG_AL = 2
  VALUE_MAP = {0 => "PAYMENT_PG_NONE", 1 => "PAYMENT_PG_AU", 2 => "PAYMENT_PG_AL"}
  VALID_VALUES = Set.new([PAYMENT_PG_NONE, PAYMENT_PG_AU, PAYMENT_PG_AL]).freeze
end

module J0_a_e_a_b_o7
  MESSAGE = 0
  NOTE = 1
  CHANNEL = 2
  VALUE_MAP = {0 => "MESSAGE", 1 => "NOTE", 2 => "CHANNEL"}
  VALID_VALUES = Set.new([MESSAGE, NOTE, CHANNEL]).freeze
end

module J0_a_e_a_b_n7
  ANYONE_IN_CHAT = 0
  CREATOR_ONLY = 1
  NO_ONE = 2
  VALUE_MAP = {0 => "ANYONE_IN_CHAT", 1 => "CREATOR_ONLY", 2 => "NO_ONE"}
  VALID_VALUES = Set.new([ANYONE_IN_CHAT, CREATOR_ONLY, NO_ONE]).freeze
end

module J0_a_e_a_b_q7
  GROUP = 0
  ROOM = 1
  PEER = 2
  VALUE_MAP = {0 => "GROUP", 1 => "ROOM", 2 => "PEER"}
  VALID_VALUES = Set.new([GROUP, ROOM, PEER]).freeze
end

module J0_a_e_a_b_qt
  NO_AVAILABLE = 0
  PIN_VIA_SMS = 1
  CALLERID_INDIGO = 2
  PIN_VIA_TTS = 4
  SKIP = 10
  VALUE_MAP = {0 => "NO_AVAILABLE", 1 => "PIN_VIA_SMS", 2 => "CALLERID_INDIGO", 4 => "PIN_VIA_TTS", 10 => "SKIP"}
  VALID_VALUES = Set.new([NO_AVAILABLE, PIN_VIA_SMS, CALLERID_INDIGO, PIN_VIA_TTS, SKIP]).freeze
end

module J0_a_e_a_b_g0
  UNKNOWN = 0
  V1 = 1
  V2 = 2
  VALUE_MAP = {0 => "UNKNOWN", 1 => "V1", 2 => "V2"}
  VALID_VALUES = Set.new([UNKNOWN, V1, V2]).freeze
end

module J0_a_e_a_b_b9
  MID = 0
  PHONE = 1
  EMAIL = 2
  USERID = 3
  PROXIMITY = 4
  GROUP = 5
  USER = 6
  QRCODE = 7
  PROMOTION_BOT = 8
  CONTACT_MESSAGE = 9
  FRIEND_REQUEST = 10
  REPAIR = 128
  FACEBOOK = 144
  SINA = 144
  RENREN = 144
  FEIXIN = 144
  BBM = 144
  BEACON = 11
  VALUE_MAP = {0 => "MID", 1 => "PHONE", 2 => "EMAIL", 3 => "USERID", 4 => "PROXIMITY", 5 => "GROUP", 6 => "USER", 7 => "QRCODE", 8 => "PROMOTION_BOT", 9 => "CONTACT_MESSAGE", 10 => "FRIEND_REQUEST", 128 => "REPAIR", 144 => "FACEBOOK", 144 => "SINA", 144 => "RENREN", 144 => "FEIXIN", 144 => "BBM", 11 => "BEACON"}
  VALID_VALUES = Set.new([MID, PHONE, EMAIL, USERID, PROXIMITY, GROUP, USER, QRCODE, PROMOTION_BOT, CONTACT_MESSAGE, FRIEND_REQUEST, REPAIR, FACEBOOK, SINA, RENREN, FEIXIN, BBM, BEACON]).freeze
end

module J0_a_e_a_b_a9
  UNSPECIFIED = 0
  FRIEND = 1
  FRIEND_BLOCKED = 2
  RECOMMEND = 3
  RECOMMEND_BLOCKED = 4
  DELETED = 5
  DELETED_BLOCKED = 6
  VALUE_MAP = {0 => "UNSPECIFIED", 1 => "FRIEND", 2 => "FRIEND_BLOCKED", 3 => "RECOMMEND", 4 => "RECOMMEND_BLOCKED", 5 => "DELETED", 6 => "DELETED_BLOCKED"}
  VALID_VALUES = Set.new([UNSPECIFIED, FRIEND, FRIEND_BLOCKED, RECOMMEND, RECOMMEND_BLOCKED, DELETED, DELETED_BLOCKED]).freeze
end

module J0_a_e_a_b_y8
  ONEWAY = 0
  BOTH = 1
  NOT_REGISTERED = 2
  VALUE_MAP = {0 => "ONEWAY", 1 => "BOTH", 2 => "NOT_REGISTERED"}
  VALID_VALUES = Set.new([ONEWAY, BOTH, NOT_REGISTERED]).freeze
end

module J0_a_e_a_b_ya
  NONE = 0
  AVAILABLE = 1
  ALREADY_REQUESTED = 2
  UNAVAILABLE = 3
  VALUE_MAP = {0 => "NONE", 1 => "AVAILABLE", 2 => "ALREADY_REQUESTED", 3 => "UNAVAILABLE"}
  VALID_VALUES = Set.new([NONE, AVAILABLE, ALREADY_REQUESTED, UNAVAILABLE]).freeze
end

module J0_a_e_a_b_ef
  HIDDEN = 0
  PUBLIC = 62
  VALUE_MAP = {0 => "HIDDEN", 62 => "PUBLIC"}
  VALID_VALUES = Set.new([HIDDEN, PUBLIC]).freeze
end

module J0_a_e_a_b_l5
  MESSAGE = 0
  MESSAGE_NOTIFICATION = 1
  NOTIFICATION_CENTER = 2
  VALUE_MAP = {0 => "MESSAGE", 1 => "MESSAGE_NOTIFICATION", 2 => "NOTIFICATION_CENTER"}
  VALID_VALUES = Set.new([MESSAGE, MESSAGE_NOTIFICATION, NOTIFICATION_CENTER]).freeze
end

module J0_a_e_a_b_u5
  PROFILE = 0
  FRIENDS = 1
  GROUP = 2
  VALUE_MAP = {0 => "PROFILE", 1 => "FRIENDS", 2 => "GROUP"}
  VALID_VALUES = Set.new([PROFILE, FRIENDS, GROUP]).freeze
end

module J0_a_e_a_b_q5
  BLE_LCS_API_USABLE = 26
  PROHIBIT_MINIMIZE_CHANNEL_BROWSER = 27
  ALLOW_IOS_WEBKIT = 28
  PURCHASE_LCS_API_USABLE = 38
  ALLOW_ANDROID_ENABLE_ZOOM = 48
  VALUE_MAP = {26 => "BLE_LCS_API_USABLE", 27 => "PROHIBIT_MINIMIZE_CHANNEL_BROWSER", 28 => "ALLOW_IOS_WEBKIT", 38 => "PURCHASE_LCS_API_USABLE", 48 => "ALLOW_ANDROID_ENABLE_ZOOM"}
  VALID_VALUES = Set.new([BLE_LCS_API_USABLE, PROHIBIT_MINIMIZE_CHANNEL_BROWSER, ALLOW_IOS_WEBKIT, PURCHASE_LCS_API_USABLE, ALLOW_ANDROID_ENABLE_ZOOM]).freeze
end

module J0_a_e_a_b_o5
  ILLEGAL_ARGUMENT = 0
  INTERNAL_ERROR = 1
  CONNECTION_ERROR = 2
  AUTHENTICATIONI_FAILED = 3
  NEED_PERMISSION_APPROVAL = 4
  COIN_NOT_USABLE = 5
  WEBVIEW_NOT_ALLOWED = 6
  VALUE_MAP = {0 => "ILLEGAL_ARGUMENT", 1 => "INTERNAL_ERROR", 2 => "CONNECTION_ERROR", 3 => "AUTHENTICATIONI_FAILED", 4 => "NEED_PERMISSION_APPROVAL", 5 => "COIN_NOT_USABLE", 6 => "WEBVIEW_NOT_ALLOWED"}
  VALID_VALUES = Set.new([ILLEGAL_ARGUMENT, INTERNAL_ERROR, CONNECTION_ERROR, AUTHENTICATIONI_FAILED, NEED_PERMISSION_APPROVAL, COIN_NOT_USABLE, WEBVIEW_NOT_ALLOWED]).freeze
end

module J0_a_e_a_b_rg
  UNSPECIFIED = 0
  UNKNOWN = 1
  INITIALIZATION = 2
  OPERATION = 3
  FULL_SYNC = 4
  AUTO_REPAIR = 5
  MANUAL_REPAIR = 6
  INTERNAL = 7
  VALUE_MAP = {0 => "UNSPECIFIED", 1 => "UNKNOWN", 2 => "INITIALIZATION", 3 => "OPERATION", 4 => "FULL_SYNC", 5 => "AUTO_REPAIR", 6 => "MANUAL_REPAIR", 7 => "INTERNAL"}
  VALID_VALUES = Set.new([UNSPECIFIED, UNKNOWN, INITIALIZATION, OPERATION, FULL_SYNC, AUTO_REPAIR, MANUAL_REPAIR, INTERNAL]).freeze
end

module J0_a_e_a_b_aa
  SERVER_SIDE_EMAIL = 0
  CLIENT_SIDE_EMAIL = 1
  VALUE_MAP = {0 => "SERVER_SIDE_EMAIL", 1 => "CLIENT_SIDE_EMAIL"}
  VALID_VALUES = Set.new([SERVER_SIDE_EMAIL, CLIENT_SIDE_EMAIL]).freeze
end

module J0_a_e_a_b_fd
  ADD = 0
  REMOVE = 1
  MODIFY = 2
  VALUE_MAP = {0 => "ADD", 1 => "REMOVE", 2 => "MODIFY"}
  VALID_VALUES = Set.new([ADD, REMOVE, MODIFY]).freeze
end

module J0_a_e_a_b_c9
  NONE = 0
  IMAGE = 1
  VIDEO = 2
  AUDIO = 3
  HTML = 4
  PDF = 5
  CALL = 6
  STICKER = 7
  PRESENCE = 8
  GIFT = 9
  GROUPBOARD = 10
  APPLINK = 11
  LINK = 12
  CONTACT = 13
  FILE = 14
  LOCATION = 15
  POSTNOTIFICATION = 16
  RICH = 17
  CHATEVENT = 18
  MUSIC = 19
  PAYMENT = 20
  EXTIMAGE = 21
  FLEX = 22
  VALUE_MAP = {0 => "NONE", 1 => "IMAGE", 2 => "VIDEO", 3 => "AUDIO", 4 => "HTML", 5 => "PDF", 6 => "CALL", 7 => "STICKER", 8 => "PRESENCE", 9 => "GIFT", 10 => "GROUPBOARD", 11 => "APPLINK", 12 => "LINK", 13 => "CONTACT", 14 => "FILE", 15 => "LOCATION", 16 => "POSTNOTIFICATION", 17 => "RICH", 18 => "CHATEVENT", 19 => "MUSIC", 20 => "PAYMENT", 21 => "EXTIMAGE", 22 => "FLEX"}
  VALID_VALUES = Set.new([NONE, IMAGE, VIDEO, AUDIO, HTML, PDF, CALL, STICKER, PRESENCE, GIFT, GROUPBOARD, APPLINK, LINK, CONTACT, FILE, LOCATION, POSTNOTIFICATION, RICH, CHATEVENT, MUSIC, PAYMENT, EXTIMAGE, FLEX]).freeze
end

module J0_a_e_a_b_cg
  NOTIFICATION_ENABLE = 0
  NOTIFICATION_MUTE_EXPIRATION = 1
  NOTIFICATION_NEW_MESSAGE = 2
  NOTIFICATION_GROUP_INVITATION = 3
  NOTIFICATION_SHOW_MESSAGE = 4
  NOTIFICATION_INCOMING_CALL = 5
  NOTIFICATION_SOUND_MESSAGE = 8
  NOTIFICATION_SOUND_GROUP = 9
  NOTIFICATION_DISABLED_WITH_SUB = 16
  NOTIFICATION_PAYMENT = 17
  NOTIFICATION_MENTION = 40
  NOTIFICATION_THUMBNAIL = 45
  NOTIFICATION_BADGE_TALK_ONLY = 65
  PRIVACY_SYNC_CONTACTS = 6
  PRIVACY_SEARCH_BY_PHONE_NUMBER = 7
  PRIVACY_SEARCH_BY_USERID = 13
  PRIVACY_SEARCH_BY_EMAIL = 14
  PRIVACY_SHARE_PERSONAL_INFO_TO_FRIENDS = 51
  PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN = 21
  PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME = 23
  PRIVACY_PROFILE_MUSIC_POST_TO_MYHOME = 35
  PRIVACY_PROFILE_HISTORY = 57
  PRIVACY_STATUS_MESSAGE_HISTORY = 54
  PRIVACY_ALLOW_FRIEND_REQUEST = 30
  PRIVACY_RECV_MESSAGES_FROM_NOT_FRIEND = 25
  PRIVACY_AGREE_USE_LINECOIN_TO_PAIDCALL = 26
  PRIVACY_AGREE_USE_PAIDCALL = 27
  PRIVACY_AGE_RESULT = 60
  PRIVACY_AGE_RESULT_RECEIVED = 61
  PRIVACY_ALLOW_FOLLOW = 63
  PRIVACY_SHOW_FOLLOW_LIST = 64
  CONTACT_MY_TICKET = 10
  IDENTITY_PROVIDER = 11
  IDENTITY_IDENTIFIER = 12
  SNS_ACCOUNT = 19
  PHONE_REGISTRATION = 20
  PWLESS_PRIMARY_CREDENTIAL_REGISTRATION = 31
  PREFERENCE_LOCALE = 15
  CUSTOM_MODE = 22
  EMAIL_CONFIRMATION_STATUS = 24
  ACCOUNT_MIGRATION_PINCODE = 28
  ENFORCED_INPUT_ACCOUNT_MIGRATION_PINCODE = 29
  SECURITY_CENTER_SETTINGS = 18
  E2EE_ENABLE = 33
  HITOKOTO_BACKUP_REQUESTED = 34
  CONTACT_ALLOW_FOLLOWING = 36
  PRIVACY_ALLOW_NEARBY = 37
  AGREEMENT_NEARBY = 38
  AGREEMENT_SQUARE = 39
  ALLOW_UNREGISTRATION_SECONDARY_DEVICE = 41
  AGREEMENT_BOT_USE = 42
  AGREEMENT_SHAKE_FUNCTION = 43
  AGREEMENT_MOBILE_CONTACT_NAME = 44
  AGREEMENT_SOUND_TO_TEXT = 46
  AGREEMENT_PRIVACY_POLICY_VERSION = 47
  AGREEMENT_AD_BY_WEB_ACCESS = 48
  AGREEMENT_PHONE_NUMBER_MATCHING = 49
  AGREEMENT_COMMUNICATION_INFO = 50
  AGREEMENT_THINGS_WIRELESS_COMMUNICATION = 52
  AGREEMENT_GDPR = 53
  AGREEMENT_PROVIDE_LOCATION = 55
  AGREEMENT_BEACON = 56
  AGREEMENT_CONTENTS_SUGGEST = 58
  AGREEMENT_CONTENTS_SUGGEST_DATA_COLLECTION = 59
  AGREEMENT_OCR_IMAGE_COLLECTION = 62
  AGREEMENT_ICNA = 66
  VALUE_MAP = {0 => "NOTIFICATION_ENABLE", 1 => "NOTIFICATION_MUTE_EXPIRATION", 2 => "NOTIFICATION_NEW_MESSAGE", 3 => "NOTIFICATION_GROUP_INVITATION", 4 => "NOTIFICATION_SHOW_MESSAGE", 5 => "NOTIFICATION_INCOMING_CALL", 8 => "NOTIFICATION_SOUND_MESSAGE", 9 => "NOTIFICATION_SOUND_GROUP", 16 => "NOTIFICATION_DISABLED_WITH_SUB", 17 => "NOTIFICATION_PAYMENT", 40 => "NOTIFICATION_MENTION", 45 => "NOTIFICATION_THUMBNAIL", 65 => "NOTIFICATION_BADGE_TALK_ONLY", 6 => "PRIVACY_SYNC_CONTACTS", 7 => "PRIVACY_SEARCH_BY_PHONE_NUMBER", 13 => "PRIVACY_SEARCH_BY_USERID", 14 => "PRIVACY_SEARCH_BY_EMAIL", 51 => "PRIVACY_SHARE_PERSONAL_INFO_TO_FRIENDS", 21 => "PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN", 23 => "PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME", 35 => "PRIVACY_PROFILE_MUSIC_POST_TO_MYHOME", 57 => "PRIVACY_PROFILE_HISTORY", 54 => "PRIVACY_STATUS_MESSAGE_HISTORY", 30 => "PRIVACY_ALLOW_FRIEND_REQUEST", 25 => "PRIVACY_RECV_MESSAGES_FROM_NOT_FRIEND", 26 => "PRIVACY_AGREE_USE_LINECOIN_TO_PAIDCALL", 27 => "PRIVACY_AGREE_USE_PAIDCALL", 60 => "PRIVACY_AGE_RESULT", 61 => "PRIVACY_AGE_RESULT_RECEIVED", 63 => "PRIVACY_ALLOW_FOLLOW", 64 => "PRIVACY_SHOW_FOLLOW_LIST", 10 => "CONTACT_MY_TICKET", 11 => "IDENTITY_PROVIDER", 12 => "IDENTITY_IDENTIFIER", 19 => "SNS_ACCOUNT", 20 => "PHONE_REGISTRATION", 31 => "PWLESS_PRIMARY_CREDENTIAL_REGISTRATION", 15 => "PREFERENCE_LOCALE", 22 => "CUSTOM_MODE", 24 => "EMAIL_CONFIRMATION_STATUS", 28 => "ACCOUNT_MIGRATION_PINCODE", 29 => "ENFORCED_INPUT_ACCOUNT_MIGRATION_PINCODE", 18 => "SECURITY_CENTER_SETTINGS", 33 => "E2EE_ENABLE", 34 => "HITOKOTO_BACKUP_REQUESTED", 36 => "CONTACT_ALLOW_FOLLOWING", 37 => "PRIVACY_ALLOW_NEARBY", 38 => "AGREEMENT_NEARBY", 39 => "AGREEMENT_SQUARE", 41 => "ALLOW_UNREGISTRATION_SECONDARY_DEVICE", 42 => "AGREEMENT_BOT_USE", 43 => "AGREEMENT_SHAKE_FUNCTION", 44 => "AGREEMENT_MOBILE_CONTACT_NAME", 46 => "AGREEMENT_SOUND_TO_TEXT", 47 => "AGREEMENT_PRIVACY_POLICY_VERSION", 48 => "AGREEMENT_AD_BY_WEB_ACCESS", 49 => "AGREEMENT_PHONE_NUMBER_MATCHING", 50 => "AGREEMENT_COMMUNICATION_INFO", 52 => "AGREEMENT_THINGS_WIRELESS_COMMUNICATION", 53 => "AGREEMENT_GDPR", 55 => "AGREEMENT_PROVIDE_LOCATION", 56 => "AGREEMENT_BEACON", 58 => "AGREEMENT_CONTENTS_SUGGEST", 59 => "AGREEMENT_CONTENTS_SUGGEST_DATA_COLLECTION", 62 => "AGREEMENT_OCR_IMAGE_COLLECTION", 66 => "AGREEMENT_ICNA"}
  VALID_VALUES = Set.new([NOTIFICATION_ENABLE, NOTIFICATION_MUTE_EXPIRATION, NOTIFICATION_NEW_MESSAGE, NOTIFICATION_GROUP_INVITATION, NOTIFICATION_SHOW_MESSAGE, NOTIFICATION_INCOMING_CALL, NOTIFICATION_SOUND_MESSAGE, NOTIFICATION_SOUND_GROUP, NOTIFICATION_DISABLED_WITH_SUB, NOTIFICATION_PAYMENT, NOTIFICATION_MENTION, NOTIFICATION_THUMBNAIL, NOTIFICATION_BADGE_TALK_ONLY, PRIVACY_SYNC_CONTACTS, PRIVACY_SEARCH_BY_PHONE_NUMBER, PRIVACY_SEARCH_BY_USERID, PRIVACY_SEARCH_BY_EMAIL, PRIVACY_SHARE_PERSONAL_INFO_TO_FRIENDS, PRIVACY_ALLOW_SECONDARY_DEVICE_LOGIN, PRIVACY_PROFILE_IMAGE_POST_TO_MYHOME, PRIVACY_PROFILE_MUSIC_POST_TO_MYHOME, PRIVACY_PROFILE_HISTORY, PRIVACY_STATUS_MESSAGE_HISTORY, PRIVACY_ALLOW_FRIEND_REQUEST, PRIVACY_RECV_MESSAGES_FROM_NOT_FRIEND, PRIVACY_AGREE_USE_LINECOIN_TO_PAIDCALL, PRIVACY_AGREE_USE_PAIDCALL, PRIVACY_AGE_RESULT, PRIVACY_AGE_RESULT_RECEIVED, PRIVACY_ALLOW_FOLLOW, PRIVACY_SHOW_FOLLOW_LIST, CONTACT_MY_TICKET, IDENTITY_PROVIDER, IDENTITY_IDENTIFIER, SNS_ACCOUNT, PHONE_REGISTRATION, PWLESS_PRIMARY_CREDENTIAL_REGISTRATION, PREFERENCE_LOCALE, CUSTOM_MODE, EMAIL_CONFIRMATION_STATUS, ACCOUNT_MIGRATION_PINCODE, ENFORCED_INPUT_ACCOUNT_MIGRATION_PINCODE, SECURITY_CENTER_SETTINGS, E2EE_ENABLE, HITOKOTO_BACKUP_REQUESTED, CONTACT_ALLOW_FOLLOWING, PRIVACY_ALLOW_NEARBY, AGREEMENT_NEARBY, AGREEMENT_SQUARE, ALLOW_UNREGISTRATION_SECONDARY_DEVICE, AGREEMENT_BOT_USE, AGREEMENT_SHAKE_FUNCTION, AGREEMENT_MOBILE_CONTACT_NAME, AGREEMENT_SOUND_TO_TEXT, AGREEMENT_PRIVACY_POLICY_VERSION, AGREEMENT_AD_BY_WEB_ACCESS, AGREEMENT_PHONE_NUMBER_MATCHING, AGREEMENT_COMMUNICATION_INFO, AGREEMENT_THINGS_WIRELESS_COMMUNICATION, AGREEMENT_GDPR, AGREEMENT_PROVIDE_LOCATION, AGREEMENT_BEACON, AGREEMENT_CONTENTS_SUGGEST, AGREEMENT_CONTENTS_SUGGEST_DATA_COLLECTION, AGREEMENT_OCR_IMAGE_COLLECTION, AGREEMENT_ICNA]).freeze
end

module J0_a_e_a_b_rc
  UNKNOWN = 0
  LINE = 1
  NAVER_KR = 2
  LINE_PHONE = 3
  VALUE_MAP = {0 => "UNKNOWN", 1 => "LINE", 2 => "NAVER_KR", 3 => "LINE_PHONE"}
  VALID_VALUES = Set.new([UNKNOWN, LINE, NAVER_KR, LINE_PHONE]).freeze
end

module J0_a_e_a_b_de
  PAYLOAD_BUY = 101
  PAYLOAD_CS = 111
  PAYLOAD_BONUS = 121
  PAYLOAD_EVENT = 131
  PAYLOAD_POINT_AUTO_EXCHANGED = 141
  PAYLOAD_POINT_MANUAL_EXCHANGED = 151
  VALUE_MAP = {101 => "PAYLOAD_BUY", 111 => "PAYLOAD_CS", 121 => "PAYLOAD_BONUS", 131 => "PAYLOAD_EVENT", 141 => "PAYLOAD_POINT_AUTO_EXCHANGED", 151 => "PAYLOAD_POINT_MANUAL_EXCHANGED"}
  VALID_VALUES = Set.new([PAYLOAD_BUY, PAYLOAD_CS, PAYLOAD_BONUS, PAYLOAD_EVENT, PAYLOAD_POINT_AUTO_EXCHANGED, PAYLOAD_POINT_MANUAL_EXCHANGED]).freeze
end

module J0_a_e_a_b_h7
  BACKGROUND = 0
  KEYWORD = 1
  VALUE_MAP = {0 => "BACKGROUND", 1 => "KEYWORD"}
  VALID_VALUES = Set.new([BACKGROUND, KEYWORD]).freeze
end

module J0_a_e_a_b_zc
  USER = 0
  ROOM = 1
  GROUP = 2
  SQUARE = 3
  SQUARE_CHAT = 4
  SQUARE_MEMBER = 5
  BOT = 6
  VALUE_MAP = {0 => "USER", 1 => "ROOM", 2 => "GROUP", 3 => "SQUARE", 4 => "SQUARE_CHAT", 5 => "SQUARE_MEMBER", 6 => "BOT"}
  VALID_VALUES = Set.new([USER, ROOM, GROUP, SQUARE, SQUARE_CHAT, SQUARE_MEMBER, BOT]).freeze
end

module J0_a_e_a_b_pe
  GOOGLE = 0
  BAIDU = 1
  FOURSQUARE = 2
  VALUE_MAP = {0 => "GOOGLE", 1 => "BAIDU", 2 => "FOURSQUARE"}
  VALID_VALUES = Set.new([GOOGLE, BAIDU, FOURSQUARE]).freeze
end

module J0_a_e_a_b_ed
  FORWARD = 0
  AUTO_REPLY = 1
  SUBORDINATE = 2
  REPLY = 3
  VALUE_MAP = {0 => "FORWARD", 1 => "AUTO_REPLY", 2 => "SUBORDINATE", 3 => "REPLY"}
  VALID_VALUES = Set.new([FORWARD, AUTO_REPLY, SUBORDINATE, REPLY]).freeze
end

module J0_a_e_a_b_zf
  UNKNOWN = 0
  TALK = 1
  SQUARE = 2
  VALUE_MAP = {0 => "UNKNOWN", 1 => "TALK", 2 => "SQUARE"}
  VALID_VALUES = Set.new([UNKNOWN, TALK, SQUARE]).freeze
end

module J0_a_e_a_b_x
  SIRI = 1
  GOOGLE_ASSISTANT = 2
  OS_SHARE = 3
  VALUE_MAP = {1 => "SIRI", 2 => "GOOGLE_ASSISTANT", 3 => "OS_SHARE"}
  VALID_VALUES = Set.new([SIRI, GOOGLE_ASSISTANT, OS_SHARE]).freeze
end

module J0_a_e_a_b_xe
  NEVER_SHOW = 0
  ONE_WAY = 1
  MUTUAL = 2
  VALUE_MAP = {0 => "NEVER_SHOW", 1 => "ONE_WAY", 2 => "MUTUAL"}
  VALID_VALUES = Set.new([NEVER_SHOW, ONE_WAY, MUTUAL]).freeze
end

module J0_a_e_a_b_gt
  OVER = 1
  UNDER = 2
  UNDEFINED = 3
  VALUE_MAP = {1 => "OVER", 2 => "UNDER", 3 => "UNDEFINED"}
  VALID_VALUES = Set.new([OVER, UNDER, UNDEFINED]).freeze
end

module J0_a_e_a_b_ig
  FACEBOOK = 1
  SINA = 2
  RENREN = 3
  FEIXIN = 4
  BBM = 5
  APPLE = 6
  VALUE_MAP = {1 => "FACEBOOK", 2 => "SINA", 3 => "RENREN", 4 => "FEIXIN", 5 => "BBM", 6 => "APPLE"}
  VALID_VALUES = Set.new([FACEBOOK, SINA, RENREN, FEIXIN, BBM, APPLE]).freeze
end

module J0_a_e_a_b_h
  NOT_APPLICABLE = 0
  NOT_SET = 1
  SET = 2
  NEED_ENFORCED_INPUT = 3
  VALUE_MAP = {0 => "NOT_APPLICABLE", 1 => "NOT_SET", 2 => "SET", 3 => "NEED_ENFORCED_INPUT"}
  VALID_VALUES = Set.new([NOT_APPLICABLE, NOT_SET, SET, NEED_ENFORCED_INPUT]).freeze
end

module J0_a_e_a_b_xf
  NOT_APPLICABLE = 0
  NOT_SET = 1
  SET = 2
  NEED_ENFORCED_INPUT = 3
  VALUE_MAP = {0 => "NOT_APPLICABLE", 1 => "NOT_SET", 2 => "SET", 3 => "NEED_ENFORCED_INPUT"}
  VALID_VALUES = Set.new([NOT_APPLICABLE, NOT_SET, SET, NEED_ENFORCED_INPUT]).freeze
end

module J0_a_e_a_b_i9
  PROMOTION_FRIENDS_INVITE = 1
  CAPABILITY_SERVER_SIDE_SMS = 2
  LINE_CLIENT_ANALYTICS_CONFIGURATION = 3
  VALUE_MAP = {1 => "PROMOTION_FRIENDS_INVITE", 2 => "CAPABILITY_SERVER_SIDE_SMS", 3 => "LINE_CLIENT_ANALYTICS_CONFIGURATION"}
  VALID_VALUES = Set.new([PROMOTION_FRIENDS_INVITE, CAPABILITY_SERVER_SIDE_SMS, LINE_CLIENT_ANALYTICS_CONFIGURATION]).freeze
end

module J0_a_e_a_b_bf
  OWNER = 0
  FRIEND = 1
  VALUE_MAP = {0 => "OWNER", 1 => "FRIEND"}
  VALID_VALUES = Set.new([OWNER, FRIEND]).freeze
end

module J0_a_e_a_b_og
  NONE = 1
  ALL = 2
  VALUE_MAP = {1 => "NONE", 2 => "ALL"}
  VALID_VALUES = Set.new([NONE, ALL]).freeze
end

module J0_a_e_a_b_xa
  TIMELINE = 1
  NEARBY = 2
  SQUARE = 3
  VALUE_MAP = {1 => "TIMELINE", 2 => "NEARBY", 3 => "SQUARE"}
  VALID_VALUES = Set.new([TIMELINE, NEARBY, SQUARE]).freeze
end

module J0_a_e_a_b_kd
  APPLE_APNS = 1
  GOOGLE_C2DM = 2
  NHN_NNI = 3
  SKT_AOM = 4
  MS_MPNS = 5
  RIM_BIS = 6
  GOOGLE_GCM = 7
  NOKIA_NNAPI = 8
  TIZEN = 9
  MOZILLA_SIMPLE = 10
  LINE_BOT = 17
  LINE_WAP = 18
  APPLE_APNS_VOIP = 19
  MS_WNS = 20
  GOOGLE_FCM = 21
  CLOVA = 22
  CLOVA_VOIP = 23
  HUAWEI_HCM = 24
  VALUE_MAP = {1 => "APPLE_APNS", 2 => "GOOGLE_C2DM", 3 => "NHN_NNI", 4 => "SKT_AOM", 5 => "MS_MPNS", 6 => "RIM_BIS", 7 => "GOOGLE_GCM", 8 => "NOKIA_NNAPI", 9 => "TIZEN", 10 => "MOZILLA_SIMPLE", 17 => "LINE_BOT", 18 => "LINE_WAP", 19 => "APPLE_APNS_VOIP", 20 => "MS_WNS", 21 => "GOOGLE_FCM", 22 => "CLOVA", 23 => "CLOVA_VOIP", 24 => "HUAWEI_HCM"}
  VALID_VALUES = Set.new([APPLE_APNS, GOOGLE_C2DM, NHN_NNI, SKT_AOM, MS_MPNS, RIM_BIS, GOOGLE_GCM, NOKIA_NNAPI, TIZEN, MOZILLA_SIMPLE, LINE_BOT, LINE_WAP, APPLE_APNS_VOIP, MS_WNS, GOOGLE_FCM, CLOVA, CLOVA_VOIP, HUAWEI_HCM]).freeze
end

module J0_a_e_a_b_qc
  UNKNOWN = 0
  SUCCESS = 1
  REQUIRE_SERVER_SIDE_EMAIL = 2
  REQUIRE_CLIENT_SIDE_EMAIL = 3
  VALUE_MAP = {0 => "UNKNOWN", 1 => "SUCCESS", 2 => "REQUIRE_SERVER_SIDE_EMAIL", 3 => "REQUIRE_CLIENT_SIDE_EMAIL"}
  VALID_VALUES = Set.new([UNKNOWN, SUCCESS, REQUIRE_SERVER_SIDE_EMAIL, REQUIRE_CLIENT_SIDE_EMAIL]).freeze
end

module J0_a_e_a_b_na
  OBS_VIDEO = 1
  OBS_GENERAL = 2
  OBS_RINGBACK_TONE = 3
  VALUE_MAP = {1 => "OBS_VIDEO", 2 => "OBS_GENERAL", 3 => "OBS_RINGBACK_TONE"}
  VALID_VALUES = Set.new([OBS_VIDEO, OBS_GENERAL, OBS_RINGBACK_TONE]).freeze
end

module J0_a_e_a_b_j7
  LOW = 0
  VALUE_MAP = {0 => "LOW"}
  VALID_VALUES = Set.new([LOW]).freeze
end

module J0_a_e_a_b_y
  IOS = 16
  IOS_RC = 17
  IOS_BETA = 18
  IOS_ALPHA = 19
  ANDROID = 32
  ANDROID_RC = 33
  ANDROID_BETA = 34
  ANDROID_ALPHA = 35
  WAP = 48
  WAP_RC = 49
  WAP_BETA = 50
  WAP_ALPHA = 51
  BOT = 64
  BOT_RC = 65
  BOT_BETA = 66
  BOT_ALPHA = 67
  WEB = 80
  WEB_RC = 81
  WEB_BETA = 82
  WEB_ALPHA = 83
  DESKTOPWIN = 96
  DESKTOPWIN_RC = 97
  DESKTOPWIN_BETA = 98
  DESKTOPWIN_ALPHA = 99
  DESKTOPMAC = 112
  DESKTOPMAC_RC = 113
  DESKTOPMAC_BETA = 114
  DESKTOPMAC_ALPHA = 115
  CHANNELGW = 128
  CHANNELGW_RC = 129
  CHANNELGW_BETA = 130
  CHANNELGW_ALPHA = 131
  CHANNELCP = 144
  CHANNELCP_RC = 145
  CHANNELCP_BETA = 146
  CHANNELCP_ALPHA = 147
  WINPHONE = 10
  WINPHONE_RC = 10
  WINPHONE_BETA = 10
  WINPHONE_ALPHA = 10
  BLACKBERRY = 11
  BLACKBERRY_RC = 11
  BLACKBERRY_BETA = 11
  BLACKBERRY_ALPHA = 11
  WINMETRO = 12
  WINMETRO_RC = 12
  WINMETRO_BETA = 12
  WINMETRO_ALPHA = 12
  S40 = 13
  S40_RC = 13
  S40_BETA = 13
  S40_ALPHA = 13
  CHRONO = 14
  CHRONO_RC = 14
  CHRONO_BETA = 14
  CHRONO_ALPHA = 14
  TIZEN = 16
  TIZEN_RC = 16
  TIZEN_BETA = 16
  TIZEN_ALPHA = 16
  VIRTUAL = 17
  FIREFOXOS = 18
  FIREFOXOS_RC = 18
  FIREFOXOS_BETA = 18
  FIREFOXOS_ALPHA = 18
  IOSIPAD = 19
  IOSIPAD_RC = 19
  IOSIPAD_BETA = 19
  IOSIPAD_ALPHA = 19
  BIZIOS = 20
  BIZIOS_RC = 20
  BIZIOS_BETA = 20
  BIZIOS_ALPHA = 20
  BIZANDROID = 21
  BIZANDROID_RC = 21
  BIZANDROID_BETA = 21
  BIZANDROID_ALPHA = 21
  BIZBOT = 22
  BIZBOT_RC = 22
  BIZBOT_BETA = 22
  BIZBOT_ALPHA = 22
  CHROMEOS = 23
  CHROMEOS_RC = 23
  CHROMEOS_BETA = 23
  CHROMEOS_ALPHA = 23
  ANDROIDLITE = 24
  ANDROIDLITE_RC = 24
  ANDROIDLITE_BETA = 24
  ANDROIDLITE_ALPHA = 24
  WIN10 = 25
  WIN10_RC = 25
  WIN10_BETA = 25
  WIN10_ALPHA = 25
  BIZWEB = 26
  BIZWEB_RC = 26
  BIZWEB_BETA = 26
  BIZWEB_ALPHA = 26
  DUMMYPRIMARY = 27
  DUMMYPRIMARY_RC = 27
  DUMMYPRIMARY_BETA = 27
  DUMMYPRIMARY_ALPHA = 27
  SQUARE = 28
  SQUARE_RC = 28
  SQUARE_BETA = 28
  SQUARE_ALPHA = 28
  INTERNAL = 29
  INTERNAL_RC = 29
  INTERNAL_BETA = 29
  INTERNAL_ALPHA = 29
  CLOVAFRIENDS = 30
  CLOVAFRIENDS_RC = 30
  CLOVAFRIENDS_BETA = 30
  CLOVAFRIENDS_ALPHA = 30
  WATCHOS = 31
  WATCHOS_RC = 31
  WATCHOS_BETA = 31
  WATCHOS_ALPHA = 31
  VALUE_MAP = {16 => "IOS", 17 => "IOS_RC", 18 => "IOS_BETA", 19 => "IOS_ALPHA", 32 => "ANDROID", 33 => "ANDROID_RC", 34 => "ANDROID_BETA", 35 => "ANDROID_ALPHA", 48 => "WAP", 49 => "WAP_RC", 50 => "WAP_BETA", 51 => "WAP_ALPHA", 64 => "BOT", 65 => "BOT_RC", 66 => "BOT_BETA", 67 => "BOT_ALPHA", 80 => "WEB", 81 => "WEB_RC", 82 => "WEB_BETA", 83 => "WEB_ALPHA", 96 => "DESKTOPWIN", 97 => "DESKTOPWIN_RC", 98 => "DESKTOPWIN_BETA", 99 => "DESKTOPWIN_ALPHA", 112 => "DESKTOPMAC", 113 => "DESKTOPMAC_RC", 114 => "DESKTOPMAC_BETA", 115 => "DESKTOPMAC_ALPHA", 128 => "CHANNELGW", 129 => "CHANNELGW_RC", 130 => "CHANNELGW_BETA", 131 => "CHANNELGW_ALPHA", 144 => "CHANNELCP", 145 => "CHANNELCP_RC", 146 => "CHANNELCP_BETA", 147 => "CHANNELCP_ALPHA", 10 => "WINPHONE", 10 => "WINPHONE_RC", 10 => "WINPHONE_BETA", 10 => "WINPHONE_ALPHA", 11 => "BLACKBERRY", 11 => "BLACKBERRY_RC", 11 => "BLACKBERRY_BETA", 11 => "BLACKBERRY_ALPHA", 12 => "WINMETRO", 12 => "WINMETRO_RC", 12 => "WINMETRO_BETA", 12 => "WINMETRO_ALPHA", 13 => "S40", 13 => "S40_RC", 13 => "S40_BETA", 13 => "S40_ALPHA", 14 => "CHRONO", 14 => "CHRONO_RC", 14 => "CHRONO_BETA", 14 => "CHRONO_ALPHA", 16 => "TIZEN", 16 => "TIZEN_RC", 16 => "TIZEN_BETA", 16 => "TIZEN_ALPHA", 17 => "VIRTUAL", 18 => "FIREFOXOS", 18 => "FIREFOXOS_RC", 18 => "FIREFOXOS_BETA", 18 => "FIREFOXOS_ALPHA", 19 => "IOSIPAD", 19 => "IOSIPAD_RC", 19 => "IOSIPAD_BETA", 19 => "IOSIPAD_ALPHA", 20 => "BIZIOS", 20 => "BIZIOS_RC", 20 => "BIZIOS_BETA", 20 => "BIZIOS_ALPHA", 21 => "BIZANDROID", 21 => "BIZANDROID_RC", 21 => "BIZANDROID_BETA", 21 => "BIZANDROID_ALPHA", 22 => "BIZBOT", 22 => "BIZBOT_RC", 22 => "BIZBOT_BETA", 22 => "BIZBOT_ALPHA", 23 => "CHROMEOS", 23 => "CHROMEOS_RC", 23 => "CHROMEOS_BETA", 23 => "CHROMEOS_ALPHA", 24 => "ANDROIDLITE", 24 => "ANDROIDLITE_RC", 24 => "ANDROIDLITE_BETA", 24 => "ANDROIDLITE_ALPHA", 25 => "WIN10", 25 => "WIN10_RC", 25 => "WIN10_BETA", 25 => "WIN10_ALPHA", 26 => "BIZWEB", 26 => "BIZWEB_RC", 26 => "BIZWEB_BETA", 26 => "BIZWEB_ALPHA", 27 => "DUMMYPRIMARY", 27 => "DUMMYPRIMARY_RC", 27 => "DUMMYPRIMARY_BETA", 27 => "DUMMYPRIMARY_ALPHA", 28 => "SQUARE", 28 => "SQUARE_RC", 28 => "SQUARE_BETA", 28 => "SQUARE_ALPHA", 29 => "INTERNAL", 29 => "INTERNAL_RC", 29 => "INTERNAL_BETA", 29 => "INTERNAL_ALPHA", 30 => "CLOVAFRIENDS", 30 => "CLOVAFRIENDS_RC", 30 => "CLOVAFRIENDS_BETA", 30 => "CLOVAFRIENDS_ALPHA", 31 => "WATCHOS", 31 => "WATCHOS_RC", 31 => "WATCHOS_BETA", 31 => "WATCHOS_ALPHA"}
  VALID_VALUES = Set.new([IOS, IOS_RC, IOS_BETA, IOS_ALPHA, ANDROID, ANDROID_RC, ANDROID_BETA, ANDROID_ALPHA, WAP, WAP_RC, WAP_BETA, WAP_ALPHA, BOT, BOT_RC, BOT_BETA, BOT_ALPHA, WEB, WEB_RC, WEB_BETA, WEB_ALPHA, DESKTOPWIN, DESKTOPWIN_RC, DESKTOPWIN_BETA, DESKTOPWIN_ALPHA, DESKTOPMAC, DESKTOPMAC_RC, DESKTOPMAC_BETA, DESKTOPMAC_ALPHA, CHANNELGW, CHANNELGW_RC, CHANNELGW_BETA, CHANNELGW_ALPHA, CHANNELCP, CHANNELCP_RC, CHANNELCP_BETA, CHANNELCP_ALPHA, WINPHONE, WINPHONE_RC, WINPHONE_BETA, WINPHONE_ALPHA, BLACKBERRY, BLACKBERRY_RC, BLACKBERRY_BETA, BLACKBERRY_ALPHA, WINMETRO, WINMETRO_RC, WINMETRO_BETA, WINMETRO_ALPHA, S40, S40_RC, S40_BETA, S40_ALPHA, CHRONO, CHRONO_RC, CHRONO_BETA, CHRONO_ALPHA, TIZEN, TIZEN_RC, TIZEN_BETA, TIZEN_ALPHA, VIRTUAL, FIREFOXOS, FIREFOXOS_RC, FIREFOXOS_BETA, FIREFOXOS_ALPHA, IOSIPAD, IOSIPAD_RC, IOSIPAD_BETA, IOSIPAD_ALPHA, BIZIOS, BIZIOS_RC, BIZIOS_BETA, BIZIOS_ALPHA, BIZANDROID, BIZANDROID_RC, BIZANDROID_BETA, BIZANDROID_ALPHA, BIZBOT, BIZBOT_RC, BIZBOT_BETA, BIZBOT_ALPHA, CHROMEOS, CHROMEOS_RC, CHROMEOS_BETA, CHROMEOS_ALPHA, ANDROIDLITE, ANDROIDLITE_RC, ANDROIDLITE_BETA, ANDROIDLITE_ALPHA, WIN10, WIN10_RC, WIN10_BETA, WIN10_ALPHA, BIZWEB, BIZWEB_RC, BIZWEB_BETA, BIZWEB_ALPHA, DUMMYPRIMARY, DUMMYPRIMARY_RC, DUMMYPRIMARY_BETA, DUMMYPRIMARY_ALPHA, SQUARE, SQUARE_RC, SQUARE_BETA, SQUARE_ALPHA, INTERNAL, INTERNAL_RC, INTERNAL_BETA, INTERNAL_ALPHA, CLOVAFRIENDS, CLOVAFRIENDS_RC, CLOVAFRIENDS_BETA, CLOVAFRIENDS_ALPHA, WATCHOS, WATCHOS_RC, WATCHOS_BETA, WATCHOS_ALPHA]).freeze
end

module J0_a_e_a_b_k5
  NOT_SPECIFIED = 0
  JP_DOCOMO = 1
  JP_AU = 2
  JP_SOFTBANK = 3
  KR_SKT = 17
  KR_KT = 18
  KR_LGT = 19
  JP_DOCOMO_LINE = 4
  JP_SOFTBANK_LINE = 5
  JP_AU_LINE = 6
  VALUE_MAP = {0 => "NOT_SPECIFIED", 1 => "JP_DOCOMO", 2 => "JP_AU", 3 => "JP_SOFTBANK", 17 => "KR_SKT", 18 => "KR_KT", 19 => "KR_LGT", 4 => "JP_DOCOMO_LINE", 5 => "JP_SOFTBANK_LINE", 6 => "JP_AU_LINE"}
  VALID_VALUES = Set.new([NOT_SPECIFIED, JP_DOCOMO, JP_AU, JP_SOFTBANK, KR_SKT, KR_KT, KR_LGT, JP_DOCOMO_LINE, JP_SOFTBANK_LINE, JP_AU_LINE]).freeze
end

module J0_a_e_a_b_ze
  ALL = 127
  EMAIL = 1
  DISPLAY_NAME = 2
  PHONETIC_NAME = 4
  PICTURE = 8
  STATUS_MESSAGE = 16
  ALLOW_SEARCH_BY_USERID = 32
  ALLOW_SEARCH_BY_EMAIL = 64
  BUDDY_STATUS = 128
  MUSIC_PROFILE = 16
  AVATAR_PROFILE = 32
  VALUE_MAP = {127 => "ALL", 1 => "EMAIL", 2 => "DISPLAY_NAME", 4 => "PHONETIC_NAME", 8 => "PICTURE", 16 => "STATUS_MESSAGE", 32 => "ALLOW_SEARCH_BY_USERID", 64 => "ALLOW_SEARCH_BY_EMAIL", 128 => "BUDDY_STATUS", 16 => "MUSIC_PROFILE", 32 => "AVATAR_PROFILE"}
  VALID_VALUES = Set.new([ALL, EMAIL, DISPLAY_NAME, PHONETIC_NAME, PICTURE, STATUS_MESSAGE, ALLOW_SEARCH_BY_USERID, ALLOW_SEARCH_BY_EMAIL, BUDDY_STATUS, MUSIC_PROFILE, AVATAR_PROFILE]).freeze
end

module J0_a_e_a_b_s7
  UNKNOWN = 0
  WIFI = 1
  CELLULAR_NETWORK = 2
  VALUE_MAP = {0 => "UNKNOWN", 1 => "WIFI", 2 => "CELLULAR_NETWORK"}
  VALID_VALUES = Set.new([UNKNOWN, WIFI, CELLULAR_NETWORK]).freeze
end

module J0_a_e_a_b_gc
  AUDIO = 1
  VIDEO = 2
  LIVE = 3
  VALUE_MAP = {1 => "AUDIO", 2 => "VIDEO", 3 => "LIVE"}
  VALID_VALUES = Set.new([AUDIO, VIDEO, LIVE]).freeze
end

module J0_a_e_a_b_hc
  STANDARD = 1
  CONSTELLA = 2
  VALUE_MAP = {1 => "STANDARD", 2 => "CONSTELLA"}
  VALID_VALUES = Set.new([STANDARD, CONSTELLA]).freeze
end

module J0_a_e_a_b_we
  PUBLIC = 0
  PRIVATE = 1
  VALUE_MAP = {0 => "PUBLIC", 1 => "PRIVATE"}
  VALID_VALUES = Set.new([PUBLIC, PRIVATE]).freeze
end

module J0_a_e_a_b_wa
  INCOMING = 1
  OUTGOING = 2
  VALUE_MAP = {1 => "INCOMING", 2 => "OUTGOING"}
  VALID_VALUES = Set.new([INCOMING, OUTGOING]).freeze
end

module J0_a_e_a_b_g2
  NA = 0
  FRIEND_VIEW = 1
  OFFICIAL_ACCOUNT_VIEW = 2
  VALUE_MAP = {0 => "NA", 1 => "FRIEND_VIEW", 2 => "OFFICIAL_ACCOUNT_VIEW"}
  VALID_VALUES = Set.new([NA, FRIEND_VIEW, OFFICIAL_ACCOUNT_VIEW]).freeze
end

module J0_a_e_a_b_g
  SKIP = 0
  PINCODE = 1
  SECURITY_CENTER = 2
  VALUE_MAP = {0 => "SKIP", 1 => "PINCODE", 2 => "SECURITY_CENTER"}
  VALID_VALUES = Set.new([SKIP, PINCODE, SECURITY_CENTER]).freeze
end

module J0_a_e_a_b_yc
  UNKNOWN = 0
  APP_FOREGROUND = 1
  PERIODIC = 2
  VALUE_MAP = {0 => "UNKNOWN", 1 => "APP_FOREGROUND", 2 => "PERIODIC"}
  VALID_VALUES = Set.new([UNKNOWN, APP_FOREGROUND, PERIODIC]).freeze
end

module J0_a_e_a_b_d0
  UNKNOWN = 0
  V1 = 1
  VALUE_MAP = {0 => "UNKNOWN", 1 => "V1"}
  VALID_VALUES = Set.new([UNKNOWN, V1]).freeze
end

module J0_a_e_a_b_ua
  AUDIO = 1
  VIDEO = 2
  FACEPLAY = 3
  VALUE_MAP = {1 => "AUDIO", 2 => "VIDEO", 3 => "FACEPLAY"}
  VALID_VALUES = Set.new([AUDIO, VIDEO, FACEPLAY]).freeze
end

module J0_a_e_a_b_pf
  UNKNOWN = 0
  DIRECT_INVITATION = 1
  DIRECT_CHAT = 2
  GROUP_INVITATION = 3
  GROUP_CHAT = 4
  ROOM_INVITATION = 5
  ROOM_CHAT = 6
  FRIEND_PROFILE = 7
  DIRECT_CHAT_SELECTED = 8
  GROUP_CHAT_SELECTED = 9
  ROOM_CHAT_SELECTED = 10
  DEPRECATED = 11
  VALUE_MAP = {0 => "UNKNOWN", 1 => "DIRECT_INVITATION", 2 => "DIRECT_CHAT", 3 => "GROUP_INVITATION", 4 => "GROUP_CHAT", 5 => "ROOM_INVITATION", 6 => "ROOM_CHAT", 7 => "FRIEND_PROFILE", 8 => "DIRECT_CHAT_SELECTED", 9 => "GROUP_CHAT_SELECTED", 10 => "ROOM_CHAT_SELECTED", 11 => "DEPRECATED"}
  VALID_VALUES = Set.new([UNKNOWN, DIRECT_INVITATION, DIRECT_CHAT, GROUP_INVITATION, GROUP_CHAT, ROOM_INVITATION, ROOM_CHAT, FRIEND_PROFILE, DIRECT_CHAT_SELECTED, GROUP_CHAT_SELECTED, ROOM_CHAT_SELECTED, DEPRECATED]).freeze
end

module J0_a_e_a_b_lg
  OTHER = 0
  ADVERTISING = 1
  GENDER_HARASSMENT = 2
  HARASSMENT = 3
  VALUE_MAP = {0 => "OTHER", 1 => "ADVERTISING", 2 => "GENDER_HARASSMENT", 3 => "HARASSMENT"}
  VALID_VALUES = Set.new([OTHER, ADVERTISING, GENDER_HARASSMENT, HARASSMENT]).freeze
end

module J0_a_e_a_b_ot
  UNKNOWN = 0
  LOCATION = 1
  VALUE_MAP = {0 => "UNKNOWN", 1 => "LOCATION"}
  VALID_VALUES = Set.new([UNKNOWN, LOCATION]).freeze
end

module J0_a_e_a_b_h3
  NEW = 1
  PLANET = 2
  VALUE_MAP = {1 => "NEW", 2 => "PLANET"}
  VALID_VALUES = Set.new([NEW, PLANET]).freeze
end

module J0_a_e_a_b_xd
  COIN = 0
  CREDIT = 1
  MONTHLY = 2
  VALUE_MAP = {0 => "COIN", 1 => "CREDIT", 2 => "MONTHLY"}
  VALID_VALUES = Set.new([COIN, CREDIT, MONTHLY]).freeze
end

module J0_a_e_a_b_a2
  ON_AIR = 0
  LIVE = 1
  VALUE_MAP = {0 => "ON_AIR", 1 => "LIVE"}
  VALID_VALUES = Set.new([ON_AIR, LIVE]).freeze
end

module J0_a_e_a_b_e2
  RICH_MENU_ID = 0
  STATUS_BAR = 1
  VALUE_MAP = {0 => "RICH_MENU_ID", 1 => "STATUS_BAR"}
  VALID_VALUES = Set.new([RICH_MENU_ID, STATUS_BAR]).freeze
end

module J0_a_e_a_b_p9
  BEACON_AGREEMENT = 1
  BLUETOOTH = 2
  SHAKE_AGREEMENT = 3
  AUTO_SUGGEST = 4
  CHATROOM_CAPTURE = 5
  CHATROOM_MINIMIZEBROWSER = 6
  CHATROOM_MOBILESAFARI = 7
  VIDEO_HIGHTLIGHT_WIZARD = 8
  CHAT_FOLDER = 9
  VALUE_MAP = {1 => "BEACON_AGREEMENT", 2 => "BLUETOOTH", 3 => "SHAKE_AGREEMENT", 4 => "AUTO_SUGGEST", 5 => "CHATROOM_CAPTURE", 6 => "CHATROOM_MINIMIZEBROWSER", 7 => "CHATROOM_MOBILESAFARI", 8 => "VIDEO_HIGHTLIGHT_WIZARD", 9 => "CHAT_FOLDER"}
  VALID_VALUES = Set.new([BEACON_AGREEMENT, BLUETOOTH, SHAKE_AGREEMENT, AUTO_SUGGEST, CHATROOM_CAPTURE, CHATROOM_MINIMIZEBROWSER, CHATROOM_MOBILESAFARI, VIDEO_HIGHTLIGHT_WIZARD, CHAT_FOLDER]).freeze
end

module J0_a_e_a_b_r9
  LOCATION_OS = 1
  LOCATION_APP = 2
  VIDEO_AUTO_PLAY = 3
  HNI = 4
  AUTO_SUGGEST_LANG = 5
  CHAT_EFFECT_CACHED_CONTENT_LIST = 6
  VALUE_MAP = {1 => "LOCATION_OS", 2 => "LOCATION_APP", 3 => "VIDEO_AUTO_PLAY", 4 => "HNI", 5 => "AUTO_SUGGEST_LANG", 6 => "CHAT_EFFECT_CACHED_CONTENT_LIST"}
  VALID_VALUES = Set.new([LOCATION_OS, LOCATION_APP, VIDEO_AUTO_PLAY, HNI, AUTO_SUGGEST_LANG, CHAT_EFFECT_CACHED_CONTENT_LIST]).freeze
end

module J0_a_e_a_b_ae
  OUT = 0
  IN = 1
  TOLLFREE = 2
  RECORD = 3
  AD = 4
  CS = 5
  OA = 6
  VALUE_MAP = {0 => "OUT", 1 => "IN", 2 => "TOLLFREE", 3 => "RECORD", 4 => "AD", 5 => "CS", 6 => "OA"}
  VALID_VALUES = Set.new([OUT, IN, TOLLFREE, RECORD, AD, CS, OA]).freeze
end

module J0_a_e_a_b_nd
  END_OF_OPERATION = 0
  UPDATE_PROFILE = 1
  UPDATE_SETTINGS = 36
  NOTIFIED_UPDATE_PROFILE = 2
  REGISTER_USERID = 3
  ADD_CONTACT = 4
  NOTIFIED_ADD_CONTACT = 5
  BLOCK_CONTACT = 6
  UNBLOCK_CONTACT = 7
  NOTIFIED_RECOMMEND_CONTACT = 8
  CREATE_GROUP = 9
  UPDATE_GROUP = 10
  NOTIFIED_UPDATE_GROUP = 11
  INVITE_INTO_GROUP = 12
  NOTIFIED_INVITE_INTO_GROUP = 13
  CANCEL_INVITATION_GROUP = 31
  NOTIFIED_CANCEL_INVITATION_GROUP = 32
  LEAVE_GROUP = 14
  NOTIFIED_LEAVE_GROUP = 15
  ACCEPT_GROUP_INVITATION = 16
  NOTIFIED_ACCEPT_GROUP_INVITATION = 17
  REJECT_GROUP_INVITATION = 34
  NOTIFIED_REJECT_GROUP_INVITATION = 35
  KICKOUT_FROM_GROUP = 18
  NOTIFIED_KICKOUT_FROM_GROUP = 19
  CREATE_ROOM = 20
  INVITE_INTO_ROOM = 21
  NOTIFIED_INVITE_INTO_ROOM = 22
  LEAVE_ROOM = 23
  NOTIFIED_LEAVE_ROOM = 24
  SEND_MESSAGE = 25
  RECEIVE_MESSAGE = 26
  SEND_MESSAGE_RECEIPT = 27
  RECEIVE_MESSAGE_RECEIPT = 28
  SEND_CONTENT_RECEIPT = 29
  SEND_CHAT_CHECKED = 40
  SEND_CHAT_REMOVED = 41
  RECEIVE_ANNOUNCEMENT = 30
  INVITE_VIA_EMAIL = 38
  NOTIFIED_REGISTER_USER = 37
  NOTIFIED_UNREGISTER_USER = 33
  NOTIFIED_REQUEST_RECOVERY = 39
  NOTIFIED_FORCE_SYNC = 42
  SEND_CONTENT = 43
  SEND_MESSAGE_MYHOME = 44
  NOTIFIED_UPDATE_CONTENT_PREVIEW = 45
  REMOVE_ALL_MESSAGES = 46
  NOTIFIED_UPDATE_PURCHASES = 47
  DUMMY = 48
  UPDATE_CONTACT = 49
  NOTIFIED_RECEIVED_CALL = 50
  CANCEL_CALL = 51
  NOTIFIED_REDIRECT = 52
  NOTIFIED_CHANNEL_SYNC = 53
  FAILED_SEND_MESSAGE = 54
  NOTIFIED_READ_MESSAGE = 55
  FAILED_EMAIL_CONFIRMATION = 56
  NOTIFIED_PUSH_NOTICENTER_ITEM = 59
  NOTIFIED_CHAT_CONTENT = 58
  NOTIFIED_JOIN_CHAT = 60
  NOTIFIED_LEAVE_CHAT = 61
  NOTIFIED_TYPING = 62
  FRIEND_REQUEST_ACCEPTED = 63
  DESTROY_MESSAGE = 64
  NOTIFIED_DESTROY_MESSAGE = 65
  UPDATE_PUBLICKEYCHAIN = 66
  NOTIFIED_UPDATE_PUBLICKEYCHAIN = 67
  NOTIFIED_BLOCK_CONTACT = 68
  NOTIFIED_UNBLOCK_CONTACT = 69
  UPDATE_GROUPPREFERENCE = 70
  NOTIFIED_PAYMENT_EVENT = 71
  REGISTER_E2EE_PUBLICKEY = 72
  NOTIFIED_E2EE_KEY_EXCHANGE_REQ = 73
  NOTIFIED_E2EE_KEY_EXCHANGE_RESP = 74
  NOTIFIED_E2EE_MESSAGE_RESEND_REQ = 75
  NOTIFIED_E2EE_MESSAGE_RESEND_RESP = 76
  NOTIFIED_E2EE_KEY_UPDATE = 77
  NOTIFIED_BUDDY_UPDATE_PROFILE = 78
  NOTIFIED_UPDATE_LINEAT_TABS = 79
  UPDATE_ROOM = 80
  NOTIFIED_BEACON_DETECTED = 81
  UPDATE_EXTENDED_PROFILE = 82
  ADD_FOLLOW = 83
  NOTIFIED_ADD_FOLLOW = 84
  DELETE_FOLLOW = 85
  NOTIFIED_DELETE_FOLLOW = 86
  UPDATE_TIMELINE_SETTINGS = 87
  NOTIFIED_FRIEND_REQUEST = 88
  UPDATE_RINGBACK_TONE = 89
  NOTIFIED_POSTBACK = 90
  RECEIVE_READ_WATERMARK = 91
  NOTIFIED_MESSAGE_DELIVERED = 92
  NOTIFIED_UPDATE_CHAT_BAR = 93
  NOTIFIED_CHATAPP_INSTALLED = 94
  NOTIFIED_CHATAPP_UPDATED = 95
  NOTIFIED_CHATAPP_NEW_MARK = 96
  NOTIFIED_CHATAPP_DELETED = 97
  NOTIFIED_CHATAPP_SYNC = 98
  NOTIFIED_UPDATE_MESSAGE = 99
  UPDATE_CHATROOMBGM = 100
  NOTIFIED_UPDATE_CHATROOMBGM = 101
  UPDATE_RINGTONE = 102
  UPDATE_USER_SETTINGS = 118
  NOTIFIED_UPDATE_STATUS_BAR = 119
  CREATE_CHAT = 120
  UPDATE_CHAT = 121
  NOTIFIED_UPDATE_CHAT = 122
  INVITE_INTO_CHAT = 123
  NOTIFIED_INVITE_INTO_CHAT = 124
  CANCEL_CHAT_INVITATION = 125
  NOTIFIED_CANCEL_CHAT_INVITATION = 126
  DELETE_SELF_FROM_CHAT = 127
  NOTIFIED_DELETE_SELF_FROM_CHAT = 128
  ACCEPT_CHAT_INVITATION = 129
  NOTIFIED_ACCEPT_CHAT_INVITATION = 130
  REJECT_CHAT_INVITATION = 131
  DELETE_OTHER_FROM_CHAT = 132
  NOTIFIED_DELETE_OTHER_FROM_CHAT = 133
  NOTIFIED_CONTACT_CALENDAR_EVENT = 134
  NOTIFIED_CONTACT_CALENDAR_EVENT_ALL = 135
  UPDATE_THINGS_OPERATIONS = 136
  SEND_CHAT_HIDDEN = 137
  VALUE_MAP = {0 => "END_OF_OPERATION", 1 => "UPDATE_PROFILE", 36 => "UPDATE_SETTINGS", 2 => "NOTIFIED_UPDATE_PROFILE", 3 => "REGISTER_USERID", 4 => "ADD_CONTACT", 5 => "NOTIFIED_ADD_CONTACT", 6 => "BLOCK_CONTACT", 7 => "UNBLOCK_CONTACT", 8 => "NOTIFIED_RECOMMEND_CONTACT", 9 => "CREATE_GROUP", 10 => "UPDATE_GROUP", 11 => "NOTIFIED_UPDATE_GROUP", 12 => "INVITE_INTO_GROUP", 13 => "NOTIFIED_INVITE_INTO_GROUP", 31 => "CANCEL_INVITATION_GROUP", 32 => "NOTIFIED_CANCEL_INVITATION_GROUP", 14 => "LEAVE_GROUP", 15 => "NOTIFIED_LEAVE_GROUP", 16 => "ACCEPT_GROUP_INVITATION", 17 => "NOTIFIED_ACCEPT_GROUP_INVITATION", 34 => "REJECT_GROUP_INVITATION", 35 => "NOTIFIED_REJECT_GROUP_INVITATION", 18 => "KICKOUT_FROM_GROUP", 19 => "NOTIFIED_KICKOUT_FROM_GROUP", 20 => "CREATE_ROOM", 21 => "INVITE_INTO_ROOM", 22 => "NOTIFIED_INVITE_INTO_ROOM", 23 => "LEAVE_ROOM", 24 => "NOTIFIED_LEAVE_ROOM", 25 => "SEND_MESSAGE", 26 => "RECEIVE_MESSAGE", 27 => "SEND_MESSAGE_RECEIPT", 28 => "RECEIVE_MESSAGE_RECEIPT", 29 => "SEND_CONTENT_RECEIPT", 40 => "SEND_CHAT_CHECKED", 41 => "SEND_CHAT_REMOVED", 30 => "RECEIVE_ANNOUNCEMENT", 38 => "INVITE_VIA_EMAIL", 37 => "NOTIFIED_REGISTER_USER", 33 => "NOTIFIED_UNREGISTER_USER", 39 => "NOTIFIED_REQUEST_RECOVERY", 42 => "NOTIFIED_FORCE_SYNC", 43 => "SEND_CONTENT", 44 => "SEND_MESSAGE_MYHOME", 45 => "NOTIFIED_UPDATE_CONTENT_PREVIEW", 46 => "REMOVE_ALL_MESSAGES", 47 => "NOTIFIED_UPDATE_PURCHASES", 48 => "DUMMY", 49 => "UPDATE_CONTACT", 50 => "NOTIFIED_RECEIVED_CALL", 51 => "CANCEL_CALL", 52 => "NOTIFIED_REDIRECT", 53 => "NOTIFIED_CHANNEL_SYNC", 54 => "FAILED_SEND_MESSAGE", 55 => "NOTIFIED_READ_MESSAGE", 56 => "FAILED_EMAIL_CONFIRMATION", 59 => "NOTIFIED_PUSH_NOTICENTER_ITEM", 58 => "NOTIFIED_CHAT_CONTENT", 60 => "NOTIFIED_JOIN_CHAT", 61 => "NOTIFIED_LEAVE_CHAT", 62 => "NOTIFIED_TYPING", 63 => "FRIEND_REQUEST_ACCEPTED", 64 => "DESTROY_MESSAGE", 65 => "NOTIFIED_DESTROY_MESSAGE", 66 => "UPDATE_PUBLICKEYCHAIN", 67 => "NOTIFIED_UPDATE_PUBLICKEYCHAIN", 68 => "NOTIFIED_BLOCK_CONTACT", 69 => "NOTIFIED_UNBLOCK_CONTACT", 70 => "UPDATE_GROUPPREFERENCE", 71 => "NOTIFIED_PAYMENT_EVENT", 72 => "REGISTER_E2EE_PUBLICKEY", 73 => "NOTIFIED_E2EE_KEY_EXCHANGE_REQ", 74 => "NOTIFIED_E2EE_KEY_EXCHANGE_RESP", 75 => "NOTIFIED_E2EE_MESSAGE_RESEND_REQ", 76 => "NOTIFIED_E2EE_MESSAGE_RESEND_RESP", 77 => "NOTIFIED_E2EE_KEY_UPDATE", 78 => "NOTIFIED_BUDDY_UPDATE_PROFILE", 79 => "NOTIFIED_UPDATE_LINEAT_TABS", 80 => "UPDATE_ROOM", 81 => "NOTIFIED_BEACON_DETECTED", 82 => "UPDATE_EXTENDED_PROFILE", 83 => "ADD_FOLLOW", 84 => "NOTIFIED_ADD_FOLLOW", 85 => "DELETE_FOLLOW", 86 => "NOTIFIED_DELETE_FOLLOW", 87 => "UPDATE_TIMELINE_SETTINGS", 88 => "NOTIFIED_FRIEND_REQUEST", 89 => "UPDATE_RINGBACK_TONE", 90 => "NOTIFIED_POSTBACK", 91 => "RECEIVE_READ_WATERMARK", 92 => "NOTIFIED_MESSAGE_DELIVERED", 93 => "NOTIFIED_UPDATE_CHAT_BAR", 94 => "NOTIFIED_CHATAPP_INSTALLED", 95 => "NOTIFIED_CHATAPP_UPDATED", 96 => "NOTIFIED_CHATAPP_NEW_MARK", 97 => "NOTIFIED_CHATAPP_DELETED", 98 => "NOTIFIED_CHATAPP_SYNC", 99 => "NOTIFIED_UPDATE_MESSAGE", 100 => "UPDATE_CHATROOMBGM", 101 => "NOTIFIED_UPDATE_CHATROOMBGM", 102 => "UPDATE_RINGTONE", 118 => "UPDATE_USER_SETTINGS", 119 => "NOTIFIED_UPDATE_STATUS_BAR", 120 => "CREATE_CHAT", 121 => "UPDATE_CHAT", 122 => "NOTIFIED_UPDATE_CHAT", 123 => "INVITE_INTO_CHAT", 124 => "NOTIFIED_INVITE_INTO_CHAT", 125 => "CANCEL_CHAT_INVITATION", 126 => "NOTIFIED_CANCEL_CHAT_INVITATION", 127 => "DELETE_SELF_FROM_CHAT", 128 => "NOTIFIED_DELETE_SELF_FROM_CHAT", 129 => "ACCEPT_CHAT_INVITATION", 130 => "NOTIFIED_ACCEPT_CHAT_INVITATION", 131 => "REJECT_CHAT_INVITATION", 132 => "DELETE_OTHER_FROM_CHAT", 133 => "NOTIFIED_DELETE_OTHER_FROM_CHAT", 134 => "NOTIFIED_CONTACT_CALENDAR_EVENT", 135 => "NOTIFIED_CONTACT_CALENDAR_EVENT_ALL", 136 => "UPDATE_THINGS_OPERATIONS", 137 => "SEND_CHAT_HIDDEN"}
  VALID_VALUES = Set.new([END_OF_OPERATION, UPDATE_PROFILE, UPDATE_SETTINGS, NOTIFIED_UPDATE_PROFILE, REGISTER_USERID, ADD_CONTACT, NOTIFIED_ADD_CONTACT, BLOCK_CONTACT, UNBLOCK_CONTACT, NOTIFIED_RECOMMEND_CONTACT, CREATE_GROUP, UPDATE_GROUP, NOTIFIED_UPDATE_GROUP, INVITE_INTO_GROUP, NOTIFIED_INVITE_INTO_GROUP, CANCEL_INVITATION_GROUP, NOTIFIED_CANCEL_INVITATION_GROUP, LEAVE_GROUP, NOTIFIED_LEAVE_GROUP, ACCEPT_GROUP_INVITATION, NOTIFIED_ACCEPT_GROUP_INVITATION, REJECT_GROUP_INVITATION, NOTIFIED_REJECT_GROUP_INVITATION, KICKOUT_FROM_GROUP, NOTIFIED_KICKOUT_FROM_GROUP, CREATE_ROOM, INVITE_INTO_ROOM, NOTIFIED_INVITE_INTO_ROOM, LEAVE_ROOM, NOTIFIED_LEAVE_ROOM, SEND_MESSAGE, RECEIVE_MESSAGE, SEND_MESSAGE_RECEIPT, RECEIVE_MESSAGE_RECEIPT, SEND_CONTENT_RECEIPT, SEND_CHAT_CHECKED, SEND_CHAT_REMOVED, RECEIVE_ANNOUNCEMENT, INVITE_VIA_EMAIL, NOTIFIED_REGISTER_USER, NOTIFIED_UNREGISTER_USER, NOTIFIED_REQUEST_RECOVERY, NOTIFIED_FORCE_SYNC, SEND_CONTENT, SEND_MESSAGE_MYHOME, NOTIFIED_UPDATE_CONTENT_PREVIEW, REMOVE_ALL_MESSAGES, NOTIFIED_UPDATE_PURCHASES, DUMMY, UPDATE_CONTACT, NOTIFIED_RECEIVED_CALL, CANCEL_CALL, NOTIFIED_REDIRECT, NOTIFIED_CHANNEL_SYNC, FAILED_SEND_MESSAGE, NOTIFIED_READ_MESSAGE, FAILED_EMAIL_CONFIRMATION, NOTIFIED_PUSH_NOTICENTER_ITEM, NOTIFIED_CHAT_CONTENT, NOTIFIED_JOIN_CHAT, NOTIFIED_LEAVE_CHAT, NOTIFIED_TYPING, FRIEND_REQUEST_ACCEPTED, DESTROY_MESSAGE, NOTIFIED_DESTROY_MESSAGE, UPDATE_PUBLICKEYCHAIN, NOTIFIED_UPDATE_PUBLICKEYCHAIN, NOTIFIED_BLOCK_CONTACT, NOTIFIED_UNBLOCK_CONTACT, UPDATE_GROUPPREFERENCE, NOTIFIED_PAYMENT_EVENT, REGISTER_E2EE_PUBLICKEY, NOTIFIED_E2EE_KEY_EXCHANGE_REQ, NOTIFIED_E2EE_KEY_EXCHANGE_RESP, NOTIFIED_E2EE_MESSAGE_RESEND_REQ, NOTIFIED_E2EE_MESSAGE_RESEND_RESP, NOTIFIED_E2EE_KEY_UPDATE, NOTIFIED_BUDDY_UPDATE_PROFILE, NOTIFIED_UPDATE_LINEAT_TABS, UPDATE_ROOM, NOTIFIED_BEACON_DETECTED, UPDATE_EXTENDED_PROFILE, ADD_FOLLOW, NOTIFIED_ADD_FOLLOW, DELETE_FOLLOW, NOTIFIED_DELETE_FOLLOW, UPDATE_TIMELINE_SETTINGS, NOTIFIED_FRIEND_REQUEST, UPDATE_RINGBACK_TONE, NOTIFIED_POSTBACK, RECEIVE_READ_WATERMARK, NOTIFIED_MESSAGE_DELIVERED, NOTIFIED_UPDATE_CHAT_BAR, NOTIFIED_CHATAPP_INSTALLED, NOTIFIED_CHATAPP_UPDATED, NOTIFIED_CHATAPP_NEW_MARK, NOTIFIED_CHATAPP_DELETED, NOTIFIED_CHATAPP_SYNC, NOTIFIED_UPDATE_MESSAGE, UPDATE_CHATROOMBGM, NOTIFIED_UPDATE_CHATROOMBGM, UPDATE_RINGTONE, UPDATE_USER_SETTINGS, NOTIFIED_UPDATE_STATUS_BAR, CREATE_CHAT, UPDATE_CHAT, NOTIFIED_UPDATE_CHAT, INVITE_INTO_CHAT, NOTIFIED_INVITE_INTO_CHAT, CANCEL_CHAT_INVITATION, NOTIFIED_CANCEL_CHAT_INVITATION, DELETE_SELF_FROM_CHAT, NOTIFIED_DELETE_SELF_FROM_CHAT, ACCEPT_CHAT_INVITATION, NOTIFIED_ACCEPT_CHAT_INVITATION, REJECT_CHAT_INVITATION, DELETE_OTHER_FROM_CHAT, NOTIFIED_DELETE_OTHER_FROM_CHAT, NOTIFIED_CONTACT_CALENDAR_EVENT, NOTIFIED_CONTACT_CALENDAR_EVENT_ALL, UPDATE_THINGS_OPERATIONS, SEND_CHAT_HIDDEN]).freeze
end

module J0_a_e_a_b_md
  NORMAL = 0
  ALERT_DISABLED = 1
  ALWAYS = 2
  VALUE_MAP = {0 => "NORMAL", 1 => "ALERT_DISABLED", 2 => "ALWAYS"}
  VALID_VALUES = Set.new([NORMAL, ALERT_DISABLED, ALWAYS]).freeze
end

module J0_a_e_a_b_ce
  NOT_SPECIFIED = 0
  VALID = 1
  VERIFICATION_REQUIRED = 2
  NOT_PERMITTED = 3
  LIMIT_EXCEEDED = 4
  LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED = 5
  VALUE_MAP = {0 => "NOT_SPECIFIED", 1 => "VALID", 2 => "VERIFICATION_REQUIRED", 3 => "NOT_PERMITTED", 4 => "LIMIT_EXCEEDED", 5 => "LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED"}
  VALID_VALUES = Set.new([NOT_SPECIFIED, VALID, VERIFICATION_REQUIRED, NOT_PERMITTED, LIMIT_EXCEEDED, LIMIT_EXCEEDED_AND_VERIFICATION_REQUIRED]).freeze
end

module J0_a_e_a_b_s1
  NORMAL = 1
  LOW_BATTERY = 2
  VALUE_MAP = {1 => "NORMAL", 2 => "LOW_BATTERY"}
  VALID_VALUES = Set.new([NORMAL, LOW_BATTERY]).freeze
end

module J0_a_e_a_b_rt
  FAILED = 0
  OK_NOT_REGISTERED_YET = 1
  OK_REGISTERED_WITH_SAME_DEVICE = 2
  OK_REGISTERED_WITH_ANOTHER_DEVICE = 3
  VALUE_MAP = {0 => "FAILED", 1 => "OK_NOT_REGISTERED_YET", 2 => "OK_REGISTERED_WITH_SAME_DEVICE", 3 => "OK_REGISTERED_WITH_ANOTHER_DEVICE"}
  VALID_VALUES = Set.new([FAILED, OK_NOT_REGISTERED_YET, OK_REGISTERED_WITH_SAME_DEVICE, OK_REGISTERED_WITH_ANOTHER_DEVICE]).freeze
end

module J0_a_e_a_b_t8
  BIRTHDAY = 0
  VALUE_MAP = {0 => "BIRTHDAY"}
  VALID_VALUES = Set.new([BIRTHDAY]).freeze
end

module J0_a_e_a_b_pt
  NORMAL = 0
  UNBOUND = 1
  UNREGISTERED = 2
  UNKNOWN = 3
  VALUE_MAP = {0 => "NORMAL", 1 => "UNBOUND", 2 => "UNREGISTERED", 3 => "UNKNOWN"}
  VALID_VALUES = Set.new([NORMAL, UNBOUND, UNREGISTERED, UNKNOWN]).freeze
end

module J0_a_e_a_b_s8
  SHOW = 0
  HIDE = 1
  VALUE_MAP = {0 => "SHOW", 1 => "HIDE"}
  VALID_VALUES = Set.new([SHOW, HIDE]).freeze
end

module J0_a_e_a_b_b2
  NORMAL = 0
  VIDEOCAM = 1
  VOIP = 2
  RECORD = 3
  VALUE_MAP = {0 => "NORMAL", 1 => "VIDEOCAM", 2 => "VOIP", 3 => "RECORD"}
  VALID_VALUES = Set.new([NORMAL, VIDEOCAM, VOIP, RECORD]).freeze
end

module J0_a_e_a_b_qe
  REQUEST_DUPLICATION = 11
  INVALID_PARAMETER = 11
  NOT_ENOUGH_BALANCE = 11
  AUTHENTICATION_FAIL = 11
  API_ACCESS_FORBIDDEN = 11
  MEMBER_ACCOUNT_NOT_FOUND = 11
  SERVICE_ACCOUNT_NOT_FOUND = 11
  TRANSACTION_NOT_FOUND = 11
  ALREADY_REVERSED_TRANSACTION = 11
  MESSAGE_NOT_READABLE = 11
  HTTP_REQUEST_METHOD_NOT_SUPPORTED = 11
  HTTP_MEDIA_TYPE_NOT_SUPPORTED = 11
  NOT_ALLOWED_TO_DEPOSIT = 11
  NOT_ALLOWED_TO_PAY = 11
  TRANSACTION_ACCESS_FORBIDDEN = 11
  INVALID_SERVICE_CONFIGURATION = 15
  DCS_COMMUNICATION_FAIL = 19
  UPDATE_BALANCE_FAIL = 19
  SYSTEM_ERROR = 23
  SYSTEM_MAINTENANCE = 23
  VALUE_MAP = {11 => "REQUEST_DUPLICATION", 11 => "INVALID_PARAMETER", 11 => "NOT_ENOUGH_BALANCE", 11 => "AUTHENTICATION_FAIL", 11 => "API_ACCESS_FORBIDDEN", 11 => "MEMBER_ACCOUNT_NOT_FOUND", 11 => "SERVICE_ACCOUNT_NOT_FOUND", 11 => "TRANSACTION_NOT_FOUND", 11 => "ALREADY_REVERSED_TRANSACTION", 11 => "MESSAGE_NOT_READABLE", 11 => "HTTP_REQUEST_METHOD_NOT_SUPPORTED", 11 => "HTTP_MEDIA_TYPE_NOT_SUPPORTED", 11 => "NOT_ALLOWED_TO_DEPOSIT", 11 => "NOT_ALLOWED_TO_PAY", 11 => "TRANSACTION_ACCESS_FORBIDDEN", 15 => "INVALID_SERVICE_CONFIGURATION", 19 => "DCS_COMMUNICATION_FAIL", 19 => "UPDATE_BALANCE_FAIL", 23 => "SYSTEM_ERROR", 23 => "SYSTEM_MAINTENANCE"}
  VALID_VALUES = Set.new([REQUEST_DUPLICATION, INVALID_PARAMETER, NOT_ENOUGH_BALANCE, AUTHENTICATION_FAIL, API_ACCESS_FORBIDDEN, MEMBER_ACCOUNT_NOT_FOUND, SERVICE_ACCOUNT_NOT_FOUND, TRANSACTION_NOT_FOUND, ALREADY_REVERSED_TRANSACTION, MESSAGE_NOT_READABLE, HTTP_REQUEST_METHOD_NOT_SUPPORTED, HTTP_MEDIA_TYPE_NOT_SUPPORTED, NOT_ALLOWED_TO_DEPOSIT, NOT_ALLOWED_TO_PAY, TRANSACTION_ACCESS_FORBIDDEN, INVALID_SERVICE_CONFIGURATION, DCS_COMMUNICATION_FAIL, UPDATE_BALANCE_FAIL, SYSTEM_ERROR, SYSTEM_MAINTENANCE]).freeze
end

module J0_a_e_a_b_f7
  NAME = 1
  PICTURE_STATUS = 2
  PREVENTED_JOIN_BY_TICKET = 4
  NOTIFICATION_SETTING = 8
  INVITATION_TICKET = 16
  FAVORITE_TIMESTAMP = 32
  CHAT_TYPE = 64
  VALUE_MAP = {1 => "NAME", 2 => "PICTURE_STATUS", 4 => "PREVENTED_JOIN_BY_TICKET", 8 => "NOTIFICATION_SETTING", 16 => "INVITATION_TICKET", 32 => "FAVORITE_TIMESTAMP", 64 => "CHAT_TYPE"}
  VALID_VALUES = Set.new([NAME, PICTURE_STATUS, PREVENTED_JOIN_BY_TICKET, NOTIFICATION_SETTING, INVITATION_TICKET, FAVORITE_TIMESTAMP, CHAT_TYPE]).freeze
end

module J0_a_e_a_b_d3
  NOT_A_FRIEND = 0
  ALWAYS = 1
  VALUE_MAP = {0 => "NOT_A_FRIEND", 1 => "ALWAYS"}
  VALID_VALUES = Set.new([NOT_A_FRIEND, ALWAYS]).freeze
end

module J0_a_e_a_b_d9
  UNKNOWN = 0
  EUROPEAN_ECONOMIC_AREA = 1
  VALUE_MAP = {0 => "UNKNOWN", 1 => "EUROPEAN_ECONOMIC_AREA"}
  VALID_VALUES = Set.new([UNKNOWN, EUROPEAN_ECONOMIC_AREA]).freeze
end

module J0_a_e_a_b_qg
  PROFILE = 0
  SETTINGS = 1
  OPS = 2
  CONTACT = 3
  RECOMMEND = 4
  BLOCK = 5
  GROUP = 6
  ROOM = 7
  NOTIFICATION = 8
  ADDRESS_BOOK = 9
  VALUE_MAP = {0 => "PROFILE", 1 => "SETTINGS", 2 => "OPS", 3 => "CONTACT", 4 => "RECOMMEND", 5 => "BLOCK", 6 => "GROUP", 7 => "ROOM", 8 => "NOTIFICATION", 9 => "ADDRESS_BOOK"}
  VALID_VALUES = Set.new([PROFILE, SETTINGS, OPS, CONTACT, RECOMMEND, BLOCK, GROUP, ROOM, NOTIFICATION, ADDRESS_BOOK]).freeze
end

module J0_a_e_a_b_z8
  CONTACT_SETTING_NOTIFICATION_DISABLE = 1
  CONTACT_SETTING_DISPLAY_NAME_OVERRIDE = 2
  CONTACT_SETTING_CONTACT_HIDE = 4
  CONTACT_SETTING_FAVORITE = 8
  CONTACT_SETTING_DELETE = 16
  VALUE_MAP = {1 => "CONTACT_SETTING_NOTIFICATION_DISABLE", 2 => "CONTACT_SETTING_DISPLAY_NAME_OVERRIDE", 4 => "CONTACT_SETTING_CONTACT_HIDE", 8 => "CONTACT_SETTING_FAVORITE", 16 => "CONTACT_SETTING_DELETE"}
  VALID_VALUES = Set.new([CONTACT_SETTING_NOTIFICATION_DISABLE, CONTACT_SETTING_DISPLAY_NAME_OVERRIDE, CONTACT_SETTING_CONTACT_HIDE, CONTACT_SETTING_FAVORITE, CONTACT_SETTING_DELETE]).freeze
end

module J0_a_e_a_b_ea
  BIRTHDAY = 0
  VALUE_MAP = {0 => "BIRTHDAY"}
  VALID_VALUES = Set.new([BIRTHDAY]).freeze
end

class GetChatappRequest; end

class Chatapp; end

class GetChatappResponse; end

class ChatappException < ::Thrift::Exception; end

class GetMyChatappsRequest; end

class MyChatapp; end

class GetMyChatappsResponse; end

class TalkException < ::Thrift::Exception; end

class BeaconTouchActions; end

class BeaconCondition; end

class BeaconLayerInfoAndActions; end

class BeaconBackgroundNotification; end

class DataUserBot; end

class BeaconQueryResponse; end

class Rssi; end

class GetSquareBotRequest; end

class SquareBot; end

class GetSquareBotResponse; end

class BotException < ::Thrift::Exception; end

class LiffErrorConsentRequired; end

class LiffErrorPayload; end

class LiffException < ::Thrift::Exception; end

class ShareTargetPickerResultRequest; end

class LiffNoneContext; end

class LiffChatContext; end

class LiffSquareChatContext; end

class LiffContext; end

class LiffAdvertisingId; end

class LiffDeviceSetting; end

class LiffWebLoginRequest; end

class LiffWebLoginResponse; end

class LiffChannelException < ::Thrift::Exception; end

class LiffViewRequest; end

class LIFFMenuColor; end

class LIFFMenuColorSetting; end

class LiffView; end

class LiffViewResponse; end

class RevokeTokenRequest; end

class IssueBirthdayGiftTokenRequest; end

class IssueBirthdayGiftTokenResponse; end

class HomeException < ::Thrift::Exception; end

class GetHomeFlexContentRequest; end

class HomeTabPlacement; end

class GetHomeFlexContentResponse; end

class GetHomeServiceListRequest; end

class HomeService; end

class HomeCategory; end

class GetHomeServiceListResponse; end

class ConnectEapAccountRequest; end

class ConnectEapAccountResponse; end

class AccountEapConnectException < ::Thrift::Exception; end

class DisconnectEapAccountRequest; end

class DisconnectEapAccountResponse; end

class Device; end

class OpenSessionRequest; end

class OpenSessionResponse; end

class EapLogin; end

class VerifyEapLoginRequest; end

class VerifyEapLoginResponse; end

class SimCard; end

class GetCountryInfoResponse; end

class WebAuthDetails; end

class AuthException < ::Thrift::Exception; end

class CreateQrSessionResponse; end

class CreateQrSessionRequest; end

class CreateQrCodeResponse; end

class CreateQrCodeRequest; end

class CreatePinCodeResponse; end

class CreatePinCodeRequest; end

class QrCodeLoginResponse; end

class QrCodeLoginRequest; end

class VerifyCertificateRequest; end

class CheckPinCodeVerifiedRequest; end

class CheckQrCodeVerifiedRequest; end

class ValidateProfileResponse; end

class UserPhoneNumber; end

class AccountIdentifier; end

class EncryptedPassword; end

class GetPhoneVerifMethodResponse; end

class UserProfile; end

class VerifyAccountUsingPwdResponse; end

class GetSecondAuthMethodResponse; end

class VerifyPhoneResponse; end

class SocialLogin; end

class GetUserProfileResponse; end

class VerifySocialLoginResponse; end

class IssueWebAuthDetailsForAcctVerifResponse; end

class IssueWebAuthDetailsForSecondAuthResponse; end

class MigratePrimaryResponse; end

class RegisterPrimaryResponse; end

class ExchangeEncryptionKeyRequest; end

class ExchangeEncryptionKeyResponse; end

class SendPinCodeForPhoneResponse; end

class GetAcctVerifMethodResponse; end

class SetPasswordResponse; end

class CancelPinCodeRequest; end

class CancelPinCodeResponse; end

class SecondaryQrCodeException < ::Thrift::Exception; end

class GetLoginActorContextRequest; end

class GetLoginActorContextResponse; end

class VerifyPinCodeRequest; end

class VerifyPinCodeResponse; end

class VerifyQrCodeRequest; end

class VerifyQrCodeResponse; end

class PaymentException < ::Thrift::Exception; end

class PaymentCybsInfo; end

class PaymentCountrySettingMenu; end

class PaymentUrlInfo; end

class PaymentCountrySettingLimitInfo; end

class PaymentTosUrlBundle; end

class PayWithdrawStaticMenu; end

class PaymentCountrySettingInfoEx; end

class PaymentTransactionHistoryInfo; end

class PaymentEligibleFriendStatus; end

class RSAEncryptedPassword; end

class RSAEncryptedLoginInfo; end

class PaymentAvailableAuth; end

class PaymentFlowTypeCustomElement; end

class PaymentFlowTypeCustom; end

class PaymentFlowTypeInfo; end

class DisplayMoney; end

class TransferRequestReceivedInfo; end

class TransferRequestInfo; end

class PaymentAuthenticationInfo; end

class UnregisterAvailabilityInfo; end

class PaymentLineCardInfo; end

class PaymentLineCardIssueForm; end

class CheckOperationResult; end

class LinePayAccountInfo; end

class ThRegionalInfo; end

class PaymentRegionalInfo; end

class CreatedPaymentUserInfoEx; end

class PaymentCancellationInfo; end

class PaymentDetailInfo; end

class PaymentTTSPinCodeVerificationInfo; end

class PaymentTransferRequest; end

class PaymentPointInfo; end

class PaymentRequiredAgreementsInfo; end

class PaymentTradeInfo; end

class PaymentSettingsMenuInfoAccount; end

class PaymentSettingsMenuInfo; end

class BankInfo; end

class PayStatusInfo; end

class PayInvitationUserInfo; end

class PayInvitationInfo; end

class PaymentAddressSearchResult; end

class MoneyRange; end

class BalanceInfo; end

class PaymentUserJobInfo; end

class BankBranchInfo; end

class PaymentTransferTargetInfo; end

class PaymentCardValidationRule; end

class PaymentMyCode; end

class PayInvoiceSetting; end

class PaymentCacheableSettings; end

class PaymentUserInfoDigest; end

class AutocompleteRequest; end

class AutocompleteCandidate; end

class AutocompleteResult; end

class SearchException < ::Thrift::Exception; end

class Notice; end

class KeywordInfo; end

class SearchSection; end

class UserEvent; end

class SearchCommonParameter; end

class CategoryItem; end

class SpotItem; end

class PromotionBuddyInfo; end

class PromotionInstallInfo; end

class PromotionMissionInfo; end

class PromotionDetail; end

class PromotionInfo; end

class ImageTextProperty; end

class StickerProperty; end

class ThemeProperty; end

class SticonProperty; end

class ProductProperty; end

class ProductSearchSummary; end

class ServiceItem; end

class AdditionalInfoItem; end

class YellowpageItem; end

class BuddySearchResult; end

class GeoAddressItem; end

class AddFriendData; end

class InstallAppData; end

class JumpUrlData; end

class ButtonActionData; end

class ShortcutButtonAction; end

class ShortcutButton; end

class ShortcutItem; end

class ApprovalValue; end

class CodeValue; end

class SquareJoinMethodValue; end

class SquareJoinMethod; end

class Square; end

class SquareStatus; end

class NoteStatus; end

class SquareInfo; end

class Category; end

class PortalSearchCollection; end

class PortalSearchSummary; end

class SearchItemUnion; end

class SearchResultItem; end

class SearchResultCollection; end

class SearchResult; end

class SearchPagingParameter; end

class GetRequest; end

class BulkGetRequest; end

class SettingsException < ::Thrift::Exception; end

class ImmediateTrigger; end

class BleNotificationReceivedTrigger; end

class ScenarioTrigger; end

class GattReadAction; end

class GattWriteAction; end

class SleepAction; end

class DisconnectAction; end

class StopNotificationAction; end

class ScenarioAction; end

class Scenario; end

class ScenarioSet; end

class GetPredefinedScenarioSetsResponse; end

class ThingsException < ::Thrift::Exception; end

class DeviceLinkRequest; end

class DeviceLinkResponse; end

class NotifyDeviceConnectionRequest; end

class NotifyDeviceConnectionResponse; end

class NotifyDeviceDisconnectionRequest; end

class NotifyDeviceDisconnectionResponse; end

class VoidScenarioActionResult; end

class BinaryScenarioActionResult; end

class ScenarioActionResult; end

class ScenarioResult; end

class NotifyScenarioExecutedRequest; end

class NotifyScenarioExecutedResponse; end

class DeviceUnlinkRequest; end

class DeviceUnlinkResponse; end

class FetchOperationsRequest; end

class ConnectDeviceOperation; end

class ExecuteOnetimeScenarioOperation; end

class OperationAction; end

class ThingsOperation; end

class FetchOperationsResponse; end

class GetBleDeviceRequest; end

class ThingsDevice; end

class BleProduct; end

class UserDevice; end

class GetPredefinedScenarioSetsRequest; end

class Locale; end

class GetTagClusterFileRequest; end

class GetResourceFileRequest; end

class PurchaseSubscriptionRequest; end

class ApplicationVersionRange; end

class StickerIdRange; end

class StickerSummary; end

class ThemeSummary; end

class SticonSummary; end

class ProductTypeSummary; end

class ProductSummary; end

class ProductSummaryList; end

class ShopException < ::Thrift::Exception; end

class GetTagClusterFileResponse; end

class GetResourceFileReponse; end

class PurchaseSubscriptionResponse; end

class EstablishE2EESessionRequest; end

class RemoveProductFromSubscriptionSlotRequest; end

class EstablishE2EESessionResponse; end

class Price; end

class ProductWishProperty; end

class ProductSubscriptionProperty; end

class ProductDetail; end

class DetailedProductList; end

class PurchaseRecord; end

class PurchaseRecordList; end

class RemoveProductFromSubscriptionSlotResponse; end

class DemographicType; end

class StudentInformation; end

class SaveStudentInformationRequest; end

class ShowcaseV3; end

class SaveStudentInformationResponse; end

class AddProductToSubscriptionSlotRequest; end

class GetProductSummariesInSubscriptionSlotsRequest; end

class GetStudentInformationRequest; end

class ImageTextRequestEntry; end

class CustomizeImageTextRequest; end

class AddProductToSubscriptionSlotResponse; end

class GetProductSummariesInSubscriptionSlotsResponse; end

class GetStudentInformationResponse; end

class CustomizeImageTextResponse; end

class BuyMustbuyRequest; end

class GetProductRequest; end

class GetSubscriptionPlansRequest; end

class ProductValidationScheme; end

class ProductValidationRequest; end

class GetProductResponse; end

class SubscriptionPlan; end

class GetSubscriptionPlansResponse; end

class ProductValidationResult; end

class GetSubscriptionStatusRequest; end

class BirthdayGiftAssociationVerifyRequest; end

class SubscriptionStatus; end

class GetSubscriptionStatusResponse; end

class BirthdayGiftAssociationVerifyResponse; end

class ChangeSubscriptionRequest; end

class GetSuggestDictionarySettingRequest; end

class ChangeSubscriptionResponse; end

class SuggestResource; end

class SuggestDictionarySetting; end

class GetSuggestDictionarySettingResponse; end

class FindRestorablePlanRequest; end

class ShopFilter; end

class ProductListByAuthorRequest; end

class GetSuggestResourcesV2Request; end

class FindRestorablePlanResponse; end

class ProductList; end

class GetSuggestResourcesV2Response; end

class LatestProductsByAuthorRequest; end

class ShopUpdates; end

class AutoSuggestionShowcaseRequest; end

class ProductSummaryForAutoSuggest; end

class AutoSuggestionShowcaseResponse; end

class GetBrowsingHistoryRequest; end

class GetRecommendOaRequest; end

class PurchaseOrder; end

class BrowsingHistory; end

class GetBrowsingHistoryResponse; end

class GetRecommendOaResponse; end

class PurchaseOrderResponse; end

class DynamicHomeNativeRequest; end

class GetOldSticonMappingRequest; end

class GetRecommendationRequest; end

class SticonProductMapping; end

class GetOldSticonMappingResponse; end

class GetRecommendationResponse; end

class GetReservationRequest; end

class Admission; end

class UIInfo; end

class Ticket; end

class Reservation; end

class GetReservationResponse; end

class TicketException < ::Thrift::Exception; end

class GetReservationsRequest; end

class GetReservationsResponse; end

class NotifyEnteringRequest; end

class NotifyEnteringResponse; end

class ReturnTicketRequest; end

class ReturnTicketResponse; end

class GetBalanceSummaryRequestV2; end

class CurrencyProperty; end

class IpassTokenProperty; end

class LinePayInfo; end

class LinePayPromotion; end

class MyRankBenefit; end

class MyRank; end

class LinePointInfo; end

class BalanceShortcut; end

class BalanceShortcutInfo; end

class GetBalanceSummaryResponseV2; end

class WalletException < ::Thrift::Exception; end

class GetModuleRequest; end

class Module; end

class ModuleResponse; end

class NotModified; end

class NotFound; end

class GetModuleResponse; end

class GetModulesRequestV2; end

class ModuleAggregationResponseV2; end

class GetModulesResponseV2; end

class GetModulesRequest; end

class ModuleAggregationResponse; end

class GetModulesResponse; end

class GetSmartChannelRecommendationsRequest; end

class SmartChannelRecommendation; end

class GetSmartChannelRecommendationsResponse; end

class AcceptChatInvitationResponse; end

class ChatRoomAnnouncementContentMetadata; end

class ChatRoomAnnouncementContents; end

class ChatRoomAnnouncement; end

class GroupExtra; end

class PeerExtra; end

class Extra; end

class Chat; end

class FindChatByTicketResponse; end

class RejectChatInvitationRequest; end

class VerificationSessionData; end

class AuthLoginRequest; end

class AvatarProfile; end

class Contact; end

class CoinProductItem; end

class PaidCallRedeemResult; end

class ChannelProvider; end

class ChannelDomain; end

class ChannelInfo; end

class ApprovedChannelInfo; end

class ApprovedChannelInfos; end

class ChannelException < ::Thrift::Exception; end

class CreateChatRequest; end

class RejectChatInvitationResponse; end

class EmailConfirmationSession; end

class ContactModification; end

class AuthLoginResponse; end

class CoinHistoryCondition; end

class CoinPurchaseReservation; end

class GetCoinProductsRequest; end

class CreateChatResponse; end

class E2EEGroupSharedKey; end

class MessageBoxListRequest; end

class ContactRegistration; end

class IdentifierConfirmationRequest; end

class IdentityCredentialRequest; end

class CoinPayLoad; end

class CoinHistory; end

class Coin; end

class CoinHistoryResult; end

class PaymentReservationResult; end

class GetCoinProductsResponse; end

class GroupPreference; end

class Group; end

class MessageBoxV2MessageId; end

class GeolocationAccuracy; end

class Location; end

class Message; end

class ExtendedMessageBox; end

class MessageBoxList; end

class Settings; end

class IdentityCredentialResponse; end

class GetGroupCallUrlInfoRequest; end

class GetCoinHistoryRequest; end

class ChatEffectMetaContent; end

class ChatEffectMeta; end

class E2EEPublicKey; end

class GetGroupCallUrlInfoResponse; end

class PaidCallUserRate; end

class ChannelNotificationSetting; end

class GetCoinHistoryResponse; end

class Room; end

class TMessageReadRangeEntry; end

class TMessageReadRange; end

class GetGroupCallUrlsRequest; end

class UpdateGroupCallUrlAttribute; end

class UpdateGroupCallUrlRequest; end

class DeviceInfo; end

class ProfileContent; end

class UpdateProfileAttributesRequest; end

class GroupCallUrl; end

class GetGroupCallUrlsResponse; end

class UpdateGroupCallUrlResponse; end

class ChannelSettings; end

class SnsProfile; end

class GetEncryptedIdentityV3Response; end

class PendingAgreementsResponse; end

class Geolocation; end

class FollowMid; end

class RemoveFollowerRequest; end

class GetTotalCoinBalanceRequest; end

class GetPreviousMessagesV2Request; end

class ClientNetworkStatus; end

class GroupCall; end

class ChannelDomains; end

class GetTotalCoinBalanceResponse; end

class PlaceSearchInfo; end

class DeleteOtherFromChatRequest; end

class ExtendedProfileBirthday; end

class ExtendedProfile; end

class UnfollowRequest; end

class WebLoginRequest; end

class DeleteOtherFromChatResponse; end

class SnsIdUserStatus; end

class ChatRoomBGM; end

class GetFollowersRequest; end

class AuthKeyExchangeRequest; end

class PaidCallAdResult; end

class WebLoginResponse; end

class CancelChatInvitationRequest; end

class DeleteSelfFromChatRequest; end

class GetChatsRequest; end

class FollowBuddyDetail; end

class FollowProfile; end

class GetFollowersResponse; end

class Profile; end

class InviteIntoChatRequest; end

class AuthKeyExchangeResponse; end

class GetBuddyChatBarRequest; end

class ChannelIdWithLastUpdated; end

class MoretabRecommendAccount; end

class MoretabRecommend; end

class CancelChatInvitationResponse; end

class DeleteSelfFromChatResponse; end

class GetChatsResponse; end

class GetFollowingsRequest; end

class InviteIntoChatResponse; end

class AbuseMessage; end

class AbuseReport; end

class BuddyRichMenuChatBarItem; end

class BuddyWidget; end

class BuddyWidgetListCharBarItem; end

class BuddyWebChatBarItem; end

class BuddyChatBarItem; end

class BuddyChatBar; end

class CallRoute; end

class PaidCallBalance; end

class FollowRequest; end

class GetFollowingsResponse; end

class BuddyDetail; end

class ProximityMatchCandidateEntry; end

class ProximityMatchCandidateResult; end

class RSAKey; end

class Configurations; end

class AgeCheckDocomoResult; end

class BuddyPersonalDetail; end

class BuddyDetailWithPersonal; end

class CallHost; end

class GroupCallRoute; end

class PaidCallHistory; end

class PaidCallHistoryResult; end

class FriendRequest; end

class IdentityCredential; end

class SecurityCenterResult; end

class AcquireOACallRouteRequest; end

class Operation; end

class UserAuthStatus; end

class PaidCallDialing; end

class PaidCallResponse; end

class OACallRoute; end

class AcquireOACallRouteResponse; end

class PaidCallCurrencyExchangeRate; end

class PaidCallAdCountry; end

class PaidCallMetadataResult; end

class ChannelToken; end

class FriendRequestsInfo; end

class GetBuddyLiveRequest; end

class PushRecvReport; end

class NearbyEntry; end

class PhoneVerificationResult; end

class AuthSessionRequest; end

class BuddyLive; end

class GetBuddyLiveResponse; end

class RequestTokenResponse; end

class GetAllChatMidsRequest; end

class GetContactsV2Request; end

class RegisterWithPhoneNumberResult; end

class SendPostbackRequest; end

class JoinChatByCallUrlRequest; end

class CoinUseReservationItem; end

class CoinUseReservation; end

class GetBalanceRequest; end

class GetAllChatMidsResponse; end

class ContactCalendarEvent; end

class ContactCalendarEvents; end

class ContactEntry; end

class GetContactsV2Response; end

class AgeCheckRequestResult; end

class BuddyOnAirUrls; end

class BuddyOnAir; end

class TestCallRoute; end

class JoinChatByCallUrlResponse; end

class Balance; end

class GetBalanceResponse; end

class PointException < ::Thrift::Exception; end

class InstantNews; end

class RingbackTone; end

class UpdateChatRequest; end

class GetBuddyStatusBarV2Request; end

class CreateGroupCallUrlRequest; end

class EmailConfirmationResult; end

class UpdateChatResponse; end

class BuddyStatusBar; end

class CreateGroupCallUrlResponse; end

class AcceptChatInvitationByTicketRequest; end

class Ringtone; end

class E2EENegotiationResult; end

class RegisterWithSnsIdResult; end

class SIMInfo; end

class DeleteGroupCallUrlRequest; end

class AcceptChatInvitationByTicketResponse; end

class AnalyticsInfo; end

class ReissueChatTicketRequest; end

class DeleteGroupCallUrlResponse; end

class AcceptChatInvitationRequest; end

class FindChatByTicketRequest; end

class ReissueChatTicketResponse; end

class GetChatappRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHATAPPID = 1
  LANGUAGE = 2

  FIELDS = {
    CHATAPPID => {:type => ::Thrift::Types::STRING, :name => 'chatappId'},
    LANGUAGE => {:type => ::Thrift::Types::STRING, :name => 'language'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Chatapp
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHATAPPID = 1
  NAME = 2
  ICON = 3
  URL = 4
  AVAILABLECHATTYPES = 5

  FIELDS = {
    CHATAPPID => {:type => ::Thrift::Types::STRING, :name => 'chatappId'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    ICON => {:type => ::Thrift::Types::STRING, :name => 'icon'},
    URL => {:type => ::Thrift::Types::STRING, :name => 'url'},
    AVAILABLECHATTYPES => {:type => ::Thrift::Types::LIST, :name => 'availableChatTypes', :element => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_a0_a_a_a}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetChatappResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  APP = 1

  FIELDS = {
    APP => {:type => ::Thrift::Types::STRUCT, :name => 'app', :class => ::Chatapp}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ChatappException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  REASON = 2

  FIELDS = {
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::G_a_a0_a_a_d},
    REASON => {:type => ::Thrift::Types::STRING, :name => 'reason'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::G_a_a0_a_a_d::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetMyChatappsRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LANGUAGE = 1
  CONTINUATIONTOKEN = 2

  FIELDS = {
    LANGUAGE => {:type => ::Thrift::Types::STRING, :name => 'language'},
    CONTINUATIONTOKEN => {:type => ::Thrift::Types::STRING, :name => 'continuationToken', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class MyChatapp
  include ::Thrift::Struct, ::Thrift::Struct_Union
  APP = 1
  CATEGORY = 2
  PRIORITY = 3

  FIELDS = {
    APP => {:type => ::Thrift::Types::STRUCT, :name => 'app', :class => ::Chatapp},
    CATEGORY => {:type => ::Thrift::Types::I32, :name => 'category', :enum_class => ::G_a_a0_a_a_c},
    PRIORITY => {:type => ::Thrift::Types::I64, :name => 'priority', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @category.nil? || ::G_a_a0_a_a_c::VALID_VALUES.include?(@category)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field category!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetMyChatappsResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  APPS = 1
  CONTINUATIONTOKEN = 2

  FIELDS = {
    APPS => {:type => ::Thrift::Types::LIST, :name => 'apps', :element => {:type => ::Thrift::Types::STRUCT, :class => ::MyChatapp}},
    CONTINUATIONTOKEN => {:type => ::Thrift::Types::STRING, :name => 'continuationToken', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class TalkException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  REASON = 2
  PARAMETERMAP = 3

  FIELDS = {
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::G_a_c_s_a_a_a_a_u},
    REASON => {:type => ::Thrift::Types::STRING, :name => 'reason'},
    PARAMETERMAP => {:type => ::Thrift::Types::MAP, :name => 'parameterMap', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::G_a_c_s_a_a_a_a_u::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class BeaconTouchActions
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ACTIONS = 1

  FIELDS = {
    ACTIONS => {:type => ::Thrift::Types::LIST, :name => 'actions', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BeaconCondition
  include ::Thrift::Struct, ::Thrift::Struct_Union
  INFRIENDS = 1
  NOTINFRIENDS = 2
  TERMSAGREED = 3

  FIELDS = {
    INFRIENDS => {:type => ::Thrift::Types::STRING, :name => 'inFriends'},
    NOTINFRIENDS => {:type => ::Thrift::Types::STRING, :name => 'notInFriends'},
    TERMSAGREED => {:type => ::Thrift::Types::BOOL, :name => 'termsAgreed'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BeaconLayerInfoAndActions
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PICTUREURL = 1
  LABEL = 2
  TEXT = 3
  ACTIONS = 4
  SHOWORCONDITIONS = 5
  SHOWCONDITIONS = 6
  TIMETOHIDE = 7

  FIELDS = {
    PICTUREURL => {:type => ::Thrift::Types::STRING, :name => 'pictureUrl'},
    LABEL => {:type => ::Thrift::Types::STRING, :name => 'label'},
    TEXT => {:type => ::Thrift::Types::STRING, :name => 'text'},
    ACTIONS => {:type => ::Thrift::Types::LIST, :name => 'actions', :element => {:type => ::Thrift::Types::STRING}},
    SHOWORCONDITIONS => {:type => ::Thrift::Types::LIST, :name => 'showOrConditions', :element => {:type => ::Thrift::Types::STRUCT, :class => ::BeaconCondition}},
    SHOWCONDITIONS => {:type => ::Thrift::Types::LIST, :name => 'showConditions', :element => {:type => ::Thrift::Types::STRUCT, :class => ::BeaconCondition}},
    TIMETOHIDE => {:type => ::Thrift::Types::I64, :name => 'timeToHide'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BeaconBackgroundNotification
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ACTIONINTERVAL = 1
  ACTIONANDCONDITIONS = 2
  ACTIONDELAY = 3
  ACTIONCONDITIONS = 4

  FIELDS = {
    ACTIONINTERVAL => {:type => ::Thrift::Types::I64, :name => 'actionInterval'},
    ACTIONANDCONDITIONS => {:type => ::Thrift::Types::LIST, :name => 'actionAndConditions', :element => {:type => ::Thrift::Types::STRUCT, :class => ::BeaconCondition}},
    ACTIONDELAY => {:type => ::Thrift::Types::I64, :name => 'actionDelay'},
    ACTIONCONDITIONS => {:type => ::Thrift::Types::LIST, :name => 'actionConditions', :element => {:type => ::Thrift::Types::STRUCT, :class => ::BeaconCondition}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class DataUserBot
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MID = 1
  DISPLAYNAME = 2
  PICTUREURL = 3

  FIELDS = {
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'},
    DISPLAYNAME => {:type => ::Thrift::Types::STRING, :name => 'displayName'},
    PICTUREURL => {:type => ::Thrift::Types::STRING, :name => 'pictureUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BeaconQueryResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DEPRECATED_ACTIONURLS = 2
  CACHETTL = 3
  TOUCHACTIONS = 4
  LAYERINFOANDACTIONS = 5
  BACKGROUNDENTERINGNOTIFICATION = 6
  BACKGROUNDLEAVINGNOTIFICATION = 7
  GROUP = 8
  MAJOR = 9
  MINOR = 10
  EFFECTIVERANGE = 11
  CHANNELWHITELIST = 12
  ACTIONID = 13
  STAYREPORTINTERVAL = 14
  LEAVETHRESHOLDTIME = 15
  TOUCHTHRESHOLD = 17
  CUTOFFTHRESHOLD = 18
  DATAUSERBOTS = 19
  DEVICEID = 20
  DEVICEDISPLAYNAME = 21
  BOTMID = 22

  FIELDS = {
    DEPRECATED_ACTIONURLS => {:type => ::Thrift::Types::LIST, :name => 'deprecated_actionUrls', :element => {:type => ::Thrift::Types::STRING}},
    CACHETTL => {:type => ::Thrift::Types::I64, :name => 'cacheTtl'},
    TOUCHACTIONS => {:type => ::Thrift::Types::STRUCT, :name => 'touchActions', :class => ::BeaconTouchActions},
    LAYERINFOANDACTIONS => {:type => ::Thrift::Types::STRUCT, :name => 'layerInfoAndActions', :class => ::BeaconLayerInfoAndActions},
    BACKGROUNDENTERINGNOTIFICATION => {:type => ::Thrift::Types::STRUCT, :name => 'backgroundEnteringNotification', :class => ::BeaconBackgroundNotification},
    BACKGROUNDLEAVINGNOTIFICATION => {:type => ::Thrift::Types::STRUCT, :name => 'backgroundLeavingNotification', :class => ::BeaconBackgroundNotification},
    GROUP => {:type => ::Thrift::Types::STRING, :name => 'group'},
    MAJOR => {:type => ::Thrift::Types::STRING, :name => 'major'},
    MINOR => {:type => ::Thrift::Types::STRING, :name => 'minor'},
    EFFECTIVERANGE => {:type => ::Thrift::Types::DOUBLE, :name => 'effectiveRange'},
    CHANNELWHITELIST => {:type => ::Thrift::Types::LIST, :name => 'channelWhiteList', :element => {:type => ::Thrift::Types::STRING}},
    ACTIONID => {:type => ::Thrift::Types::I64, :name => 'actionId'},
    STAYREPORTINTERVAL => {:type => ::Thrift::Types::I64, :name => 'stayReportInterval'},
    LEAVETHRESHOLDTIME => {:type => ::Thrift::Types::I64, :name => 'leaveThresholdTime'},
    TOUCHTHRESHOLD => {:type => ::Thrift::Types::DOUBLE, :name => 'touchThreshold'},
    CUTOFFTHRESHOLD => {:type => ::Thrift::Types::I16, :name => 'cutoffThreshold'},
    DATAUSERBOTS => {:type => ::Thrift::Types::LIST, :name => 'dataUserBots', :element => {:type => ::Thrift::Types::STRUCT, :class => ::DataUserBot}},
    DEVICEID => {:type => ::Thrift::Types::STRING, :name => 'deviceId'},
    DEVICEDISPLAYNAME => {:type => ::Thrift::Types::STRING, :name => 'deviceDisplayName'},
    BOTMID => {:type => ::Thrift::Types::STRING, :name => 'botMid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Rssi
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VALUE = 1

  FIELDS = {
    VALUE => {:type => ::Thrift::Types::I32, :name => 'value'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetSquareBotRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BOTMID = 1

  FIELDS = {
    BOTMID => {:type => ::Thrift::Types::STRING, :name => 'botMid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SquareBot
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BOTMID = 1
  ACTIVE = 2
  DISPLAYNAME = 3
  PROFILEIMAGEOBSHASH = 4
  ICONTYPE = 5
  LASTMODIFIEDAT = 6
  EXPIREDIN = 7

  FIELDS = {
    BOTMID => {:type => ::Thrift::Types::STRING, :name => 'botMid'},
    ACTIVE => {:type => ::Thrift::Types::BOOL, :name => 'active'},
    DISPLAYNAME => {:type => ::Thrift::Types::STRING, :name => 'displayName'},
    PROFILEIMAGEOBSHASH => {:type => ::Thrift::Types::STRING, :name => 'profileImageObsHash'},
    ICONTYPE => {:type => ::Thrift::Types::I32, :name => 'iconType'},
    LASTMODIFIEDAT => {:type => ::Thrift::Types::I64, :name => 'lastModifiedAt'},
    EXPIREDIN => {:type => ::Thrift::Types::I64, :name => 'expiredIn'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetSquareBotResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SQUAREBOT = 1

  FIELDS = {
    SQUAREBOT => {:type => ::Thrift::Types::STRUCT, :name => 'squareBot', :class => ::SquareBot}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BotException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ERRORCODE = 1
  REASON = 2
  PARAMETERMAP = 3

  FIELDS = {
    ERRORCODE => {:type => ::Thrift::Types::I32, :name => 'errorCode', :enum_class => ::G_a_c_u_a_a_a},
    REASON => {:type => ::Thrift::Types::STRING, :name => 'reason'},
    PARAMETERMAP => {:type => ::Thrift::Types::MAP, :name => 'parameterMap', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @errorCode.nil? || ::G_a_c_u_a_a_a::VALID_VALUES.include?(@errorCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field errorCode!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class LiffErrorConsentRequired
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHANNELID = 1
  CONSENTURL = 2

  FIELDS = {
    CHANNELID => {:type => ::Thrift::Types::STRING, :name => 'channelId'},
    CONSENTURL => {:type => ::Thrift::Types::STRING, :name => 'consentUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class LiffErrorPayload
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CONSENTREQUIRED = 3

  FIELDS = {
    CONSENTREQUIRED => {:type => ::Thrift::Types::STRUCT, :name => 'consentRequired', :class => ::LiffErrorConsentRequired}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class LiffException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  MESSAGE = 2
  PAYLOAD = 3

  FIELDS = {
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::G_a_h_z0_a_j},
    MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'},
    PAYLOAD => {:type => ::Thrift::Types::STRUCT, :name => 'payload', :class => ::LiffErrorPayload, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::G_a_h_z0_a_j::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ShareTargetPickerResultRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  OTT = 1
  LIFFID = 2
  RESULTCODE = 3
  RESULTDESCRIPTION = 4

  FIELDS = {
    OTT => {:type => ::Thrift::Types::STRING, :name => 'ott'},
    LIFFID => {:type => ::Thrift::Types::STRING, :name => 'liffId'},
    RESULTCODE => {:type => ::Thrift::Types::I32, :name => 'resultCode', :enum_class => ::G_a_h_z0_a_l0},
    RESULTDESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'resultDescription', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @resultCode.nil? || ::G_a_h_z0_a_l0::VALID_VALUES.include?(@resultCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field resultCode!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class LiffNoneContext
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class LiffChatContext
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHATMID = 1

  FIELDS = {
    CHATMID => {:type => ::Thrift::Types::STRING, :name => 'chatMid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class LiffSquareChatContext
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SQUARECHATMID = 1

  FIELDS = {
    SQUARECHATMID => {:type => ::Thrift::Types::STRING, :name => 'squareChatMid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class LiffContext
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NONE = 1
  CHAT = 2
  SQUARECHAT = 3

  FIELDS = {
    NONE => {:type => ::Thrift::Types::STRUCT, :name => 'none', :class => ::LiffNoneContext},
    CHAT => {:type => ::Thrift::Types::STRUCT, :name => 'chat', :class => ::LiffChatContext},
    SQUARECHAT => {:type => ::Thrift::Types::STRUCT, :name => 'squareChat', :class => ::LiffSquareChatContext}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class LiffAdvertisingId
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ADVERTISINGID = 1
  TRACKING = 2

  FIELDS = {
    ADVERTISINGID => {:type => ::Thrift::Types::STRING, :name => 'advertisingId', :optional => true},
    TRACKING => {:type => ::Thrift::Types::BOOL, :name => 'tracking', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class LiffDeviceSetting
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VIDEOAUTOPLAYALLOWED = 1
  ADVERTISINGID = 2

  FIELDS = {
    VIDEOAUTOPLAYALLOWED => {:type => ::Thrift::Types::BOOL, :name => 'videoAutoPlayAllowed', :optional => true},
    ADVERTISINGID => {:type => ::Thrift::Types::STRUCT, :name => 'advertisingId', :class => ::LiffAdvertisingId, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class LiffWebLoginRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  HOOKEDFULLURL = 1
  SESSIONSTRING = 2
  CONTEXT = 3
  DEVICESETTING = 4

  FIELDS = {
    HOOKEDFULLURL => {:type => ::Thrift::Types::STRING, :name => 'hookedFullUrl'},
    SESSIONSTRING => {:type => ::Thrift::Types::STRING, :name => 'sessionString'},
    CONTEXT => {:type => ::Thrift::Types::STRUCT, :name => 'context', :class => ::LiffContext},
    DEVICESETTING => {:type => ::Thrift::Types::STRUCT, :name => 'deviceSetting', :class => ::LiffDeviceSetting, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class LiffWebLoginResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RETURNURL = 1
  SESSIONSTRING = 2

  FIELDS = {
    RETURNURL => {:type => ::Thrift::Types::STRING, :name => 'returnUrl'},
    SESSIONSTRING => {:type => ::Thrift::Types::STRING, :name => 'sessionString'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class LiffChannelException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  REASON = 2
  PARAMETERMAP = 3

  FIELDS = {
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::G_a_h_z0_a_e},
    REASON => {:type => ::Thrift::Types::STRING, :name => 'reason'},
    PARAMETERMAP => {:type => ::Thrift::Types::MAP, :name => 'parameterMap', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::G_a_h_z0_a_e::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class LiffViewRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LIFFID = 1
  LANG = 3
  CONTEXT = 2
  DEVICESETTING = 4

  FIELDS = {
    LIFFID => {:type => ::Thrift::Types::STRING, :name => 'liffId'},
    LANG => {:type => ::Thrift::Types::STRING, :name => 'lang'},
    CONTEXT => {:type => ::Thrift::Types::STRUCT, :name => 'context', :class => ::LiffContext},
    DEVICESETTING => {:type => ::Thrift::Types::STRUCT, :name => 'deviceSetting', :class => ::LiffDeviceSetting, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class LIFFMenuColor
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ICONCOLOR = 1
  STATUSBARCOLOR = 2

  FIELDS = {
    ICONCOLOR => {:type => ::Thrift::Types::I32, :name => 'iconColor', :optional => true},
    STATUSBARCOLOR => {:type => ::Thrift::Types::I32, :name => 'statusBarColor', :optional => true, :enum_class => ::G_a_h_z0_a_a}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @statusBarColor.nil? || ::G_a_h_z0_a_a::VALID_VALUES.include?(@statusBarColor)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field statusBarColor!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class LIFFMenuColorSetting
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LIGHTMODECOLOR = 1
  DARKMODECOLOR = 2

  FIELDS = {
    LIGHTMODECOLOR => {:type => ::Thrift::Types::STRUCT, :name => 'lightModeColor', :class => ::LIFFMenuColor, :optional => true},
    DARKMODECOLOR => {:type => ::Thrift::Types::STRUCT, :name => 'darkModeColor', :class => ::LIFFMenuColor, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class LiffView
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TYPE = 1
  URL = 2
  TRUSTEDDOMAIN = 11
  TITLEICONURL = 6
  TITLETEXTCOLOR = 4
  TITLESUBTEXTCOLOR = 7
  TITLEBUTTONCOLOR = 8
  TITLEBACKGROUNDCOLOR = 5
  PROGRESSBARCOLOR = 9
  PROGRESSBACKGROUNDCOLOR = 10
  SUSPENDABLE = 12
  SUSPENDABLEV2 = 16
  MAXBRIGHTNESS = 13
  TITLEBUTTONAREABACKGROUNDCOLOR = 14
  TITLEBUTTONAREABORDERCOLOR = 15
  MENUSTYLE = 17
  MODULEMODE = 18
  PINTOHOMESERVICEID = 19
  MENUCOLORSETTING = 20

  FIELDS = {
    TYPE => {:type => ::Thrift::Types::STRING, :name => 'type'},
    URL => {:type => ::Thrift::Types::STRING, :name => 'url'},
    TRUSTEDDOMAIN => {:type => ::Thrift::Types::BOOL, :name => 'trustedDomain'},
    TITLEICONURL => {:type => ::Thrift::Types::STRING, :name => 'titleIconUrl', :optional => true},
    TITLETEXTCOLOR => {:type => ::Thrift::Types::I32, :name => 'titleTextColor', :optional => true},
    TITLESUBTEXTCOLOR => {:type => ::Thrift::Types::I32, :name => 'titleSubtextColor', :optional => true},
    TITLEBUTTONCOLOR => {:type => ::Thrift::Types::I32, :name => 'titleButtonColor', :optional => true},
    TITLEBACKGROUNDCOLOR => {:type => ::Thrift::Types::I32, :name => 'titleBackgroundColor', :optional => true},
    PROGRESSBARCOLOR => {:type => ::Thrift::Types::I32, :name => 'progressBarColor', :optional => true},
    PROGRESSBACKGROUNDCOLOR => {:type => ::Thrift::Types::I32, :name => 'progressBackgroundColor', :optional => true},
    SUSPENDABLE => {:type => ::Thrift::Types::BOOL, :name => 'suspendable', :optional => true},
    SUSPENDABLEV2 => {:type => ::Thrift::Types::BOOL, :name => 'suspendableV2', :optional => true},
    MAXBRIGHTNESS => {:type => ::Thrift::Types::BOOL, :name => 'maxBrightness', :optional => true},
    TITLEBUTTONAREABACKGROUNDCOLOR => {:type => ::Thrift::Types::I32, :name => 'titleButtonAreaBackgroundColor', :optional => true},
    TITLEBUTTONAREABORDERCOLOR => {:type => ::Thrift::Types::I32, :name => 'titleButtonAreaBorderColor', :optional => true},
    MENUSTYLE => {:type => ::Thrift::Types::I32, :name => 'menuStyle', :optional => true, :enum_class => ::G_a_h_z0_a_p},
    MODULEMODE => {:type => ::Thrift::Types::BOOL, :name => 'moduleMode', :optional => true},
    PINTOHOMESERVICEID => {:type => ::Thrift::Types::I32, :name => 'pinToHomeServiceId', :optional => true},
    MENUCOLORSETTING => {:type => ::Thrift::Types::STRUCT, :name => 'menuColorSetting', :class => ::LIFFMenuColorSetting, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @menuStyle.nil? || ::G_a_h_z0_a_p::VALID_VALUES.include?(@menuStyle)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field menuStyle!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class LiffViewResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VIEW = 1
  CONTEXTTOKEN = 2
  ACCESSTOKEN = 3
  FEATURETOKEN = 4
  FEATURES = 5
  CHANNELID = 6
  IDTOKEN = 7
  SCOPES = 8
  LAUNCHOPTIONS = 9
  PERMANENTLINKPATTERN = 10

  FIELDS = {
    VIEW => {:type => ::Thrift::Types::STRUCT, :name => 'view', :class => ::LiffView},
    CONTEXTTOKEN => {:type => ::Thrift::Types::STRING, :name => 'contextToken', :optional => true},
    ACCESSTOKEN => {:type => ::Thrift::Types::STRING, :name => 'accessToken', :optional => true},
    FEATURETOKEN => {:type => ::Thrift::Types::STRING, :name => 'featureToken', :optional => true},
    FEATURES => {:type => ::Thrift::Types::LIST, :name => 'features', :element => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_h_z0_a_n}, :optional => true},
    CHANNELID => {:type => ::Thrift::Types::STRING, :name => 'channelId', :optional => true},
    IDTOKEN => {:type => ::Thrift::Types::STRING, :name => 'idToken', :optional => true},
    SCOPES => {:type => ::Thrift::Types::LIST, :name => 'scopes', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
    LAUNCHOPTIONS => {:type => ::Thrift::Types::LIST, :name => 'launchOptions', :element => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_h_z0_a_o}, :optional => true},
    PERMANENTLINKPATTERN => {:type => ::Thrift::Types::I32, :name => 'permanentLinkPattern', :optional => true, :enum_class => ::G_a_h_z0_a_j0}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @permanentLinkPattern.nil? || ::G_a_h_z0_a_j0::VALID_VALUES.include?(@permanentLinkPattern)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field permanentLinkPattern!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class RevokeTokenRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ACCESSTOKEN = 1

  FIELDS = {
    ACCESSTOKEN => {:type => ::Thrift::Types::STRING, :name => 'accessToken', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class IssueBirthdayGiftTokenRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RECIPIENTUSERMID = 1

  FIELDS = {
    RECIPIENTUSERMID => {:type => ::Thrift::Types::STRING, :name => 'recipientUserMid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class IssueBirthdayGiftTokenResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  GIFTASSOCIATIONTOKEN = 1

  FIELDS = {
    GIFTASSOCIATIONTOKEN => {:type => ::Thrift::Types::STRING, :name => 'giftAssociationToken'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class HomeException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  EXCEPTIONCODE = 1
  MESSAGE = 2

  FIELDS = {
    EXCEPTIONCODE => {:type => ::Thrift::Types::I32, :name => 'exceptionCode', :enum_class => ::G_a_j0_a_a_a_d_a},
    MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @exceptionCode.nil? || ::G_a_j0_a_a_a_d_a::VALID_VALUES.include?(@exceptionCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field exceptionCode!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetHomeFlexContentRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class HomeTabPlacement
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PLACEMENTTEMPLATEID = 1
  PLACEMENTSERVICE = 2
  PLACEMENTLOGIC = 3
  CONTENTS = 4
  CRSPLACEMENTIMPRESSIONTRACKINGURL = 5

  FIELDS = {
    PLACEMENTTEMPLATEID => {:type => ::Thrift::Types::STRING, :name => 'placementTemplateId'},
    PLACEMENTSERVICE => {:type => ::Thrift::Types::STRING, :name => 'placementService'},
    PLACEMENTLOGIC => {:type => ::Thrift::Types::STRING, :name => 'placementLogic'},
    CONTENTS => {:type => ::Thrift::Types::STRING, :name => 'contents'},
    CRSPLACEMENTIMPRESSIONTRACKINGURL => {:type => ::Thrift::Types::STRING, :name => 'crsPlacementImpressionTrackingUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetHomeFlexContentResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PLACEMENTS = 1
  EXPIRETIMEMILLIS = 2

  FIELDS = {
    PLACEMENTS => {:type => ::Thrift::Types::LIST, :name => 'placements', :element => {:type => ::Thrift::Types::STRUCT, :class => ::HomeTabPlacement}},
    EXPIRETIMEMILLIS => {:type => ::Thrift::Types::I64, :name => 'expireTimeMillis'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetHomeServiceListRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class HomeService
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  TITLE = 2
  SERVICEENTRYURL = 3
  STOREURL = 4
  ICONURL = 5
  PICTOGRAMICONURL = 6
  BADGEUPDATEDTIMEMILLIS = 7
  BADGETYPE = 8

  FIELDS = {
    ID => {:type => ::Thrift::Types::I32, :name => 'id'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    SERVICEENTRYURL => {:type => ::Thrift::Types::STRING, :name => 'serviceEntryUrl'},
    STOREURL => {:type => ::Thrift::Types::STRING, :name => 'storeUrl'},
    ICONURL => {:type => ::Thrift::Types::STRING, :name => 'iconUrl'},
    PICTOGRAMICONURL => {:type => ::Thrift::Types::STRING, :name => 'pictogramIconUrl'},
    BADGEUPDATEDTIMEMILLIS => {:type => ::Thrift::Types::I64, :name => 'badgeUpdatedTimeMillis'},
    BADGETYPE => {:type => ::Thrift::Types::I32, :name => 'badgeType', :enum_class => ::G_a_j0_a_a_a_c_a_a}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @badgeType.nil? || ::G_a_j0_a_a_a_c_a_a::VALID_VALUES.include?(@badgeType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field badgeType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class HomeCategory
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  TITLE = 2
  IDS = 3

  FIELDS = {
    ID => {:type => ::Thrift::Types::I32, :name => 'id'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    IDS => {:type => ::Thrift::Types::LIST, :name => 'ids', :element => {:type => ::Thrift::Types::I32}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetHomeServiceListResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SERVICES = 1
  FIXEDSERVICEIDS = 2
  PINNEDSERVICECANDIDATEIDS = 3
  CATEGORIES = 4

  FIELDS = {
    SERVICES => {:type => ::Thrift::Types::LIST, :name => 'services', :element => {:type => ::Thrift::Types::STRUCT, :class => ::HomeService}},
    FIXEDSERVICEIDS => {:type => ::Thrift::Types::LIST, :name => 'fixedServiceIds', :element => {:type => ::Thrift::Types::I32}},
    PINNEDSERVICECANDIDATEIDS => {:type => ::Thrift::Types::LIST, :name => 'pinnedServiceCandidateIds', :element => {:type => ::Thrift::Types::I32}},
    CATEGORIES => {:type => ::Thrift::Types::LIST, :name => 'categories', :element => {:type => ::Thrift::Types::STRUCT, :class => ::HomeCategory}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ConnectEapAccountRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHSESSIONID = 1

  FIELDS = {
    AUTHSESSIONID => {:type => ::Thrift::Types::STRING, :name => 'authSessionId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ConnectEapAccountResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AccountEapConnectException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  ALERTMESSAGE = 2
  WEBAUTHDETAILS = 11

  FIELDS = {
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::G_a_c_u0_a_a_a_a_s},
    ALERTMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'alertMessage'},
    WEBAUTHDETAILS => {:type => ::Thrift::Types::STRUCT, :name => 'webAuthDetails', :class => ::WebAuthDetails, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::G_a_c_u0_a_a_a_a_s::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class DisconnectEapAccountRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  EAPTYPE = 1

  FIELDS = {
    EAPTYPE => {:type => ::Thrift::Types::I32, :name => 'eapType', :enum_class => ::G_a_c_u0_a_a_a_a_r}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @eapType.nil? || ::G_a_c_u0_a_a_a_a_r::VALID_VALUES.include?(@eapType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field eapType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class DisconnectEapAccountResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Device
  include ::Thrift::Struct, ::Thrift::Struct_Union
  UDID = 1
  DEVICEMODEL = 2

  FIELDS = {
    UDID => {:type => ::Thrift::Types::STRING, :name => 'udid'},
    DEVICEMODEL => {:type => ::Thrift::Types::STRING, :name => 'deviceModel'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class OpenSessionRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DEVICE = 1

  FIELDS = {
    DEVICE => {:type => ::Thrift::Types::STRUCT, :name => 'device', :class => ::Device}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class OpenSessionResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHSESSIONID = 1

  FIELDS = {
    AUTHSESSIONID => {:type => ::Thrift::Types::STRING, :name => 'authSessionId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class EapLogin
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TYPE = 1
  ACCESSTOKEN = 2

  FIELDS = {
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::G_a_c_u0_a_a_a_a_r},
    ACCESSTOKEN => {:type => ::Thrift::Types::STRING, :name => 'accessToken'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::G_a_c_u0_a_a_a_a_r::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class VerifyEapLoginRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHSESSIONID = 1
  EAPLOGIN = 2

  FIELDS = {
    AUTHSESSIONID => {:type => ::Thrift::Types::STRING, :name => 'authSessionId'},
    EAPLOGIN => {:type => ::Thrift::Types::STRUCT, :name => 'eapLogin', :class => ::EapLogin}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class VerifyEapLoginResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ACCOUNTEXISTS = 1

  FIELDS = {
    ACCOUNTEXISTS => {:type => ::Thrift::Types::BOOL, :name => 'accountExists'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SimCard
  include ::Thrift::Struct, ::Thrift::Struct_Union
  COUNTRYCODE = 1
  HNI = 2
  CARRIERNAME = 3

  FIELDS = {
    COUNTRYCODE => {:type => ::Thrift::Types::STRING, :name => 'countryCode'},
    HNI => {:type => ::Thrift::Types::STRING, :name => 'hni'},
    CARRIERNAME => {:type => ::Thrift::Types::STRING, :name => 'carrierName'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetCountryInfoResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  COUNTRYCODE = 1
  COUNTRYINEEA = 2
  COUNTRYSETOFEEA = 3

  FIELDS = {
    COUNTRYCODE => {:type => ::Thrift::Types::STRING, :name => 'countryCode'},
    COUNTRYINEEA => {:type => ::Thrift::Types::BOOL, :name => 'countryInEEA'},
    COUNTRYSETOFEEA => {:type => ::Thrift::Types::SET, :name => 'countrySetOfEEA', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class WebAuthDetails
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BASEURL = 1
  TOKEN = 2

  FIELDS = {
    BASEURL => {:type => ::Thrift::Types::STRING, :name => 'baseUrl'},
    TOKEN => {:type => ::Thrift::Types::STRING, :name => 'token'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AuthException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  ALERTMESSAGE = 2
  WEBAUTHDETAILS = 11

  FIELDS = {
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::G_a_c_u0_a_b_h},
    ALERTMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'alertMessage'},
    WEBAUTHDETAILS => {:type => ::Thrift::Types::STRUCT, :name => 'webAuthDetails', :class => ::WebAuthDetails, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::G_a_c_u0_a_b_h::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class CreateQrSessionResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHSESSIONID = 1

  FIELDS = {
    AUTHSESSIONID => {:type => ::Thrift::Types::STRING, :name => 'authSessionId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CreateQrSessionRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CreateQrCodeResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CALLBACKURL = 1

  FIELDS = {
    CALLBACKURL => {:type => ::Thrift::Types::STRING, :name => 'callbackUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CreateQrCodeRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHSESSIONID = 1

  FIELDS = {
    AUTHSESSIONID => {:type => ::Thrift::Types::STRING, :name => 'authSessionId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CreatePinCodeResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PINCODE = 1

  FIELDS = {
    PINCODE => {:type => ::Thrift::Types::STRING, :name => 'pinCode'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CreatePinCodeRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHSESSIONID = 1

  FIELDS = {
    AUTHSESSIONID => {:type => ::Thrift::Types::STRING, :name => 'authSessionId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class QrCodeLoginResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CERTIFICATE = 1
  ACCESSTOKEN = 2
  LASTBINDTIMESTAMP = 3
  METADATA = 4

  FIELDS = {
    CERTIFICATE => {:type => ::Thrift::Types::STRING, :name => 'certificate'},
    ACCESSTOKEN => {:type => ::Thrift::Types::STRING, :name => 'accessToken'},
    LASTBINDTIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'lastBindTimestamp'},
    METADATA => {:type => ::Thrift::Types::MAP, :name => 'metaData', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class QrCodeLoginRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHSESSIONID = 1
  SYSTEMNAME = 2
  AUTOLOGINISREQUIRED = 3

  FIELDS = {
    AUTHSESSIONID => {:type => ::Thrift::Types::STRING, :name => 'authSessionId'},
    SYSTEMNAME => {:type => ::Thrift::Types::STRING, :name => 'systemName'},
    AUTOLOGINISREQUIRED => {:type => ::Thrift::Types::BOOL, :name => 'autoLoginIsRequired'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class VerifyCertificateRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHSESSIONID = 1
  CERTIFICATE = 2

  FIELDS = {
    AUTHSESSIONID => {:type => ::Thrift::Types::STRING, :name => 'authSessionId'},
    CERTIFICATE => {:type => ::Thrift::Types::STRING, :name => 'certificate'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CheckPinCodeVerifiedRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHSESSIONID = 1

  FIELDS = {
    AUTHSESSIONID => {:type => ::Thrift::Types::STRING, :name => 'authSessionId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CheckQrCodeVerifiedRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHSESSIONID = 1

  FIELDS = {
    AUTHSESSIONID => {:type => ::Thrift::Types::STRING, :name => 'authSessionId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ValidateProfileResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class UserPhoneNumber
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PHONENUMBER = 1
  COUNTRYCODE = 2

  FIELDS = {
    PHONENUMBER => {:type => ::Thrift::Types::STRING, :name => 'phoneNumber'},
    COUNTRYCODE => {:type => ::Thrift::Types::STRING, :name => 'countryCode'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AccountIdentifier
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TYPE = 1
  IDENTIFIER = 2
  COUNTRYCODE = 11

  FIELDS = {
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::G_a_c_u0_a_b_b},
    IDENTIFIER => {:type => ::Thrift::Types::STRING, :name => 'identifier'},
    COUNTRYCODE => {:type => ::Thrift::Types::STRING, :name => 'countryCode', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::G_a_c_u0_a_b_b::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class EncryptedPassword
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ENCRYPTIONKEYVERSION = 1
  CIPHERTEXT = 2

  FIELDS = {
    ENCRYPTIONKEYVERSION => {:type => ::Thrift::Types::I32, :name => 'encryptionKeyVersion', :enum_class => ::G_a_c_u0_a_b_g},
    CIPHERTEXT => {:type => ::Thrift::Types::STRING, :name => 'cipherText'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @encryptionKeyVersion.nil? || ::G_a_c_u0_a_b_g::VALID_VALUES.include?(@encryptionKeyVersion)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field encryptionKeyVersion!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetPhoneVerifMethodResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AVAILABLEMETHODS = 1
  PRETTIFIEDPHONENUMBER = 3

  FIELDS = {
    AVAILABLEMETHODS => {:type => ::Thrift::Types::LIST, :name => 'availableMethods', :element => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_c_u0_a_b_t}},
    PRETTIFIEDPHONENUMBER => {:type => ::Thrift::Types::STRING, :name => 'prettifiedPhoneNumber'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class UserProfile
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DISPLAYNAME = 1
  PROFILEIMAGEURL = 2

  FIELDS = {
    DISPLAYNAME => {:type => ::Thrift::Types::STRING, :name => 'displayName'},
    PROFILEIMAGEURL => {:type => ::Thrift::Types::STRING, :name => 'profileImageUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class VerifyAccountUsingPwdResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  USERPROFILE = 2

  FIELDS = {
    USERPROFILE => {:type => ::Thrift::Types::STRUCT, :name => 'userProfile', :class => ::UserProfile}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetSecondAuthMethodResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SECONDAUTHMETHOD = 1

  FIELDS = {
    SECONDAUTHMETHOD => {:type => ::Thrift::Types::I32, :name => 'secondAuthMethod', :enum_class => ::G_a_c_u0_a_b_j1}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @secondAuthMethod.nil? || ::G_a_c_u0_a_b_j1::VALID_VALUES.include?(@secondAuthMethod)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field secondAuthMethod!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class VerifyPhoneResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ACCOUNTEXIST = 2
  SAMEUDIDFROMACCOUNT = 3
  USERPROFILE = 11

  FIELDS = {
    ACCOUNTEXIST => {:type => ::Thrift::Types::BOOL, :name => 'accountExist'},
    SAMEUDIDFROMACCOUNT => {:type => ::Thrift::Types::BOOL, :name => 'sameUdidFromAccount'},
    USERPROFILE => {:type => ::Thrift::Types::STRUCT, :name => 'userProfile', :class => ::UserProfile, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SocialLogin
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TYPE = 1
  ACCESSTOKEN = 2
  COUNTRYCODE = 3

  FIELDS = {
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::G_a_c_u0_a_b_o1},
    ACCESSTOKEN => {:type => ::Thrift::Types::STRING, :name => 'accessToken'},
    COUNTRYCODE => {:type => ::Thrift::Types::STRING, :name => 'countryCode'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::G_a_c_u0_a_b_o1::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetUserProfileResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  USERPROFILE = 1

  FIELDS = {
    USERPROFILE => {:type => ::Thrift::Types::STRUCT, :name => 'userProfile', :class => ::UserProfile}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class VerifySocialLoginResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ACCOUNTEXIST = 2
  USERPROFILE = 11
  SAMEUDIDFROMACCOUNT = 12

  FIELDS = {
    ACCOUNTEXIST => {:type => ::Thrift::Types::BOOL, :name => 'accountExist'},
    USERPROFILE => {:type => ::Thrift::Types::STRUCT, :name => 'userProfile', :class => ::UserProfile, :optional => true},
    SAMEUDIDFROMACCOUNT => {:type => ::Thrift::Types::BOOL, :name => 'sameUdidFromAccount', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class IssueWebAuthDetailsForAcctVerifResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  WEBAUTHDETAILS = 1

  FIELDS = {
    WEBAUTHDETAILS => {:type => ::Thrift::Types::STRUCT, :name => 'webAuthDetails', :class => ::WebAuthDetails}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class IssueWebAuthDetailsForSecondAuthResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  WEBAUTHDETAILS = 1

  FIELDS = {
    WEBAUTHDETAILS => {:type => ::Thrift::Types::STRUCT, :name => 'webAuthDetails', :class => ::WebAuthDetails}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class MigratePrimaryResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHTOKEN = 1

  FIELDS = {
    AUTHTOKEN => {:type => ::Thrift::Types::STRING, :name => 'authToken'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RegisterPrimaryResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHTOKEN = 1

  FIELDS = {
    AUTHTOKEN => {:type => ::Thrift::Types::STRING, :name => 'authToken'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ExchangeEncryptionKeyRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHKEYVERSION = 1
  PUBLICKEY = 2
  NONCE = 3

  FIELDS = {
    AUTHKEYVERSION => {:type => ::Thrift::Types::I32, :name => 'authKeyVersion', :enum_class => ::G_a_c_u0_a_b_g},
    PUBLICKEY => {:type => ::Thrift::Types::STRING, :name => 'publicKey'},
    NONCE => {:type => ::Thrift::Types::STRING, :name => 'nonce'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @authKeyVersion.nil? || ::G_a_c_u0_a_b_g::VALID_VALUES.include?(@authKeyVersion)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field authKeyVersion!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ExchangeEncryptionKeyResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PUBLICKEY = 1
  NONCE = 2

  FIELDS = {
    PUBLICKEY => {:type => ::Thrift::Types::STRING, :name => 'publicKey'},
    NONCE => {:type => ::Thrift::Types::STRING, :name => 'nonce'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SendPinCodeForPhoneResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AVAILABLEMETHODS = 1

  FIELDS = {
    AVAILABLEMETHODS => {:type => ::Thrift::Types::LIST, :name => 'availableMethods', :element => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_c_u0_a_b_t}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetAcctVerifMethodResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AVAILABLEMETHOD = 1
  SAMEACCOUNTFROMAUTHFACTOR = 2

  FIELDS = {
    AVAILABLEMETHOD => {:type => ::Thrift::Types::I32, :name => 'availableMethod', :enum_class => ::G_a_c_u0_a_b_c},
    SAMEACCOUNTFROMAUTHFACTOR => {:type => ::Thrift::Types::BOOL, :name => 'sameAccountFromAuthFactor'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @availableMethod.nil? || ::G_a_c_u0_a_b_c::VALID_VALUES.include?(@availableMethod)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field availableMethod!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class SetPasswordResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CancelPinCodeRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHSESSIONID = 1

  FIELDS = {
    AUTHSESSIONID => {:type => ::Thrift::Types::STRING, :name => 'authSessionId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CancelPinCodeResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SecondaryQrCodeException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  ALERTMESSAGE = 2

  FIELDS = {
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::G_a_c_u0_a_c_b_c},
    ALERTMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'alertMessage'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::G_a_c_u0_a_c_b_c::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetLoginActorContextRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHSESSIONID = 1

  FIELDS = {
    AUTHSESSIONID => {:type => ::Thrift::Types::STRING, :name => 'authSessionId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetLoginActorContextResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  APPTYPE = 1
  ACCESSLOCATION = 2

  FIELDS = {
    APPTYPE => {:type => ::Thrift::Types::STRING, :name => 'appType'},
    ACCESSLOCATION => {:type => ::Thrift::Types::STRING, :name => 'accessLocation'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class VerifyPinCodeRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHSESSIONID = 1
  PINCODE = 2

  FIELDS = {
    AUTHSESSIONID => {:type => ::Thrift::Types::STRING, :name => 'authSessionId'},
    PINCODE => {:type => ::Thrift::Types::STRING, :name => 'pinCode'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class VerifyPinCodeResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class VerifyQrCodeRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHSESSIONID = 1
  METADATA = 2

  FIELDS = {
    AUTHSESSIONID => {:type => ::Thrift::Types::STRING, :name => 'authSessionId'},
    METADATA => {:type => ::Thrift::Types::MAP, :name => 'metaData', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class VerifyQrCodeResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ERRORCODE = 1
  DEBUGREASON = 2
  SERVERDEFINEDMESSAGE = 3
  ERRORDETAILMAP = 4

  FIELDS = {
    ERRORCODE => {:type => ::Thrift::Types::I32, :name => 'errorCode', :enum_class => ::G_a_c_u0_a_d_y0},
    DEBUGREASON => {:type => ::Thrift::Types::STRING, :name => 'debugReason'},
    SERVERDEFINEDMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'serverDefinedMessage'},
    ERRORDETAILMAP => {:type => ::Thrift::Types::MAP, :name => 'errorDetailMap', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @errorCode.nil? || ::G_a_c_u0_a_d_y0::VALID_VALUES.include?(@errorCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field errorCode!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentCybsInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MERCHANTID = 1
  ORGID = 2
  SERVERURL = 3

  FIELDS = {
    MERCHANTID => {:type => ::Thrift::Types::STRING, :name => 'merchantId'},
    ORGID => {:type => ::Thrift::Types::STRING, :name => 'orgId'},
    SERVERURL => {:type => ::Thrift::Types::STRING, :name => 'serverUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentCountrySettingMenu
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 16
  TYPE = 1
  ORDER = 2
  IMGURL = 3
  TOUCHIMGURL = 4
  LINKURL = 5
  NAME = 6
  LINKTYPE = 7
  BADGETYPE = 8
  ANDROIDIMAGEURL = 9
  IOSIMAGEURL = 10
  ANDROIDLINKURL = 11
  ANDROIDPACKAGENAME = 12
  IOSLINKURL = 13
  ANDROIDSTOREURL = 14
  IOSSTOREURL = 15
  SEQUENCE = 17
  DISPLAYTYPE = 18

  FIELDS = {
    ID => {:type => ::Thrift::Types::I64, :name => 'id'},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::G_a_c_u0_a_d_u0},
    ORDER => {:type => ::Thrift::Types::I32, :name => 'order'},
    IMGURL => {:type => ::Thrift::Types::STRING, :name => 'imgUrl'},
    TOUCHIMGURL => {:type => ::Thrift::Types::STRING, :name => 'touchImgUrl'},
    LINKURL => {:type => ::Thrift::Types::STRING, :name => 'linkUrl'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    LINKTYPE => {:type => ::Thrift::Types::I32, :name => 'linkType', :enum_class => ::G_a_c_u0_a_d_t0},
    BADGETYPE => {:type => ::Thrift::Types::I32, :name => 'badgeType', :enum_class => ::G_a_c_u0_a_d_s0},
    ANDROIDIMAGEURL => {:type => ::Thrift::Types::STRING, :name => 'androidImageUrl'},
    IOSIMAGEURL => {:type => ::Thrift::Types::STRING, :name => 'iosImageUrl'},
    ANDROIDLINKURL => {:type => ::Thrift::Types::STRING, :name => 'androidLinkUrl'},
    ANDROIDPACKAGENAME => {:type => ::Thrift::Types::STRING, :name => 'androidPackageName'},
    IOSLINKURL => {:type => ::Thrift::Types::STRING, :name => 'iosLinkUrl'},
    ANDROIDSTOREURL => {:type => ::Thrift::Types::STRING, :name => 'androidStoreUrl'},
    IOSSTOREURL => {:type => ::Thrift::Types::STRING, :name => 'iosStoreUrl'},
    SEQUENCE => {:type => ::Thrift::Types::I64, :name => 'sequence'},
    DISPLAYTYPE => {:type => ::Thrift::Types::I32, :name => 'displayType', :enum_class => ::G_a_c_u0_a_d_n1}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::G_a_c_u0_a_d_u0::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
    unless @linkType.nil? || ::G_a_c_u0_a_d_t0::VALID_VALUES.include?(@linkType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field linkType!')
    end
    unless @badgeType.nil? || ::G_a_c_u0_a_d_s0::VALID_VALUES.include?(@badgeType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field badgeType!')
    end
    unless @displayType.nil? || ::G_a_c_u0_a_d_n1::VALID_VALUES.include?(@displayType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field displayType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentUrlInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  URL = 1
  MUSTSCROLL = 2
  PAGETITLE = 3
  LABEL = 4
  LABELJOIN = 5
  ACCEPTANCEREQUIRED = 6
  LABELDESC = 7

  FIELDS = {
    URL => {:type => ::Thrift::Types::STRING, :name => 'url'},
    MUSTSCROLL => {:type => ::Thrift::Types::BOOL, :name => 'mustScroll'},
    PAGETITLE => {:type => ::Thrift::Types::STRING, :name => 'pageTitle'},
    LABEL => {:type => ::Thrift::Types::STRING, :name => 'label'},
    LABELJOIN => {:type => ::Thrift::Types::STRING, :name => 'labelJoin'},
    ACCEPTANCEREQUIRED => {:type => ::Thrift::Types::BOOL, :name => 'acceptanceRequired'},
    LABELDESC => {:type => ::Thrift::Types::STRING, :name => 'labelDesc'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentCountrySettingLimitInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DEPOSITBANK = 1
  WITHDRAWALBANK = 2
  POSSESSIONOFCARDS = 3

  FIELDS = {
    DEPOSITBANK => {:type => ::Thrift::Types::I32, :name => 'depositBank'},
    WITHDRAWALBANK => {:type => ::Thrift::Types::I32, :name => 'withdrawalBank'},
    POSSESSIONOFCARDS => {:type => ::Thrift::Types::I32, :name => 'possessionOfCards'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentTosUrlBundle
  include ::Thrift::Struct, ::Thrift::Struct_Union
  URLS = 1
  PREFIXTEXT = 2

  FIELDS = {
    URLS => {:type => ::Thrift::Types::LIST, :name => 'urls', :element => {:type => ::Thrift::Types::STRING}},
    PREFIXTEXT => {:type => ::Thrift::Types::STRING, :name => 'prefixText'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PayWithdrawStaticMenu
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TITLE = 1
  URLKEY = 2
  IMAGEURL = 3

  FIELDS = {
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    URLKEY => {:type => ::Thrift::Types::STRING, :name => 'urlKey'},
    IMAGEURL => {:type => ::Thrift::Types::STRING, :name => 'imageUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentCountrySettingInfoEx
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BALANCESUPPORT = 1
  BALANCETYPE = 2
  ASYNCWAITTIMEOUT = 3
  CREDITCARDSUPPORT = 4
  CYBS = 5
  CROSSBORDERTRANSFER = 6
  ADDRESSSEARCHTYPE = 7
  MENU = 8
  DEPOSITMETHODS = 9
  URLS = 10
  URLGROUPS = 11
  PAYGENABLED = 12
  LIMIT = 13
  EMAILREQUIRED = 14
  TOSURLBUNDLES = 15
  REGISTRATIONTYPE = 16
  POINTSUPPORT = 17
  REGISTRATIONURL = 18
  INTROURL = 19
  TOUCHIDMENUAVAILABLE = 20
  MYCODEPASSWORDREQUIRED = 21
  SETTINGWITHDRAWSTATICMENU = 22

  FIELDS = {
    BALANCESUPPORT => {:type => ::Thrift::Types::BOOL, :name => 'balanceSupport'},
    BALANCETYPE => {:type => ::Thrift::Types::I32, :name => 'balanceType', :enum_class => ::G_a_c_u0_a_d_o0},
    ASYNCWAITTIMEOUT => {:type => ::Thrift::Types::I32, :name => 'asyncWaitTimeout'},
    CREDITCARDSUPPORT => {:type => ::Thrift::Types::BOOL, :name => 'creditcardSupport'},
    CYBS => {:type => ::Thrift::Types::STRUCT, :name => 'cybs', :class => ::PaymentCybsInfo},
    CROSSBORDERTRANSFER => {:type => ::Thrift::Types::BOOL, :name => 'crossBorderTransfer'},
    ADDRESSSEARCHTYPE => {:type => ::Thrift::Types::I32, :name => 'addressSearchType', :enum_class => ::G_a_c_u0_a_d_d0},
    MENU => {:type => ::Thrift::Types::LIST, :name => 'menu', :element => {:type => ::Thrift::Types::STRUCT, :class => ::PaymentCountrySettingMenu}},
    DEPOSITMETHODS => {:type => ::Thrift::Types::LIST, :name => 'depositMethods', :element => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_c_u0_a_d_k}},
    URLS => {:type => ::Thrift::Types::MAP, :name => 'urls', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::PaymentUrlInfo}},
    URLGROUPS => {:type => ::Thrift::Types::MAP, :name => 'urlGroups', :key => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_c_u0_a_d_y7}, :value => {:type => ::Thrift::Types::STRING}},
    PAYGENABLED => {:type => ::Thrift::Types::BOOL, :name => 'paygEnabled'},
    LIMIT => {:type => ::Thrift::Types::STRUCT, :name => 'limit', :class => ::PaymentCountrySettingLimitInfo},
    EMAILREQUIRED => {:type => ::Thrift::Types::BOOL, :name => 'emailRequired'},
    TOSURLBUNDLES => {:type => ::Thrift::Types::MAP, :name => 'tosUrlBundles', :key => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_c_u0_a_d_o7}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::PaymentTosUrlBundle}},
    REGISTRATIONTYPE => {:type => ::Thrift::Types::I32, :name => 'registrationType', :enum_class => ::G_a_c_u0_a_d_v1},
    POINTSUPPORT => {:type => ::Thrift::Types::BOOL, :name => 'pointSupport'},
    REGISTRATIONURL => {:type => ::Thrift::Types::STRING, :name => 'registrationUrl'},
    INTROURL => {:type => ::Thrift::Types::STRING, :name => 'introUrl'},
    TOUCHIDMENUAVAILABLE => {:type => ::Thrift::Types::BOOL, :name => 'touchIdMenuAvailable'},
    MYCODEPASSWORDREQUIRED => {:type => ::Thrift::Types::BOOL, :name => 'myCodePasswordRequired'},
    SETTINGWITHDRAWSTATICMENU => {:type => ::Thrift::Types::MAP, :name => 'settingWithdrawStaticMenu', :key => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_c_u0_a_d_b8}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::PayWithdrawStaticMenu}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @balanceType.nil? || ::G_a_c_u0_a_d_o0::VALID_VALUES.include?(@balanceType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field balanceType!')
    end
    unless @addressSearchType.nil? || ::G_a_c_u0_a_d_d0::VALID_VALUES.include?(@addressSearchType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field addressSearchType!')
    end
    unless @registrationType.nil? || ::G_a_c_u0_a_d_v1::VALID_VALUES.include?(@registrationType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field registrationType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentTransactionHistoryInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MESSAGE = 1
  TYPE = 2
  CREATEDDATE = 3
  DESTINATION = 4

  FIELDS = {
    MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::G_a_c_u0_a_d_t7},
    CREATEDDATE => {:type => ::Thrift::Types::I64, :name => 'createdDate'},
    DESTINATION => {:type => ::Thrift::Types::I32, :name => 'destination', :enum_class => ::G_a_c_u0_a_d_g1}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::G_a_c_u0_a_d_t7::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
    unless @destination.nil? || ::G_a_c_u0_a_d_g1::VALID_VALUES.include?(@destination)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field destination!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentEligibleFriendStatus
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MID = 1
  STATUS = 2

  FIELDS = {
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'},
    STATUS => {:type => ::Thrift::Types::I32, :name => 'status', :enum_class => ::G_a_c_u0_a_d_m}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @status.nil? || ::G_a_c_u0_a_d_m::VALID_VALUES.include?(@status)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field status!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class RSAEncryptedPassword
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ENCRYPTED = 1
  KEYNAME = 2

  FIELDS = {
    ENCRYPTED => {:type => ::Thrift::Types::STRING, :name => 'encrypted'},
    KEYNAME => {:type => ::Thrift::Types::STRING, :name => 'keyName'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RSAEncryptedLoginInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LOGINID = 1
  LOGINPASSWORD = 2

  FIELDS = {
    LOGINID => {:type => ::Thrift::Types::STRING, :name => 'loginId'},
    LOGINPASSWORD => {:type => ::Thrift::Types::STRING, :name => 'loginPassword'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentAvailableAuth
  include ::Thrift::Struct, ::Thrift::Struct_Union
  METHODS = 1
  AUTHTOKEN = 2

  FIELDS = {
    METHODS => {:type => ::Thrift::Types::LIST, :name => 'methods', :element => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_c_u0_a_d_e0}},
    AUTHTOKEN => {:type => ::Thrift::Types::STRING, :name => 'authToken'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentFlowTypeCustomElement
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  VALUE = 2
  STYLE = 3
  REGULAREXPRESSION = 4
  VISIBLE = 5
  URI = 6

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    VALUE => {:type => ::Thrift::Types::STRING, :name => 'value'},
    STYLE => {:type => ::Thrift::Types::STRING, :name => 'style'},
    REGULAREXPRESSION => {:type => ::Thrift::Types::STRING, :name => 'regularExpression'},
    VISIBLE => {:type => ::Thrift::Types::BOOL, :name => 'visible'},
    URI => {:type => ::Thrift::Types::STRING, :name => 'uri'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentFlowTypeCustom
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VIEW = 1
  ELEMENTS = 2

  FIELDS = {
    VIEW => {:type => ::Thrift::Types::STRING, :name => 'view'},
    ELEMENTS => {:type => ::Thrift::Types::LIST, :name => 'elements', :element => {:type => ::Thrift::Types::STRUCT, :class => ::PaymentFlowTypeCustomElement}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentFlowTypeInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  FLOWTYPE = 1
  AUTHTYPE = 2
  HANDLEABLEOPS = 3
  CUSTOMS = 4

  FIELDS = {
    FLOWTYPE => {:type => ::Thrift::Types::I32, :name => 'flowType', :enum_class => ::G_a_c_u0_a_d_b1},
    AUTHTYPE => {:type => ::Thrift::Types::I32, :name => 'authType', :enum_class => ::G_a_c_u0_a_d_f0},
    HANDLEABLEOPS => {:type => ::Thrift::Types::MAP, :name => 'handleableOps', :key => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_c_u0_a_d_r1}, :value => {:type => ::Thrift::Types::STRING}},
    CUSTOMS => {:type => ::Thrift::Types::LIST, :name => 'customs', :element => {:type => ::Thrift::Types::STRUCT, :class => ::PaymentFlowTypeCustom}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @flowType.nil? || ::G_a_c_u0_a_d_b1::VALID_VALUES.include?(@flowType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field flowType!')
    end
    unless @authType.nil? || ::G_a_c_u0_a_d_f0::VALID_VALUES.include?(@authType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field authType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class DisplayMoney
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AMOUNT = 1
  AMOUNTSTRING = 2
  CURRENCY = 3

  FIELDS = {
    AMOUNT => {:type => ::Thrift::Types::STRING, :name => 'amount'},
    AMOUNTSTRING => {:type => ::Thrift::Types::STRING, :name => 'amountString'},
    CURRENCY => {:type => ::Thrift::Types::STRING, :name => 'currency'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class TransferRequestReceivedInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REQUESTID = 1
  REQUESTTYPE = 2
  RECEIVELINEMEMBERID = 3
  RECEIVELINEUSERNICKNAME = 4
  SENDMESSAGE = 7
  REQUESTDATE = 8
  STATUS = 9
  MONEYAMOUNT = 10

  FIELDS = {
    REQUESTID => {:type => ::Thrift::Types::STRING, :name => 'requestId'},
    REQUESTTYPE => {:type => ::Thrift::Types::I32, :name => 'requestType', :enum_class => ::G_a_c_u0_a_d_w7},
    RECEIVELINEMEMBERID => {:type => ::Thrift::Types::STRING, :name => 'receiveLineMemberId'},
    RECEIVELINEUSERNICKNAME => {:type => ::Thrift::Types::STRING, :name => 'receiveLineUserNickname'},
    SENDMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'sendMessage'},
    REQUESTDATE => {:type => ::Thrift::Types::I64, :name => 'requestDate'},
    STATUS => {:type => ::Thrift::Types::I32, :name => 'status', :enum_class => ::G_a_c_u0_a_d_v7},
    MONEYAMOUNT => {:type => ::Thrift::Types::STRUCT, :name => 'moneyAmount', :class => ::DisplayMoney}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @requestType.nil? || ::G_a_c_u0_a_d_w7::VALID_VALUES.include?(@requestType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field requestType!')
    end
    unless @status.nil? || ::G_a_c_u0_a_d_v7::VALID_VALUES.include?(@status)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field status!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class TransferRequestInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REQUESTID = 1
  REQUESTTYPE = 2
  REQUESTLINEMEMBERID = 3
  REQUESTLINEUSERNICKNAME = 4
  RECEIVELINEMEMBERID = 5
  RECEIVELINEUSERNICKNAME = 6
  SENDMESSAGE = 9
  REQUESTDATE = 10
  STATUS = 11
  REQUESTRECEIVEDINFO = 13
  MESSAGEMETADATA = 14
  MONEYAMOUNT = 15
  TOTALMEMBERCOUNT = 16
  STARTNUM = 17
  MESSAGEID = 18
  OTHERMEMBERCOUNT = 19

  FIELDS = {
    REQUESTID => {:type => ::Thrift::Types::STRING, :name => 'requestId'},
    REQUESTTYPE => {:type => ::Thrift::Types::I32, :name => 'requestType', :enum_class => ::G_a_c_u0_a_d_w7},
    REQUESTLINEMEMBERID => {:type => ::Thrift::Types::STRING, :name => 'requestLineMemberId'},
    REQUESTLINEUSERNICKNAME => {:type => ::Thrift::Types::STRING, :name => 'requestLineUserNickname'},
    RECEIVELINEMEMBERID => {:type => ::Thrift::Types::STRING, :name => 'receiveLineMemberId'},
    RECEIVELINEUSERNICKNAME => {:type => ::Thrift::Types::STRING, :name => 'receiveLineUserNickname'},
    SENDMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'sendMessage'},
    REQUESTDATE => {:type => ::Thrift::Types::I64, :name => 'requestDate'},
    STATUS => {:type => ::Thrift::Types::I32, :name => 'status', :enum_class => ::G_a_c_u0_a_d_v7},
    REQUESTRECEIVEDINFO => {:type => ::Thrift::Types::LIST, :name => 'requestReceivedInfo', :element => {:type => ::Thrift::Types::STRUCT, :class => ::TransferRequestReceivedInfo}},
    MESSAGEMETADATA => {:type => ::Thrift::Types::MAP, :name => 'messageMetadata', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    MONEYAMOUNT => {:type => ::Thrift::Types::STRUCT, :name => 'moneyAmount', :class => ::DisplayMoney},
    TOTALMEMBERCOUNT => {:type => ::Thrift::Types::I32, :name => 'totalMemberCount'},
    STARTNUM => {:type => ::Thrift::Types::I32, :name => 'startNum'},
    MESSAGEID => {:type => ::Thrift::Types::STRING, :name => 'messageId'},
    OTHERMEMBERCOUNT => {:type => ::Thrift::Types::I32, :name => 'otherMemberCount'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @requestType.nil? || ::G_a_c_u0_a_d_w7::VALID_VALUES.include?(@requestType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field requestType!')
    end
    unless @status.nil? || ::G_a_c_u0_a_d_v7::VALID_VALUES.include?(@status)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field status!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentAuthenticationInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHTOKEN = 1
  CONFIRMMESSAGE = 2

  FIELDS = {
    AUTHTOKEN => {:type => ::Thrift::Types::STRING, :name => 'authToken'},
    CONFIRMMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'confirmMessage'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class UnregisterAvailabilityInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RESULT = 1
  MESSAGE = 2

  FIELDS = {
    RESULT => {:type => ::Thrift::Types::I32, :name => 'result', :enum_class => ::G_a_c_u0_a_d_m8},
    MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @result.nil? || ::G_a_c_u0_a_d_m8::VALID_VALUES.include?(@result)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field result!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentLineCardInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DESIGNCODE = 1
  IMAGEURL = 2

  FIELDS = {
    DESIGNCODE => {:type => ::Thrift::Types::STRING, :name => 'designCode'},
    IMAGEURL => {:type => ::Thrift::Types::STRING, :name => 'imageUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentLineCardIssueForm
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REQUIREDTERMSOFSERVICEBUNDLE = 1
  AVAILABLELINECARDS = 2

  FIELDS = {
    REQUIREDTERMSOFSERVICEBUNDLE => {:type => ::Thrift::Types::I32, :name => 'requiredTermsOfServiceBundle', :enum_class => ::G_a_c_u0_a_d_o7},
    AVAILABLELINECARDS => {:type => ::Thrift::Types::LIST, :name => 'availableLineCards', :element => {:type => ::Thrift::Types::STRUCT, :class => ::PaymentLineCardInfo}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @requiredTermsOfServiceBundle.nil? || ::G_a_c_u0_a_d_o7::VALID_VALUES.include?(@requiredTermsOfServiceBundle)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field requiredTermsOfServiceBundle!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class CheckOperationResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TRADABLE = 1
  REASON = 2
  DETAILMESSAGE = 3

  FIELDS = {
    TRADABLE => {:type => ::Thrift::Types::BOOL, :name => 'tradable'},
    REASON => {:type => ::Thrift::Types::STRING, :name => 'reason'},
    DETAILMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'detailMessage'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class LinePayAccountInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ACCOUNTTYPE = 1
  ACCOUNTID = 2
  NICKNAME = 3
  STATUS = 4
  FINANCIALCORPORATIONNAME = 5
  REALACCOUNTNO = 6
  CURRENCY = 7
  ACCOUNTPRODUCTTYPE = 8
  BRANCHNAME = 9
  WITHDRAW = 10
  DEPOSIT = 11
  OWNERNAME = 12
  IMAGEURL = 13
  PRIMARY = 14
  ACCOUNTPRODUCTNAME = 15
  HOLDERNAMEREGISTERED = 16
  CARDBRAND = 17
  DEBITIMAGEURL = 18
  LINECARD = 19
  LINECARDIMAGEID = 20
  TEXTCOLOR = 21
  PLACEHOLDERCOLOR = 22
  BACKGROUNDCOLOR = 23
  EXTENDEDFEATURES = 24

  FIELDS = {
    ACCOUNTTYPE => {:type => ::Thrift::Types::I32, :name => 'accountType', :enum_class => ::G_a_c_u0_a_d_q},
    ACCOUNTID => {:type => ::Thrift::Types::STRING, :name => 'accountId'},
    NICKNAME => {:type => ::Thrift::Types::STRING, :name => 'nickname'},
    STATUS => {:type => ::Thrift::Types::I32, :name => 'status', :enum_class => ::G_a_c_u0_a_d_p},
    FINANCIALCORPORATIONNAME => {:type => ::Thrift::Types::STRING, :name => 'financialCorporationName'},
    REALACCOUNTNO => {:type => ::Thrift::Types::STRING, :name => 'realAccountNo'},
    CURRENCY => {:type => ::Thrift::Types::STRING, :name => 'currency'},
    ACCOUNTPRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'accountProductType', :enum_class => ::G_a_c_u0_a_d_c},
    BRANCHNAME => {:type => ::Thrift::Types::STRING, :name => 'branchName'},
    WITHDRAW => {:type => ::Thrift::Types::BOOL, :name => 'withdraw'},
    DEPOSIT => {:type => ::Thrift::Types::BOOL, :name => 'deposit'},
    OWNERNAME => {:type => ::Thrift::Types::STRING, :name => 'ownerName'},
    IMAGEURL => {:type => ::Thrift::Types::STRING, :name => 'imageUrl'},
    PRIMARY => {:type => ::Thrift::Types::BOOL, :name => 'primary'},
    ACCOUNTPRODUCTNAME => {:type => ::Thrift::Types::STRING, :name => 'accountProductName'},
    HOLDERNAMEREGISTERED => {:type => ::Thrift::Types::BOOL, :name => 'holderNameRegistered'},
    CARDBRAND => {:type => ::Thrift::Types::I32, :name => 'cardBrand', :enum_class => ::G_a_c_u0_a_d_k0},
    DEBITIMAGEURL => {:type => ::Thrift::Types::STRING, :name => 'debitImageUrl'},
    LINECARD => {:type => ::Thrift::Types::BOOL, :name => 'lineCard'},
    LINECARDIMAGEID => {:type => ::Thrift::Types::STRING, :name => 'lineCardImageId'},
    TEXTCOLOR => {:type => ::Thrift::Types::STRING, :name => 'textColor'},
    PLACEHOLDERCOLOR => {:type => ::Thrift::Types::STRING, :name => 'placeholderColor'},
    BACKGROUNDCOLOR => {:type => ::Thrift::Types::STRING, :name => 'backgroundColor'},
    EXTENDEDFEATURES => {:type => ::Thrift::Types::SET, :name => 'extendedFeatures', :element => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_c_u0_a_d_s}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @accountType.nil? || ::G_a_c_u0_a_d_q::VALID_VALUES.include?(@accountType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field accountType!')
    end
    unless @status.nil? || ::G_a_c_u0_a_d_p::VALID_VALUES.include?(@status)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field status!')
    end
    unless @accountProductType.nil? || ::G_a_c_u0_a_d_c::VALID_VALUES.include?(@accountProductType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field accountProductType!')
    end
    unless @cardBrand.nil? || ::G_a_c_u0_a_d_k0::VALID_VALUES.include?(@cardBrand)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field cardBrand!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ThRegionalInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  FIRSTNAME = 1
  LASTNAME = 2
  IDENTIFICATIONNO = 3
  IDENTIFICATIONTYPE = 4

  FIELDS = {
    FIRSTNAME => {:type => ::Thrift::Types::STRING, :name => 'firstName'},
    LASTNAME => {:type => ::Thrift::Types::STRING, :name => 'lastName'},
    IDENTIFICATIONNO => {:type => ::Thrift::Types::STRING, :name => 'identificationNo'},
    IDENTIFICATIONTYPE => {:type => ::Thrift::Types::I32, :name => 'identificationType', :enum_class => ::G_a_c_u0_a_d_i1}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @identificationType.nil? || ::G_a_c_u0_a_d_i1::VALID_VALUES.include?(@identificationType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field identificationType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentRegionalInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TH = 1

  FIELDS = {
    TH => {:type => ::Thrift::Types::STRUCT, :name => 'th', :class => ::ThRegionalInfo}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CreatedPaymentUserInfoEx
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CARRYOVERAVAILABLE = 1

  FIELDS = {
    CARRYOVERAVAILABLE => {:type => ::Thrift::Types::BOOL, :name => 'carryOverAvailable'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentCancellationInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TRANSACTIONTYPE = 1
  CANCELDATE = 3
  CANCELAMOUNT = 4
  REMAINAMOUNT = 5

  FIELDS = {
    TRANSACTIONTYPE => {:type => ::Thrift::Types::I32, :name => 'transactionType', :enum_class => ::G_a_c_u0_a_d_i8},
    CANCELDATE => {:type => ::Thrift::Types::I64, :name => 'cancelDate'},
    CANCELAMOUNT => {:type => ::Thrift::Types::STRUCT, :name => 'cancelAmount', :class => ::DisplayMoney},
    REMAINAMOUNT => {:type => ::Thrift::Types::STRUCT, :name => 'remainAmount', :class => ::DisplayMoney}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @transactionType.nil? || ::G_a_c_u0_a_d_i8::VALID_VALUES.include?(@transactionType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field transactionType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentDetailInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TRANSACTIONID = 1
  TRANSACTIONDATE = 2
  TRANSACTIONTYPE = 3
  PRODUCTNAME = 4
  PAYMETHOD = 6
  CARDCORPORATION = 7
  MASKEDCARDNUMBER = 8
  MERCHANTNAME = 9
  MERCHANTTELNO = 10
  MERCHANTREPRESENTATIVE = 11
  CANCELLIST = 12
  MONEYAMOUNT = 13
  ACCOUNTNICKNAME = 14
  MERCHANTEMAIL = 15
  CONFIRMDATE = 16
  MERCHANTLABEL = 17

  FIELDS = {
    TRANSACTIONID => {:type => ::Thrift::Types::STRING, :name => 'transactionId'},
    TRANSACTIONDATE => {:type => ::Thrift::Types::I64, :name => 'transactionDate'},
    TRANSACTIONTYPE => {:type => ::Thrift::Types::I32, :name => 'transactionType', :enum_class => ::G_a_c_u0_a_d_i8},
    PRODUCTNAME => {:type => ::Thrift::Types::STRING, :name => 'productName'},
    PAYMETHOD => {:type => ::Thrift::Types::I32, :name => 'paymethod', :enum_class => ::G_a_c_u0_a_d_p1},
    CARDCORPORATION => {:type => ::Thrift::Types::STRING, :name => 'cardCorporation'},
    MASKEDCARDNUMBER => {:type => ::Thrift::Types::STRING, :name => 'maskedCardNumber'},
    MERCHANTNAME => {:type => ::Thrift::Types::STRING, :name => 'merchantName'},
    MERCHANTTELNO => {:type => ::Thrift::Types::STRING, :name => 'merchantTelNo'},
    MERCHANTREPRESENTATIVE => {:type => ::Thrift::Types::STRING, :name => 'merchantRepresentative'},
    CANCELLIST => {:type => ::Thrift::Types::LIST, :name => 'cancelList', :element => {:type => ::Thrift::Types::STRUCT, :class => ::PaymentCancellationInfo}},
    MONEYAMOUNT => {:type => ::Thrift::Types::STRUCT, :name => 'moneyAmount', :class => ::DisplayMoney},
    ACCOUNTNICKNAME => {:type => ::Thrift::Types::STRING, :name => 'accountNickname'},
    MERCHANTEMAIL => {:type => ::Thrift::Types::STRING, :name => 'merchantEmail'},
    CONFIRMDATE => {:type => ::Thrift::Types::I64, :name => 'confirmDate'},
    MERCHANTLABEL => {:type => ::Thrift::Types::STRING, :name => 'merchantLabel'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @transactionType.nil? || ::G_a_c_u0_a_d_i8::VALID_VALUES.include?(@transactionType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field transactionType!')
    end
    unless @paymethod.nil? || ::G_a_c_u0_a_d_p1::VALID_VALUES.include?(@paymethod)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field paymethod!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentTTSPinCodeVerificationInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHPASSWORDREQUIRED = 1
  MESSAGE = 2

  FIELDS = {
    AUTHPASSWORDREQUIRED => {:type => ::Thrift::Types::BOOL, :name => 'authPasswordRequired'},
    MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentTransferRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AMOUNT = 1
  RECEIVEDLINEMEMBERID = 2

  FIELDS = {
    AMOUNT => {:type => ::Thrift::Types::STRING, :name => 'amount'},
    RECEIVEDLINEMEMBERID => {:type => ::Thrift::Types::STRING, :name => 'receivedLineMemberId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentPointInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  POINT = 1
  NEEDINQUIRY = 2

  FIELDS = {
    POINT => {:type => ::Thrift::Types::STRUCT, :name => 'point', :class => ::DisplayMoney},
    NEEDINQUIRY => {:type => ::Thrift::Types::BOOL, :name => 'needInquiry'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentRequiredAgreementsInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TITLE = 1
  DESC = 2
  LINKNAME = 3
  LINKURL = 4
  NEWAGREEMENTS = 5

  FIELDS = {
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    DESC => {:type => ::Thrift::Types::STRING, :name => 'desc'},
    LINKNAME => {:type => ::Thrift::Types::STRING, :name => 'linkName'},
    LINKURL => {:type => ::Thrift::Types::STRING, :name => 'linkUrl'},
    NEWAGREEMENTS => {:type => ::Thrift::Types::LIST, :name => 'newAgreements', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentTradeInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHARGEREQUESTID = 1
  CHARGEREQUESTTYPE = 2
  CHARGEREQUESTYMDT = 3
  TRADENUMBER = 4
  AGENCYNO = 7
  CONFIRMNO = 8
  EXPIREYMD = 9
  MONEYAMOUNT = 10
  COMPLETEYMDT = 11
  PAYMENTPROCESSCORP = 12
  STATUS = 13
  HELPURL = 14
  GUIDEMESSAGE = 15

  FIELDS = {
    CHARGEREQUESTID => {:type => ::Thrift::Types::STRING, :name => 'chargeRequestId'},
    CHARGEREQUESTTYPE => {:type => ::Thrift::Types::I32, :name => 'chargeRequestType', :enum_class => ::G_a_c_u0_a_d_q7},
    CHARGEREQUESTYMDT => {:type => ::Thrift::Types::I64, :name => 'chargeRequestYmdt'},
    TRADENUMBER => {:type => ::Thrift::Types::STRING, :name => 'tradeNumber'},
    AGENCYNO => {:type => ::Thrift::Types::STRING, :name => 'agencyNo'},
    CONFIRMNO => {:type => ::Thrift::Types::STRING, :name => 'confirmNo'},
    EXPIREYMD => {:type => ::Thrift::Types::I64, :name => 'expireYmd'},
    MONEYAMOUNT => {:type => ::Thrift::Types::STRUCT, :name => 'moneyAmount', :class => ::DisplayMoney},
    COMPLETEYMDT => {:type => ::Thrift::Types::I64, :name => 'completeYmdt'},
    PAYMENTPROCESSCORP => {:type => ::Thrift::Types::STRING, :name => 'paymentProcessCorp'},
    STATUS => {:type => ::Thrift::Types::I32, :name => 'status', :enum_class => ::G_a_c_u0_a_d_r7},
    HELPURL => {:type => ::Thrift::Types::STRING, :name => 'helpUrl'},
    GUIDEMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'guideMessage'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @chargeRequestType.nil? || ::G_a_c_u0_a_d_q7::VALID_VALUES.include?(@chargeRequestType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field chargeRequestType!')
    end
    unless @status.nil? || ::G_a_c_u0_a_d_r7::VALID_VALUES.include?(@status)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field status!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentSettingsMenuInfoAccount
  include ::Thrift::Struct, ::Thrift::Struct_Union
  FINANCIALCORPORATIONNAME = 1
  ACCOUNTNO = 2
  IMAGEURL = 4

  FIELDS = {
    FINANCIALCORPORATIONNAME => {:type => ::Thrift::Types::STRING, :name => 'financialCorporationName'},
    ACCOUNTNO => {:type => ::Thrift::Types::STRING, :name => 'accountNo'},
    IMAGEURL => {:type => ::Thrift::Types::STRING, :name => 'imageUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentSettingsMenuInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CERTIFICATIONSTATUS = 1
  MEMBERGRADETYPE = 2
  RECIEVEMONEYENABLED = 3
  ACCOUNTS = 4
  BANKACCOUNTSETTINGURL = 5
  LINECARDUSER = 6

  FIELDS = {
    CERTIFICATIONSTATUS => {:type => ::Thrift::Types::STRING, :name => 'certificationStatus'},
    MEMBERGRADETYPE => {:type => ::Thrift::Types::STRING, :name => 'memberGradeType'},
    RECIEVEMONEYENABLED => {:type => ::Thrift::Types::BOOL, :name => 'recieveMoneyEnabled'},
    ACCOUNTS => {:type => ::Thrift::Types::LIST, :name => 'accounts', :element => {:type => ::Thrift::Types::STRUCT, :class => ::PaymentSettingsMenuInfoAccount}},
    BANKACCOUNTSETTINGURL => {:type => ::Thrift::Types::STRING, :name => 'bankAccountSettingUrl'},
    LINECARDUSER => {:type => ::Thrift::Types::BOOL, :name => 'lineCardUser'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BankInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BANKID = 1
  FINANCIALCORPID = 2
  FINANCIALCORPCODE = 3
  TYPE = 4
  NAME = 5
  IMAGEURL = 6
  NAME2 = 7
  PRECREATIONTEXT = 8

  FIELDS = {
    BANKID => {:type => ::Thrift::Types::I64, :name => 'bankId'},
    FINANCIALCORPID => {:type => ::Thrift::Types::STRING, :name => 'financialCorpId'},
    FINANCIALCORPCODE => {:type => ::Thrift::Types::STRING, :name => 'financialCorpCode'},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::G_a_c_u0_a_d_d},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    IMAGEURL => {:type => ::Thrift::Types::STRING, :name => 'imageUrl'},
    NAME2 => {:type => ::Thrift::Types::STRING, :name => 'name2'},
    PRECREATIONTEXT => {:type => ::Thrift::Types::STRING, :name => 'preCreationText'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::G_a_c_u0_a_d_d::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PayStatusInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  STATUS = 1

  FIELDS = {
    STATUS => {:type => ::Thrift::Types::I32, :name => 'status', :enum_class => ::G_a_c_u0_a_d_z}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @status.nil? || ::G_a_c_u0_a_d_z::VALID_VALUES.include?(@status)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field status!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PayInvitationUserInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LINEMEMBERID = 1

  FIELDS = {
    LINEMEMBERID => {:type => ::Thrift::Types::STRING, :name => 'lineMemberId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PayInvitationInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  INVITATIONID = 1
  INVITATIONTYPE = 2
  MESSAGE = 3
  CREATEDATE = 4
  RECEIVEDINFO = 5

  FIELDS = {
    INVITATIONID => {:type => ::Thrift::Types::STRING, :name => 'invitationId'},
    INVITATIONTYPE => {:type => ::Thrift::Types::I32, :name => 'invitationType', :enum_class => ::G_a_c_u0_a_d_v},
    MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'},
    CREATEDATE => {:type => ::Thrift::Types::I64, :name => 'createDate'},
    RECEIVEDINFO => {:type => ::Thrift::Types::LIST, :name => 'receivedInfo', :element => {:type => ::Thrift::Types::STRUCT, :class => ::PayInvitationUserInfo}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @invitationType.nil? || ::G_a_c_u0_a_d_v::VALID_VALUES.include?(@invitationType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field invitationType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentAddressSearchResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  STATE = 1
  ADDRESS1 = 2

  FIELDS = {
    STATE => {:type => ::Thrift::Types::STRING, :name => 'state'},
    ADDRESS1 => {:type => ::Thrift::Types::STRING, :name => 'address1'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class MoneyRange
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MIN = 1
  MAX = 2

  FIELDS = {
    MIN => {:type => ::Thrift::Types::STRING, :name => 'min'},
    MAX => {:type => ::Thrift::Types::STRING, :name => 'max'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BalanceInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BALANCELIMIT = 3
  RECHARGEABLEAMOUNT = 12
  BALANCEAMOUNT = 13
  BANKCHARGERANGE = 16
  ATMCHARGERANGE = 17
  CONVENIENCESTORECHARGERANGE = 18
  EACHPAYRANGE = 19
  EACHTRANSFERRANGE = 20
  EACHWITHDRAWRANGE = 21
  BALANCENOTIFYSETUPRANGE = 22
  EACHTRANSFERREQUESTRANGE = 23
  DEBITCARDCHARGERANGE = 24
  RESPONSETOKEN = 25

  FIELDS = {
    BALANCELIMIT => {:type => ::Thrift::Types::STRING, :name => 'balanceLimit'},
    RECHARGEABLEAMOUNT => {:type => ::Thrift::Types::STRING, :name => 'rechargeableAmount'},
    BALANCEAMOUNT => {:type => ::Thrift::Types::STRUCT, :name => 'balanceAmount', :class => ::DisplayMoney},
    BANKCHARGERANGE => {:type => ::Thrift::Types::STRUCT, :name => 'bankChargeRange', :class => ::MoneyRange},
    ATMCHARGERANGE => {:type => ::Thrift::Types::STRUCT, :name => 'atmChargeRange', :class => ::MoneyRange},
    CONVENIENCESTORECHARGERANGE => {:type => ::Thrift::Types::STRUCT, :name => 'convenienceStoreChargeRange', :class => ::MoneyRange},
    EACHPAYRANGE => {:type => ::Thrift::Types::STRUCT, :name => 'eachPayRange', :class => ::MoneyRange},
    EACHTRANSFERRANGE => {:type => ::Thrift::Types::STRUCT, :name => 'eachTransferRange', :class => ::MoneyRange},
    EACHWITHDRAWRANGE => {:type => ::Thrift::Types::STRUCT, :name => 'eachWithdrawRange', :class => ::MoneyRange},
    BALANCENOTIFYSETUPRANGE => {:type => ::Thrift::Types::STRUCT, :name => 'balanceNotifySetupRange', :class => ::MoneyRange},
    EACHTRANSFERREQUESTRANGE => {:type => ::Thrift::Types::STRUCT, :name => 'eachTransferRequestRange', :class => ::MoneyRange},
    DEBITCARDCHARGERANGE => {:type => ::Thrift::Types::STRUCT, :name => 'debitCardChargeRange', :class => ::MoneyRange},
    RESPONSETOKEN => {:type => ::Thrift::Types::STRING, :name => 'responseToken'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentUserJobInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  JOBID = 1
  JOBNAME = 2

  FIELDS = {
    JOBID => {:type => ::Thrift::Types::STRING, :name => 'jobId'},
    JOBNAME => {:type => ::Thrift::Types::STRING, :name => 'jobName'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BankBranchInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BRANCHID = 1
  BRANCHCODE = 2
  NAME = 3
  NAME2 = 4

  FIELDS = {
    BRANCHID => {:type => ::Thrift::Types::STRING, :name => 'branchId'},
    BRANCHCODE => {:type => ::Thrift::Types::STRING, :name => 'branchCode'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    NAME2 => {:type => ::Thrift::Types::STRING, :name => 'name2'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentTransferTargetInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NAME = 1
  ACCOUNTNO = 2
  REFERENCENO = 3
  LINEMEMBERID = 4

  FIELDS = {
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    ACCOUNTNO => {:type => ::Thrift::Types::STRING, :name => 'accountNo'},
    REFERENCENO => {:type => ::Thrift::Types::STRING, :name => 'referenceNo'},
    LINEMEMBERID => {:type => ::Thrift::Types::STRING, :name => 'lineMemberId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentCardValidationRule
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REGEX = 2
  GROUPING = 3
  MAXLENGTH = 4
  CARDBRANDNAME = 5
  SECURITYCODEHELP = 6
  CARDBRAND = 7

  FIELDS = {
    REGEX => {:type => ::Thrift::Types::STRING, :name => 'regex'},
    GROUPING => {:type => ::Thrift::Types::STRING, :name => 'grouping'},
    MAXLENGTH => {:type => ::Thrift::Types::I32, :name => 'maxLength'},
    CARDBRANDNAME => {:type => ::Thrift::Types::STRING, :name => 'cardBrandName'},
    SECURITYCODEHELP => {:type => ::Thrift::Types::STRING, :name => 'securityCodeHelp'},
    CARDBRAND => {:type => ::Thrift::Types::I32, :name => 'cardBrand', :enum_class => ::G_a_c_u0_a_d_k0}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @cardBrand.nil? || ::G_a_c_u0_a_d_k0::VALID_VALUES.include?(@cardBrand)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field cardBrand!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentMyCode
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SHORTCUTURL = 1
  SHORTCUTICONURL = 2
  SHORTCUTICONTEXT = 3
  SHORTCUTSCHEMEURL = 4

  FIELDS = {
    SHORTCUTURL => {:type => ::Thrift::Types::STRING, :name => 'shortcutUrl'},
    SHORTCUTICONURL => {:type => ::Thrift::Types::STRING, :name => 'shortcutIconUrl'},
    SHORTCUTICONTEXT => {:type => ::Thrift::Types::STRING, :name => 'shortcutIconText'},
    SHORTCUTSCHEMEURL => {:type => ::Thrift::Types::STRING, :name => 'shortcutSchemeUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PayInvoiceSetting
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REGEXP = 1
  MAXLENGTH = 2

  FIELDS = {
    REGEXP => {:type => ::Thrift::Types::STRING, :name => 'regexp'},
    MAXLENGTH => {:type => ::Thrift::Types::I32, :name => 'maxLength'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentCacheableSettings
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TIMESTAMPS = 1
  MENUS = 2
  URLS = 3
  URLGROUPS = 4
  TOSURLBUNDLES = 5
  CARDVALIDATIONRULES = 6
  MESSAGES = 7
  MYCODE = 8
  INVOICE = 9
  FEATURES = 10

  FIELDS = {
    TIMESTAMPS => {:type => ::Thrift::Types::MAP, :name => 'timestamps', :key => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_c_u0_a_d_j7}, :value => {:type => ::Thrift::Types::I64}},
    MENUS => {:type => ::Thrift::Types::MAP, :name => 'menus', :key => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_c_u0_a_d_o1}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::PaymentCountrySettingMenu}},
    URLS => {:type => ::Thrift::Types::MAP, :name => 'urls', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::PaymentUrlInfo}},
    URLGROUPS => {:type => ::Thrift::Types::MAP, :name => 'urlGroups', :key => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_c_u0_a_d_y7}, :value => {:type => ::Thrift::Types::STRING}},
    TOSURLBUNDLES => {:type => ::Thrift::Types::MAP, :name => 'tosUrlBundles', :key => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_c_u0_a_d_o7}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::PaymentTosUrlBundle}},
    CARDVALIDATIONRULES => {:type => ::Thrift::Types::LIST, :name => 'cardValidationRules', :element => {:type => ::Thrift::Types::STRUCT, :class => ::PaymentCardValidationRule}},
    MESSAGES => {:type => ::Thrift::Types::MAP, :name => 'messages', :key => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_c_u0_a_d_m1}, :value => {:type => ::Thrift::Types::STRING}},
    MYCODE => {:type => ::Thrift::Types::STRUCT, :name => 'myCode', :class => ::PaymentMyCode},
    INVOICE => {:type => ::Thrift::Types::STRUCT, :name => 'invoice', :class => ::PayInvoiceSetting},
    FEATURES => {:type => ::Thrift::Types::MAP, :name => 'features', :key => {:type => ::Thrift::Types::I32, :enum_class => ::G_a_c_u0_a_d_t}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentUserInfoDigest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  USERID = 1
  STATUS = 2
  COUNTRY = 3
  GRADE = 4
  PASSWORDVERSION = 5
  JOINED = 6

  FIELDS = {
    USERID => {:type => ::Thrift::Types::STRING, :name => 'userId'},
    STATUS => {:type => ::Thrift::Types::I32, :name => 'status', :enum_class => ::G_a_c_u0_a_d_e8},
    COUNTRY => {:type => ::Thrift::Types::STRING, :name => 'country'},
    GRADE => {:type => ::Thrift::Types::I32, :name => 'grade', :enum_class => ::G_a_c_u0_a_d_b8},
    PASSWORDVERSION => {:type => ::Thrift::Types::I32, :name => 'passwordVersion', :enum_class => ::G_a_c_u0_a_d_s1},
    JOINED => {:type => ::Thrift::Types::BOOL, :name => 'joined'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @status.nil? || ::G_a_c_u0_a_d_e8::VALID_VALUES.include?(@status)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field status!')
    end
    unless @grade.nil? || ::G_a_c_u0_a_d_b8::VALID_VALUES.include?(@grade)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field grade!')
    end
    unless @passwordVersion.nil? || ::G_a_c_u0_a_d_s1::VALID_VALUES.include?(@passwordVersion)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field passwordVersion!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class AutocompleteRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  QUERY = 1
  REGION = 2
  SOURCE = 3
  SID = 4

  FIELDS = {
    QUERY => {:type => ::Thrift::Types::STRING, :name => 'query'},
    REGION => {:type => ::Thrift::Types::STRING, :name => 'region'},
    SOURCE => {:type => ::Thrift::Types::I32, :name => 'source'},
    SID => {:type => ::Thrift::Types::STRING, :name => 'sid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AutocompleteCandidate
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CANDIDATE = 1

  FIELDS = {
    CANDIDATE => {:type => ::Thrift::Types::STRING, :name => 'candidate'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AutocompleteResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MODIFIEDQUERIES = 1
  CANDIDATES = 2

  FIELDS = {
    MODIFIEDQUERIES => {:type => ::Thrift::Types::LIST, :name => 'modifiedQueries', :element => {:type => ::Thrift::Types::STRING}},
    CANDIDATES => {:type => ::Thrift::Types::LIST, :name => 'candidates', :element => {:type => ::Thrift::Types::STRUCT, :class => ::AutocompleteCandidate}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SearchException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  REASON = 2
  EXTRA = 3

  FIELDS = {
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::G_a_c_u0_a_e_q},
    REASON => {:type => ::Thrift::Types::STRING, :name => 'reason'},
    EXTRA => {:type => ::Thrift::Types::MAP, :name => 'extra', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::G_a_c_u0_a_e_q::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class Notice
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TYPE = 1
  NOTICE = 2
  STARTTIME = 3
  ENDTIME = 4

  FIELDS = {
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type'},
    NOTICE => {:type => ::Thrift::Types::STRING, :name => 'notice'},
    STARTTIME => {:type => ::Thrift::Types::I32, :name => 'startTime'},
    ENDTIME => {:type => ::Thrift::Types::I32, :name => 'endTime'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class KeywordInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  KEYWORD = 1
  ICONPATH = 2
  LABEL = 3
  LOCATIONINFOAGREEMENT = 4

  FIELDS = {
    KEYWORD => {:type => ::Thrift::Types::STRING, :name => 'keyword'},
    ICONPATH => {:type => ::Thrift::Types::STRING, :name => 'iconPath'},
    LABEL => {:type => ::Thrift::Types::STRING, :name => 'label'},
    LOCATIONINFOAGREEMENT => {:type => ::Thrift::Types::BOOL, :name => 'locationInfoAgreement'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SearchSection
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TYPE = 1
  TITLE = 2
  KEYWORDINFOS = 3

  FIELDS = {
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    KEYWORDINFOS => {:type => ::Thrift::Types::LIST, :name => 'keywordInfos', :element => {:type => ::Thrift::Types::STRUCT, :class => ::KeywordInfo}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class UserEvent
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ENDOFINPUT = 1
  SHOWPORTALSEARCHBTN = 2

  FIELDS = {
    ENDOFINPUT => {:type => ::Thrift::Types::BOOL, :name => 'endOfInput'},
    SHOWPORTALSEARCHBTN => {:type => ::Thrift::Types::STRING, :name => 'showPortalSearchBtn'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SearchCommonParameter
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LATITUDE = 1
  LONGITUDE = 2
  SOURCE = 3
  REGION = 4
  SID = 5
  QUERYTYPE = 6
  USEREVENT = 7

  FIELDS = {
    LATITUDE => {:type => ::Thrift::Types::DOUBLE, :name => 'latitude'},
    LONGITUDE => {:type => ::Thrift::Types::DOUBLE, :name => 'longitude'},
    SOURCE => {:type => ::Thrift::Types::STRING, :name => 'source'},
    REGION => {:type => ::Thrift::Types::STRING, :name => 'region'},
    SID => {:type => ::Thrift::Types::STRING, :name => 'sid', :optional => true},
    QUERYTYPE => {:type => ::Thrift::Types::I32, :name => 'queryType', :optional => true},
    USEREVENT => {:type => ::Thrift::Types::STRUCT, :name => 'userEvent', :class => ::UserEvent, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CategoryItem
  include ::Thrift::Struct, ::Thrift::Struct_Union
  COLLECTION = 1
  CATEGORYID = 2
  NAME = 3

  FIELDS = {
    COLLECTION => {:type => ::Thrift::Types::I32, :name => 'collection'},
    CATEGORYID => {:type => ::Thrift::Types::I32, :name => 'categoryId'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SpotItem
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NAME = 2
  PHONE = 3
  CATEGORY = 4
  MID = 5
  COUNTRYAREACODE = 6
  FREEPHONECALLABLE = 10

  FIELDS = {
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    PHONE => {:type => ::Thrift::Types::STRING, :name => 'phone'},
    CATEGORY => {:type => ::Thrift::Types::I32, :name => 'category', :enum_class => ::J0_a_e_a_b_mg},
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'},
    COUNTRYAREACODE => {:type => ::Thrift::Types::STRING, :name => 'countryAreaCode'},
    FREEPHONECALLABLE => {:type => ::Thrift::Types::BOOL, :name => 'freePhoneCallable'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @category.nil? || ::J0_a_e_a_b_mg::VALID_VALUES.include?(@category)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field category!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PromotionBuddyInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BUDDYMID = 1

  FIELDS = {
    BUDDYMID => {:type => ::Thrift::Types::STRING, :name => 'buddyMid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PromotionInstallInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DOWNLOADURL = 1
  CUSTOMURLSCHEMA = 2

  FIELDS = {
    DOWNLOADURL => {:type => ::Thrift::Types::STRING, :name => 'downloadUrl'},
    CUSTOMURLSCHEMA => {:type => ::Thrift::Types::STRING, :name => 'customUrlSchema'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PromotionMissionInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PROMOTIONMISSIONTYPE = 1
  MISSIONCOMPLETED = 2
  DOWNLOADURL = 3
  CUSTOMURLSCHEMA = 4

  FIELDS = {
    PROMOTIONMISSIONTYPE => {:type => ::Thrift::Types::I32, :name => 'promotionMissionType', :enum_class => ::J0_a_a_b_a_a_k2},
    MISSIONCOMPLETED => {:type => ::Thrift::Types::BOOL, :name => 'missionCompleted'},
    DOWNLOADURL => {:type => ::Thrift::Types::STRING, :name => 'downloadUrl'},
    CUSTOMURLSCHEMA => {:type => ::Thrift::Types::STRING, :name => 'customUrlSchema'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @promotionMissionType.nil? || ::J0_a_a_b_a_a_k2::VALID_VALUES.include?(@promotionMissionType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field promotionMissionType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PromotionDetail
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PROMOTIONBUDDYINFO = 1
  PROMOTIONINSTALLINFO = 2
  PROMOTIONMISSIONINFO = 3

  FIELDS = {
    PROMOTIONBUDDYINFO => {:type => ::Thrift::Types::STRUCT, :name => 'promotionBuddyInfo', :class => ::PromotionBuddyInfo},
    PROMOTIONINSTALLINFO => {:type => ::Thrift::Types::STRUCT, :name => 'promotionInstallInfo', :class => ::PromotionInstallInfo},
    PROMOTIONMISSIONINFO => {:type => ::Thrift::Types::STRUCT, :name => 'promotionMissionInfo', :class => ::PromotionMissionInfo}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PromotionInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PROMOTIONTYPE = 1
  BUDDYINFO = 51
  PROMOTIONDETAIL = 2

  FIELDS = {
    PROMOTIONTYPE => {:type => ::Thrift::Types::I32, :name => 'promotionType', :enum_class => ::J0_a_a_b_a_a_l2},
    BUDDYINFO => {:type => ::Thrift::Types::STRUCT, :name => 'buddyInfo', :class => ::PromotionBuddyInfo},
    PROMOTIONDETAIL => {:type => ::Thrift::Types::STRUCT, :name => 'promotionDetail', :class => ::PromotionDetail}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @promotionType.nil? || ::J0_a_a_b_a_a_l2::VALID_VALUES.include?(@promotionType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field promotionType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ImageTextProperty
  include ::Thrift::Struct, ::Thrift::Struct_Union
  STATUS = 1
  PLAINTEXT = 2
  NAMETEXTMAXCHARACTERCOUNT = 3
  ENCRYPTEDTEXT = 4

  FIELDS = {
    STATUS => {:type => ::Thrift::Types::I32, :name => 'status', :enum_class => ::J0_a_a_b_a_a_e1},
    PLAINTEXT => {:type => ::Thrift::Types::STRING, :name => 'plainText'},
    NAMETEXTMAXCHARACTERCOUNT => {:type => ::Thrift::Types::I32, :name => 'nameTextMaxCharacterCount'},
    ENCRYPTEDTEXT => {:type => ::Thrift::Types::STRING, :name => 'encryptedText'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @status.nil? || ::J0_a_a_b_a_a_e1::VALID_VALUES.include?(@status)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field status!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class StickerProperty
  include ::Thrift::Struct, ::Thrift::Struct_Union
  HASANIMATION = 1
  HASSOUND = 2
  HASPOPUP = 3
  STICKERRESOURCETYPE = 4
  STICKEROPTIONS = 5
  COMPACTSTICKEROPTIONS = 6
  STICKERHASH = 7
  STICKERIDS = 9
  NAMETEXTPROPERTY = 10
  AVAILABLEFORPHOTOEDIT = 11
  STICKERDEFAULTTEXTS = 12
  STICKERSIZE = 13
  POPUPLAYER = 14

  FIELDS = {
    HASANIMATION => {:type => ::Thrift::Types::BOOL, :name => 'hasAnimation'},
    HASSOUND => {:type => ::Thrift::Types::BOOL, :name => 'hasSound'},
    HASPOPUP => {:type => ::Thrift::Types::BOOL, :name => 'hasPopup'},
    STICKERRESOURCETYPE => {:type => ::Thrift::Types::I32, :name => 'stickerResourceType', :enum_class => ::J0_a_a_b_a_a_g3},
    STICKEROPTIONS => {:type => ::Thrift::Types::STRING, :name => 'stickerOptions'},
    COMPACTSTICKEROPTIONS => {:type => ::Thrift::Types::I32, :name => 'compactStickerOptions'},
    STICKERHASH => {:type => ::Thrift::Types::STRING, :name => 'stickerHash'},
    STICKERIDS => {:type => ::Thrift::Types::LIST, :name => 'stickerIds', :element => {:type => ::Thrift::Types::STRING}},
    NAMETEXTPROPERTY => {:type => ::Thrift::Types::STRUCT, :name => 'nameTextProperty', :class => ::ImageTextProperty},
    AVAILABLEFORPHOTOEDIT => {:type => ::Thrift::Types::BOOL, :name => 'availableForPhotoEdit'},
    STICKERDEFAULTTEXTS => {:type => ::Thrift::Types::MAP, :name => 'stickerDefaultTexts', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    STICKERSIZE => {:type => ::Thrift::Types::I32, :name => 'stickerSize', :enum_class => ::J0_a_a_b_a_a_h3},
    POPUPLAYER => {:type => ::Thrift::Types::I32, :name => 'popupLayer', :enum_class => ::J0_a_a_b_a_a_m1}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @stickerResourceType.nil? || ::J0_a_a_b_a_a_g3::VALID_VALUES.include?(@stickerResourceType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field stickerResourceType!')
    end
    unless @stickerSize.nil? || ::J0_a_a_b_a_a_h3::VALID_VALUES.include?(@stickerSize)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field stickerSize!')
    end
    unless @popupLayer.nil? || ::J0_a_a_b_a_a_m1::VALID_VALUES.include?(@popupLayer)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field popupLayer!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ThemeProperty
  include ::Thrift::Struct, ::Thrift::Struct_Union
  THUMBNAILURL = 1
  THEMERESOURCETYPE = 2

  FIELDS = {
    THUMBNAILURL => {:type => ::Thrift::Types::STRING, :name => 'thumbnailUrl'},
    THEMERESOURCETYPE => {:type => ::Thrift::Types::I32, :name => 'themeResourceType', :enum_class => ::J0_a_a_b_a_a_d4}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @themeResourceType.nil? || ::J0_a_a_b_a_a_d4::VALID_VALUES.include?(@themeResourceType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field themeResourceType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class SticonProperty
  include ::Thrift::Struct, ::Thrift::Struct_Union
  STICONIDS = 2
  AVAILABLEFORPHOTOEDIT = 3
  STICONRESOURCETYPE = 4

  FIELDS = {
    STICONIDS => {:type => ::Thrift::Types::LIST, :name => 'sticonIds', :element => {:type => ::Thrift::Types::STRING}},
    AVAILABLEFORPHOTOEDIT => {:type => ::Thrift::Types::BOOL, :name => 'availableForPhotoEdit'},
    STICONRESOURCETYPE => {:type => ::Thrift::Types::I32, :name => 'sticonResourceType', :enum_class => ::J0_a_a_b_a_a_l3}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @sticonResourceType.nil? || ::J0_a_a_b_a_a_l3::VALID_VALUES.include?(@sticonResourceType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field sticonResourceType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ProductProperty
  include ::Thrift::Struct, ::Thrift::Struct_Union
  STICKERPROPERTY = 1
  THEMEPROPERTY = 2
  STICONPROPERTY = 3

  FIELDS = {
    STICKERPROPERTY => {:type => ::Thrift::Types::STRUCT, :name => 'stickerProperty', :class => ::StickerProperty},
    THEMEPROPERTY => {:type => ::Thrift::Types::STRUCT, :name => 'themeProperty', :class => ::ThemeProperty},
    STICONPROPERTY => {:type => ::Thrift::Types::STRUCT, :name => 'sticonProperty', :class => ::SticonProperty}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ProductSearchSummary
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  TYPE = 2
  NAME = 3
  AUTHOR = 4
  PROMOTIONINFO = 5
  VERSION = 6
  NEWFLAG = 7
  PRICETIER = 8
  PRICEINLINECOIN = 9
  PROPERTY = 10
  SUBTYPE = 11
  ONSALE = 12
  AVAILABLEFORPRESENT = 13
  AVAILABLEFORPURCHASE = 14
  VALIDDAYS = 15
  AUTHORID = 16
  BARGAINFLAG = 17
  COPYRIGHT = 18
  AVAILABILITY = 19
  INTERACTIONEVENTPARAMETER = 20

  FIELDS = {
    ID => {:type => ::Thrift::Types::BYTE, :name => 'id'},
    TYPE => {:type => ::Thrift::Types::STRING, :name => 'type'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    AUTHOR => {:type => ::Thrift::Types::I32, :name => 'author', :enum_class => ::J0_a_a_b_a_a_o1},
    PROMOTIONINFO => {:type => ::Thrift::Types::BOOL, :name => 'promotionInfo'},
    VERSION => {:type => ::Thrift::Types::BOOL, :name => 'version'},
    NEWFLAG => {:type => ::Thrift::Types::BOOL, :name => 'newFlag'},
    PRICETIER => {:type => ::Thrift::Types::STRING, :name => 'priceTier'},
    PRICEINLINECOIN => {:type => ::Thrift::Types::STRING, :name => 'priceInLineCoin'},
    PROPERTY => {:type => ::Thrift::Types::STRING, :name => 'property'},
    SUBTYPE => {:type => ::Thrift::Types::STRING, :name => 'subType'},
    ONSALE => {:type => ::Thrift::Types::BOOL, :name => 'onSale'},
    AVAILABLEFORPRESENT => {:type => ::Thrift::Types::BOOL, :name => 'availableForPresent'},
    AVAILABLEFORPURCHASE => {:type => ::Thrift::Types::BOOL, :name => 'availableForPurchase'},
    VALIDDAYS => {:type => ::Thrift::Types::I32, :name => 'validDays'},
    AUTHORID => {:type => ::Thrift::Types::STRUCT, :name => 'authorId', :class => ::PromotionInfo},
    BARGAINFLAG => {:type => ::Thrift::Types::STRUCT, :name => 'bargainFlag', :class => ::ProductProperty},
    COPYRIGHT => {:type => ::Thrift::Types::I32, :name => 'copyright', :enum_class => ::J0_a_a_b_a_a_y3},
    AVAILABILITY => {:type => ::Thrift::Types::I32, :name => 'availability', :enum_class => ::J0_a_a_b_a_a_z1},
    INTERACTIONEVENTPARAMETER => {:type => ::Thrift::Types::I32, :name => 'interactionEventParameter'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @author.nil? || ::J0_a_a_b_a_a_o1::VALID_VALUES.include?(@author)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field author!')
    end
    unless @copyright.nil? || ::J0_a_a_b_a_a_y3::VALID_VALUES.include?(@copyright)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field copyright!')
    end
    unless @availability.nil? || ::J0_a_a_b_a_a_z1::VALID_VALUES.include?(@availability)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field availability!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ServiceItem
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  TITLE = 2
  TYPE = 3
  SUBTYPE = 4
  APPID = 5
  CHANNELID = 6
  BADGE = 7
  ICONURL = 8
  DOWNLOADURL = 9
  LAUNCHSCHEME = 10
  ICONTINT = 11

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type'},
    SUBTYPE => {:type => ::Thrift::Types::I32, :name => 'subType'},
    APPID => {:type => ::Thrift::Types::STRING, :name => 'appId'},
    CHANNELID => {:type => ::Thrift::Types::STRING, :name => 'channelId'},
    BADGE => {:type => ::Thrift::Types::STRING, :name => 'badge'},
    ICONURL => {:type => ::Thrift::Types::STRING, :name => 'iconUrl'},
    DOWNLOADURL => {:type => ::Thrift::Types::STRING, :name => 'downloadUrl'},
    LAUNCHSCHEME => {:type => ::Thrift::Types::STRING, :name => 'launchScheme'},
    ICONTINT => {:type => ::Thrift::Types::BOOL, :name => 'iconTint'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AdditionalInfoItem
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  TYPE = 2
  TITLE = 3
  DESCR = 4
  ICONURL = 5
  LINK = 6

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    DESCR => {:type => ::Thrift::Types::STRING, :name => 'descr'},
    ICONURL => {:type => ::Thrift::Types::STRING, :name => 'iconUrl'},
    LINK => {:type => ::Thrift::Types::STRING, :name => 'link'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class YellowpageItem
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  MID = 2
  NAME = 3
  ADDRESS = 4
  LATITUDE = 5
  LONGITUDE = 6
  DISTANCE = 7
  CANFREECALL = 8
  COUNTRYCODE = 9
  PHONENUMBER = 10
  CATEGORYID = 11
  CATEGORYICON = 12
  ADDITIONALINFO = 13

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    ADDRESS => {:type => ::Thrift::Types::STRING, :name => 'address'},
    LATITUDE => {:type => ::Thrift::Types::DOUBLE, :name => 'latitude'},
    LONGITUDE => {:type => ::Thrift::Types::DOUBLE, :name => 'longitude'},
    DISTANCE => {:type => ::Thrift::Types::DOUBLE, :name => 'distance'},
    CANFREECALL => {:type => ::Thrift::Types::BOOL, :name => 'canFreeCall'},
    COUNTRYCODE => {:type => ::Thrift::Types::I32, :name => 'countryCode'},
    PHONENUMBER => {:type => ::Thrift::Types::STRING, :name => 'phoneNumber'},
    CATEGORYID => {:type => ::Thrift::Types::I32, :name => 'categoryId'},
    CATEGORYICON => {:type => ::Thrift::Types::I32, :name => 'categoryIcon'},
    ADDITIONALINFO => {:type => ::Thrift::Types::LIST, :name => 'additionalInfo', :element => {:type => ::Thrift::Types::STRUCT, :class => ::AdditionalInfoItem}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BuddySearchResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MID = 1
  DISPLAYNAME = 2
  PICTURESTATUS = 3
  PICTUREPATH = 4
  STATUSMESSAGE = 5
  BUSINESSACCOUNT = 6
  ICONTYPE = 7
  BOTTYPE = 8

  FIELDS = {
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'},
    DISPLAYNAME => {:type => ::Thrift::Types::STRING, :name => 'displayName'},
    PICTURESTATUS => {:type => ::Thrift::Types::STRING, :name => 'pictureStatus'},
    PICTUREPATH => {:type => ::Thrift::Types::STRING, :name => 'picturePath'},
    STATUSMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'statusMessage'},
    BUSINESSACCOUNT => {:type => ::Thrift::Types::BOOL, :name => 'businessAccount'},
    ICONTYPE => {:type => ::Thrift::Types::I32, :name => 'iconType'},
    BOTTYPE => {:type => ::Thrift::Types::I32, :name => 'botType', :enum_class => ::J0_a_e_a_b_t1}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @botType.nil? || ::J0_a_e_a_b_t1::VALID_VALUES.include?(@botType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field botType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GeoAddressItem
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LATITUDE = 1
  LONGITUDE = 2
  DISPLAYADDRESS = 3

  FIELDS = {
    LATITUDE => {:type => ::Thrift::Types::DOUBLE, :name => 'latitude'},
    LONGITUDE => {:type => ::Thrift::Types::DOUBLE, :name => 'longitude'},
    DISPLAYADDRESS => {:type => ::Thrift::Types::STRING, :name => 'displayAddress'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AddFriendData
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MID = 1

  FIELDS = {
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class InstallAppData
  include ::Thrift::Struct, ::Thrift::Struct_Union
  INSTALLDATA = 1

  FIELDS = {
    INSTALLDATA => {:type => ::Thrift::Types::MAP, :name => 'installData', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class JumpUrlData
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ButtonActionData
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ADDFRIENDDATA = 1
  INSTALLAPPDATA = 2
  JUMPURLDATA = 3

  FIELDS = {
    ADDFRIENDDATA => {:type => ::Thrift::Types::STRUCT, :name => 'addFriendData', :class => ::AddFriendData},
    INSTALLAPPDATA => {:type => ::Thrift::Types::STRUCT, :name => 'installAppData', :class => ::InstallAppData},
    JUMPURLDATA => {:type => ::Thrift::Types::STRUCT, :name => 'jumpUrlData', :class => ::JumpUrlData}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ShortcutButtonAction
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ACTIONTYPE = 1
  ACTIONDATA = 2

  FIELDS = {
    ACTIONTYPE => {:type => ::Thrift::Types::I32, :name => 'actionType'},
    ACTIONDATA => {:type => ::Thrift::Types::STRUCT, :name => 'actionData', :class => ::ButtonActionData}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ShortcutButton
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  TITLE = 2
  URL = 3
  ICONPATH = 4
  ACTION = 5

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title', :optional => true},
    URL => {:type => ::Thrift::Types::STRING, :name => 'url', :optional => true},
    ICONPATH => {:type => ::Thrift::Types::STRING, :name => 'iconPath', :optional => true},
    ACTION => {:type => ::Thrift::Types::STRUCT, :name => 'action', :class => ::ShortcutButtonAction, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ShortcutItem
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  TITLE = 2
  DESCR = 3
  ICONPATH = 4
  URL = 5
  BUTTONS = 6
  ACTION = 7

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    DESCR => {:type => ::Thrift::Types::STRING, :name => 'descr'},
    ICONPATH => {:type => ::Thrift::Types::STRING, :name => 'iconPath'},
    URL => {:type => ::Thrift::Types::STRING, :name => 'url'},
    BUTTONS => {:type => ::Thrift::Types::LIST, :name => 'buttons', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ShortcutButton}},
    ACTION => {:type => ::Thrift::Types::STRUCT, :name => 'action', :class => ::ShortcutButtonAction, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ApprovalValue
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MESSAGE = 1

  FIELDS = {
    MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CodeValue
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1

  FIELDS = {
    CODE => {:type => ::Thrift::Types::STRING, :name => 'code', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SquareJoinMethodValue
  include ::Thrift::Struct, ::Thrift::Struct_Union
  APPROVALVALUE = 1
  CODEVALUE = 2

  FIELDS = {
    APPROVALVALUE => {:type => ::Thrift::Types::STRUCT, :name => 'approvalValue', :class => ::ApprovalValue, :optional => true},
    CODEVALUE => {:type => ::Thrift::Types::STRUCT, :name => 'codeValue', :class => ::CodeValue, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SquareJoinMethod
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TYPE = 1
  VALUE = 2

  FIELDS = {
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::Com_linecorp_square_protocol_thrift_common_SquareJoinMethodType},
    VALUE => {:type => ::Thrift::Types::STRUCT, :name => 'value', :class => ::SquareJoinMethodValue}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::Com_linecorp_square_protocol_thrift_common_SquareJoinMethodType::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class Square
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MID = 1
  NAME = 2
  WELCOMEMESSAGE = 3
  PROFILEIMAGEOBSHASH = 4
  DESC = 5
  SEARCHABLE = 6
  TYPE = 7
  CATEGORYID = 8
  INVITATIONURL = 9
  REVISION = 10
  ABLETOUSEINVITATIONTICKET = 11
  STATE = 12
  EMBLEMS = 13
  JOINMETHOD = 14

  FIELDS = {
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    WELCOMEMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'welcomeMessage'},
    PROFILEIMAGEOBSHASH => {:type => ::Thrift::Types::STRING, :name => 'profileImageObsHash'},
    DESC => {:type => ::Thrift::Types::STRING, :name => 'desc'},
    SEARCHABLE => {:type => ::Thrift::Types::BOOL, :name => 'searchable'},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::Com_linecorp_square_protocol_thrift_common_SquareType},
    CATEGORYID => {:type => ::Thrift::Types::I32, :name => 'categoryId'},
    INVITATIONURL => {:type => ::Thrift::Types::STRING, :name => 'invitationURL'},
    REVISION => {:type => ::Thrift::Types::I64, :name => 'revision'},
    ABLETOUSEINVITATIONTICKET => {:type => ::Thrift::Types::BOOL, :name => 'ableToUseInvitationTicket'},
    STATE => {:type => ::Thrift::Types::I32, :name => 'state', :enum_class => ::Com_linecorp_square_protocol_thrift_common_SquareState},
    EMBLEMS => {:type => ::Thrift::Types::LIST, :name => 'emblems', :element => {:type => ::Thrift::Types::I32, :enum_class => ::Com_linecorp_square_protocol_thrift_common_SquareEmblem}, :optional => true},
    JOINMETHOD => {:type => ::Thrift::Types::STRUCT, :name => 'joinMethod', :class => ::SquareJoinMethod, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::Com_linecorp_square_protocol_thrift_common_SquareType::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
    unless @state.nil? || ::Com_linecorp_square_protocol_thrift_common_SquareState::VALID_VALUES.include?(@state)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field state!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class SquareStatus
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MEMBERCOUNT = 1
  JOINREQUESTCOUNT = 2
  LASTJOINREQUESTAT = 3
  OPENCHATCOUNT = 4

  FIELDS = {
    MEMBERCOUNT => {:type => ::Thrift::Types::I32, :name => 'memberCount'},
    JOINREQUESTCOUNT => {:type => ::Thrift::Types::I32, :name => 'joinRequestCount', :optional => true},
    LASTJOINREQUESTAT => {:type => ::Thrift::Types::I64, :name => 'lastJoinRequestAt', :optional => true},
    OPENCHATCOUNT => {:type => ::Thrift::Types::I32, :name => 'openChatCount', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class NoteStatus
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NOTECOUNT = 1
  LATESTCREATEDAT = 2

  FIELDS = {
    NOTECOUNT => {:type => ::Thrift::Types::I32, :name => 'noteCount'},
    LATESTCREATEDAT => {:type => ::Thrift::Types::I64, :name => 'latestCreatedAt'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SquareInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SQUARE = 1
  SQUARESTATUS = 2
  SQUARENOTESTATUS = 3

  FIELDS = {
    SQUARE => {:type => ::Thrift::Types::STRUCT, :name => 'square', :class => ::Square},
    SQUARESTATUS => {:type => ::Thrift::Types::STRUCT, :name => 'squareStatus', :class => ::SquareStatus},
    SQUARENOTESTATUS => {:type => ::Thrift::Types::STRUCT, :name => 'squareNoteStatus', :class => ::NoteStatus, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Category
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  NAME = 2

  FIELDS = {
    ID => {:type => ::Thrift::Types::I32, :name => 'id'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PortalSearchCollection
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NAME = 1

  FIELDS = {
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PortalSearchSummary
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LINK = 1
  COLLECTIONS = 2

  FIELDS = {
    LINK => {:type => ::Thrift::Types::STRING, :name => 'link'},
    COLLECTIONS => {:type => ::Thrift::Types::LIST, :name => 'collections', :element => {:type => ::Thrift::Types::STRUCT, :class => ::PortalSearchCollection}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SearchItemUnion
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CATEGORYITEM = 1
  SPOTITEM = 2
  PRODUCTITEM = 3
  SERVICEITEM = 4
  YELLOWPAGEITEM = 5
  OAITEM = 6
  GEOADDRESSITEM = 7
  SHORTCUTITEM = 8
  SQUAREITEM = 9
  SQUARECATEGORYITEM = 10
  PORTALSEARCHSUMMARY = 11

  FIELDS = {
    CATEGORYITEM => {:type => ::Thrift::Types::STRUCT, :name => 'categoryItem', :class => ::CategoryItem},
    SPOTITEM => {:type => ::Thrift::Types::STRUCT, :name => 'spotItem', :class => ::SpotItem},
    PRODUCTITEM => {:type => ::Thrift::Types::STRUCT, :name => 'productItem', :class => ::ProductSearchSummary},
    SERVICEITEM => {:type => ::Thrift::Types::STRUCT, :name => 'serviceItem', :class => ::ServiceItem},
    YELLOWPAGEITEM => {:type => ::Thrift::Types::STRUCT, :name => 'yellowpageItem', :class => ::YellowpageItem},
    OAITEM => {:type => ::Thrift::Types::STRUCT, :name => 'oaItem', :class => ::BuddySearchResult},
    GEOADDRESSITEM => {:type => ::Thrift::Types::STRUCT, :name => 'geoAddressItem', :class => ::GeoAddressItem},
    SHORTCUTITEM => {:type => ::Thrift::Types::STRUCT, :name => 'shortcutItem', :class => ::ShortcutItem},
    SQUAREITEM => {:type => ::Thrift::Types::STRUCT, :name => 'squareItem', :class => ::SquareInfo},
    SQUARECATEGORYITEM => {:type => ::Thrift::Types::STRUCT, :name => 'squareCategoryItem', :class => ::Category},
    PORTALSEARCHSUMMARY => {:type => ::Thrift::Types::STRUCT, :name => 'portalSearchSummary', :class => ::PortalSearchSummary}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SearchResultItem
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  TYPE = 2
  ITEM = 3
  TITLE = 4
  SUB1 = 5
  SUB2 = 6
  ICONURL = 7
  TITLELINK = 8
  ICONLINK = 9
  DISPLAYTEMPLATE = 10
  ADDITIONALINFO = 11

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type'},
    ITEM => {:type => ::Thrift::Types::STRUCT, :name => 'item', :class => ::SearchItemUnion},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title', :optional => true},
    SUB1 => {:type => ::Thrift::Types::STRING, :name => 'sub1', :optional => true},
    SUB2 => {:type => ::Thrift::Types::STRING, :name => 'sub2', :optional => true},
    ICONURL => {:type => ::Thrift::Types::STRING, :name => 'iconUrl', :optional => true},
    TITLELINK => {:type => ::Thrift::Types::STRING, :name => 'titleLink', :optional => true},
    ICONLINK => {:type => ::Thrift::Types::STRING, :name => 'iconLink', :optional => true},
    DISPLAYTEMPLATE => {:type => ::Thrift::Types::STRING, :name => 'displayTemplate', :optional => true},
    ADDITIONALINFO => {:type => ::Thrift::Types::LIST, :name => 'additionalInfo', :element => {:type => ::Thrift::Types::STRUCT, :class => ::AdditionalInfoItem}, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SearchResultCollection
  include ::Thrift::Struct, ::Thrift::Struct_Union
  COLLECTION = 1
  TITLE = 2
  RANK = 3
  HITS = 4
  ITEMS = 5
  HASNEXT = 6
  CATEGORYID = 7
  ERROR = 8
  TABTITLE = 9
  START = 10
  LENGTH = 11
  SQUARECATEGORYID = 12

  FIELDS = {
    COLLECTION => {:type => ::Thrift::Types::I32, :name => 'collection'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    RANK => {:type => ::Thrift::Types::I32, :name => 'rank'},
    HITS => {:type => ::Thrift::Types::I32, :name => 'hits'},
    ITEMS => {:type => ::Thrift::Types::LIST, :name => 'items', :element => {:type => ::Thrift::Types::STRUCT, :class => ::SearchResultItem}},
    HASNEXT => {:type => ::Thrift::Types::BOOL, :name => 'hasNext'},
    CATEGORYID => {:type => ::Thrift::Types::LIST, :name => 'categoryId', :element => {:type => ::Thrift::Types::I32}, :optional => true},
    ERROR => {:type => ::Thrift::Types::STRING, :name => 'error', :optional => true},
    TABTITLE => {:type => ::Thrift::Types::STRING, :name => 'tabTitle', :optional => true},
    START => {:type => ::Thrift::Types::I32, :name => 'start', :optional => true},
    LENGTH => {:type => ::Thrift::Types::I32, :name => 'length', :optional => true},
    SQUARECATEGORYID => {:type => ::Thrift::Types::I32, :name => 'squareCategoryId', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SearchResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SID = 1
  COLLECTIONS = 2
  START = 3
  LENGTH = 4

  FIELDS = {
    SID => {:type => ::Thrift::Types::STRING, :name => 'sid'},
    COLLECTIONS => {:type => ::Thrift::Types::LIST, :name => 'collections', :element => {:type => ::Thrift::Types::STRUCT, :class => ::SearchResultCollection}},
    START => {:type => ::Thrift::Types::I32, :name => 'start'},
    LENGTH => {:type => ::Thrift::Types::I32, :name => 'length'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SearchPagingParameter
  include ::Thrift::Struct, ::Thrift::Struct_Union
  COLLECTION = 1
  START = 2
  LENGTH = 3
  COMMONPARAM = 4

  FIELDS = {
    COLLECTION => {:type => ::Thrift::Types::I32, :name => 'collection'},
    START => {:type => ::Thrift::Types::I32, :name => 'start'},
    LENGTH => {:type => ::Thrift::Types::I32, :name => 'length'},
    COMMONPARAM => {:type => ::Thrift::Types::STRUCT, :name => 'commonParam', :class => ::SearchCommonParameter}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  KEYNAME = 1
  NS = 2

  FIELDS = {
    KEYNAME => {:type => ::Thrift::Types::STRING, :name => 'keyName'},
    NS => {:type => ::Thrift::Types::I32, :name => 'ns', :enum_class => ::G_a_c_u0_a_f_g_h}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @ns.nil? || ::G_a_c_u0_a_f_g_h::VALID_VALUES.include?(@ns)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field ns!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class BulkGetRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REQUESTS = 1

  FIELDS = {
    REQUESTS => {:type => ::Thrift::Types::SET, :name => 'requests', :element => {:type => ::Thrift::Types::STRUCT, :class => ::GetRequest}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SettingsException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  REASON = 2
  PARAMETERS = 3

  FIELDS = {
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::G_a_c_u0_a_f_g_n},
    REASON => {:type => ::Thrift::Types::STRING, :name => 'reason'},
    PARAMETERS => {:type => ::Thrift::Types::MAP, :name => 'parameters', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::G_a_c_u0_a_f_g_n::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ImmediateTrigger
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BleNotificationReceivedTrigger
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SERVICEUUID = 1
  CHARACTERISTICUUID = 2

  FIELDS = {
    SERVICEUUID => {:type => ::Thrift::Types::STRING, :name => 'serviceUuid'},
    CHARACTERISTICUUID => {:type => ::Thrift::Types::STRING, :name => 'characteristicUuid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ScenarioTrigger
  include ::Thrift::Struct, ::Thrift::Struct_Union
  IMMEDIATE = 1
  BLENOTIFICATIONRECEIVED = 2

  FIELDS = {
    IMMEDIATE => {:type => ::Thrift::Types::STRUCT, :name => 'immediate', :class => ::ImmediateTrigger},
    BLENOTIFICATIONRECEIVED => {:type => ::Thrift::Types::STRUCT, :name => 'bleNotificationReceived', :class => ::BleNotificationReceivedTrigger}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GattReadAction
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SERVICEUUID = 1
  CHARACTERISTICUUID = 2

  FIELDS = {
    SERVICEUUID => {:type => ::Thrift::Types::STRING, :name => 'serviceUuid'},
    CHARACTERISTICUUID => {:type => ::Thrift::Types::STRING, :name => 'characteristicUuid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GattWriteAction
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SERVICEUUID = 1
  CHARACTERISTICUUID = 2
  DATA = 3

  FIELDS = {
    SERVICEUUID => {:type => ::Thrift::Types::STRING, :name => 'serviceUuid'},
    CHARACTERISTICUUID => {:type => ::Thrift::Types::STRING, :name => 'characteristicUuid'},
    DATA => {:type => ::Thrift::Types::STRING, :name => 'data'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SleepAction
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SLEEPMILLIS = 1

  FIELDS = {
    SLEEPMILLIS => {:type => ::Thrift::Types::I64, :name => 'sleepMillis'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class DisconnectAction
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class StopNotificationAction
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SERVICEUUID = 1
  CHARACTERISTICUUID = 2

  FIELDS = {
    SERVICEUUID => {:type => ::Thrift::Types::STRING, :name => 'serviceUuid'},
    CHARACTERISTICUUID => {:type => ::Thrift::Types::STRING, :name => 'characteristicUuid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ScenarioAction
  include ::Thrift::Struct, ::Thrift::Struct_Union
  GATTREAD = 1
  GATTWRITE = 2
  SLEEP = 3
  DISCONNECT = 4
  STOPNOTIFICATION = 5

  FIELDS = {
    GATTREAD => {:type => ::Thrift::Types::STRUCT, :name => 'gattRead', :class => ::GattReadAction},
    GATTWRITE => {:type => ::Thrift::Types::STRUCT, :name => 'gattWrite', :class => ::GattWriteAction},
    SLEEP => {:type => ::Thrift::Types::STRUCT, :name => 'sleep', :class => ::SleepAction},
    DISCONNECT => {:type => ::Thrift::Types::STRUCT, :name => 'disconnect', :class => ::DisconnectAction},
    STOPNOTIFICATION => {:type => ::Thrift::Types::STRUCT, :name => 'stopNotification', :class => ::StopNotificationAction}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Scenario
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  TRIGGER = 2
  ACTIONS = 3

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    TRIGGER => {:type => ::Thrift::Types::STRUCT, :name => 'trigger', :class => ::ScenarioTrigger},
    ACTIONS => {:type => ::Thrift::Types::LIST, :name => 'actions', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ScenarioAction}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ScenarioSet
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SCENARIOS = 1
  AUTOCLOSE = 2
  SUPPRESSIONINTERVAL = 3
  REVISION = 4
  MODIFIEDTIME = 5

  FIELDS = {
    SCENARIOS => {:type => ::Thrift::Types::LIST, :name => 'scenarios', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Scenario}},
    AUTOCLOSE => {:type => ::Thrift::Types::BOOL, :name => 'autoClose'},
    SUPPRESSIONINTERVAL => {:type => ::Thrift::Types::I64, :name => 'suppressionInterval'},
    REVISION => {:type => ::Thrift::Types::I64, :name => 'revision'},
    MODIFIEDTIME => {:type => ::Thrift::Types::I64, :name => 'modifiedTime'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetPredefinedScenarioSetsResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SCENARIOSETS = 1

  FIELDS = {
    SCENARIOSETS => {:type => ::Thrift::Types::MAP, :name => 'scenarioSets', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::ScenarioSet}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ThingsException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  REASON = 2

  FIELDS = {
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::G_a_c_y0_a_a_m0},
    REASON => {:type => ::Thrift::Types::STRING, :name => 'reason'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::G_a_c_y0_a_a_m0::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class DeviceLinkRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DEVICEID = 1

  FIELDS = {
    DEVICEID => {:type => ::Thrift::Types::STRING, :name => 'deviceId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class DeviceLinkResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LATESTOFFSET = 1

  FIELDS = {
    LATESTOFFSET => {:type => ::Thrift::Types::I64, :name => 'latestOffset'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class NotifyDeviceConnectionRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DEVICEID = 1
  CONNECTIONID = 2
  CONNECTIONTYPE = 3
  CODE = 4
  ERRORREASON = 5
  STARTTIME = 6
  ENDTIME = 7

  FIELDS = {
    DEVICEID => {:type => ::Thrift::Types::STRING, :name => 'deviceId'},
    CONNECTIONID => {:type => ::Thrift::Types::STRING, :name => 'connectionId', :optional => true},
    CONNECTIONTYPE => {:type => ::Thrift::Types::I32, :name => 'connectionType', :optional => true, :enum_class => ::G_a_c_y0_a_a_f},
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :optional => true, :enum_class => ::G_a_c_y0_a_a_e},
    ERRORREASON => {:type => ::Thrift::Types::STRING, :name => 'errorReason', :optional => true},
    STARTTIME => {:type => ::Thrift::Types::I64, :name => 'startTime', :optional => true},
    ENDTIME => {:type => ::Thrift::Types::I64, :name => 'endTime', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @connectionType.nil? || ::G_a_c_y0_a_a_f::VALID_VALUES.include?(@connectionType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field connectionType!')
    end
    unless @code.nil? || ::G_a_c_y0_a_a_e::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class NotifyDeviceConnectionResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LATESTOFFSET = 1

  FIELDS = {
    LATESTOFFSET => {:type => ::Thrift::Types::I64, :name => 'latestOffset'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class NotifyDeviceDisconnectionRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DEVICEID = 1
  CONNECTIONID = 2
  DISCONNECTEDTIME = 4

  FIELDS = {
    DEVICEID => {:type => ::Thrift::Types::STRING, :name => 'deviceId'},
    CONNECTIONID => {:type => ::Thrift::Types::STRING, :name => 'connectionId'},
    DISCONNECTEDTIME => {:type => ::Thrift::Types::I64, :name => 'disconnectedTime'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class NotifyDeviceDisconnectionResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class VoidScenarioActionResult
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BinaryScenarioActionResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BYTES = 1

  FIELDS = {
    BYTES => {:type => ::Thrift::Types::STRING, :name => 'bytes'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ScenarioActionResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VOIDRESULT = 1
  BINARYRESULT = 2

  FIELDS = {
    VOIDRESULT => {:type => ::Thrift::Types::STRUCT, :name => 'voidResult', :class => ::VoidScenarioActionResult},
    BINARYRESULT => {:type => ::Thrift::Types::STRUCT, :name => 'binaryResult', :class => ::BinaryScenarioActionResult}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ScenarioResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SCENARIOID = 1
  DEVICEID = 2
  REVISION = 3
  STARTTIME = 4
  ENDTIME = 5
  CODE = 6
  ERRORREASON = 7
  BLENOTIFICATIONPAYLOAD = 8
  ACTIONRESULTS = 9
  CONNECTIONID = 10

  FIELDS = {
    SCENARIOID => {:type => ::Thrift::Types::STRING, :name => 'scenarioId'},
    DEVICEID => {:type => ::Thrift::Types::STRING, :name => 'deviceId'},
    REVISION => {:type => ::Thrift::Types::I64, :name => 'revision'},
    STARTTIME => {:type => ::Thrift::Types::I64, :name => 'startTime'},
    ENDTIME => {:type => ::Thrift::Types::I64, :name => 'endTime'},
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::G_a_c_y0_a_a_g0},
    ERRORREASON => {:type => ::Thrift::Types::STRING, :name => 'errorReason', :optional => true},
    BLENOTIFICATIONPAYLOAD => {:type => ::Thrift::Types::STRING, :name => 'bleNotificationPayload', :optional => true},
    ACTIONRESULTS => {:type => ::Thrift::Types::LIST, :name => 'actionResults', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ScenarioActionResult}, :optional => true},
    CONNECTIONID => {:type => ::Thrift::Types::STRING, :name => 'connectionId', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::G_a_c_y0_a_a_g0::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class NotifyScenarioExecutedRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SCENARIORESULTS = 2

  FIELDS = {
    SCENARIORESULTS => {:type => ::Thrift::Types::LIST, :name => 'scenarioResults', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ScenarioResult}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class NotifyScenarioExecutedResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class DeviceUnlinkRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DEVICEID = 1

  FIELDS = {
    DEVICEID => {:type => ::Thrift::Types::STRING, :name => 'deviceId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class DeviceUnlinkResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class FetchOperationsRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DEVICEID = 1
  OFFSETFROM = 2

  FIELDS = {
    DEVICEID => {:type => ::Thrift::Types::STRING, :name => 'deviceId'},
    OFFSETFROM => {:type => ::Thrift::Types::I64, :name => 'offsetFrom'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ConnectDeviceOperation
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CONNECTIONTIMEOUTMILLIS = 1

  FIELDS = {
    CONNECTIONTIMEOUTMILLIS => {:type => ::Thrift::Types::I64, :name => 'connectionTimeoutMillis'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ExecuteOnetimeScenarioOperation
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CONNECTIONID = 1
  SCENARIO = 2

  FIELDS = {
    CONNECTIONID => {:type => ::Thrift::Types::STRING, :name => 'connectionId'},
    SCENARIO => {:type => ::Thrift::Types::STRUCT, :name => 'scenario', :class => ::Scenario}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class OperationAction
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CONNECTDEVICE = 1
  EXECUTEONETIMESCENARIO = 2

  FIELDS = {
    CONNECTDEVICE => {:type => ::Thrift::Types::STRUCT, :name => 'connectDevice', :class => ::ConnectDeviceOperation},
    EXECUTEONETIMESCENARIO => {:type => ::Thrift::Types::STRUCT, :name => 'executeOnetimeScenario', :class => ::ExecuteOnetimeScenarioOperation}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ThingsOperation
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DEVICEID = 1
  OFFSET = 2
  ACTION = 3

  FIELDS = {
    DEVICEID => {:type => ::Thrift::Types::STRING, :name => 'deviceId'},
    OFFSET => {:type => ::Thrift::Types::I64, :name => 'offset'},
    ACTION => {:type => ::Thrift::Types::STRUCT, :name => 'action', :class => ::OperationAction}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class FetchOperationsResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  OPERATIONS = 1
  HASNEXT = 2

  FIELDS = {
    OPERATIONS => {:type => ::Thrift::Types::LIST, :name => 'operations', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ThingsOperation}},
    HASNEXT => {:type => ::Thrift::Types::BOOL, :name => 'hasNext'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetBleDeviceRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SERVICEUUID = 1
  PSDI = 2

  FIELDS = {
    SERVICEUUID => {:type => ::Thrift::Types::STRING, :name => 'serviceUuid'},
    PSDI => {:type => ::Thrift::Types::STRING, :name => 'psdi'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ThingsDevice
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DEVICEID = 1
  ACTIONURI = 2
  BOTMID = 3
  PRODUCTTYPE = 4
  PROVIDERNAME = 5
  PROFILEIMAGELOCATION = 6
  CHANNELIDLIST = 7
  TARGETABCENGINEVERSION = 8
  SERVICEUUID = 9
  BONDINGREQUIRED = 10

  FIELDS = {
    DEVICEID => {:type => ::Thrift::Types::STRING, :name => 'deviceId'},
    ACTIONURI => {:type => ::Thrift::Types::STRING, :name => 'actionUri'},
    BOTMID => {:type => ::Thrift::Types::STRING, :name => 'botMid', :optional => true},
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :optional => true, :enum_class => ::G_a_c_y0_a_a_b0},
    PROVIDERNAME => {:type => ::Thrift::Types::STRING, :name => 'providerName', :optional => true},
    PROFILEIMAGELOCATION => {:type => ::Thrift::Types::STRING, :name => 'profileImageLocation', :optional => true},
    CHANNELIDLIST => {:type => ::Thrift::Types::LIST, :name => 'channelIdList', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
    TARGETABCENGINEVERSION => {:type => ::Thrift::Types::I16, :name => 'targetABCEngineVersion', :optional => true},
    SERVICEUUID => {:type => ::Thrift::Types::STRING, :name => 'serviceUuid', :optional => true},
    BONDINGREQUIRED => {:type => ::Thrift::Types::BOOL, :name => 'bondingRequired', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @productType.nil? || ::G_a_c_y0_a_a_b0::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class BleProduct
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SERVICEUUID = 1
  PSDISERVICEUUID = 2
  PSDICHARACTERISTICUUID = 3
  NAME = 4
  PROFILEIMAGELOCATION = 5
  BONDINGREQUIRED = 6

  FIELDS = {
    SERVICEUUID => {:type => ::Thrift::Types::STRING, :name => 'serviceUuid'},
    PSDISERVICEUUID => {:type => ::Thrift::Types::STRING, :name => 'psdiServiceUuid'},
    PSDICHARACTERISTICUUID => {:type => ::Thrift::Types::STRING, :name => 'psdiCharacteristicUuid'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    PROFILEIMAGELOCATION => {:type => ::Thrift::Types::STRING, :name => 'profileImageLocation'},
    BONDINGREQUIRED => {:type => ::Thrift::Types::BOOL, :name => 'bondingRequired'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class UserDevice
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DEVICE = 1
  DEVICEDISPLAYNAME = 2

  FIELDS = {
    DEVICE => {:type => ::Thrift::Types::STRUCT, :name => 'device', :class => ::ThingsDevice},
    DEVICEDISPLAYNAME => {:type => ::Thrift::Types::STRING, :name => 'deviceDisplayName'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetPredefinedScenarioSetsRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DEVICEIDS = 1

  FIELDS = {
    DEVICEIDS => {:type => ::Thrift::Types::LIST, :name => 'deviceIds', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Locale
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LANGUAGE = 1
  COUNTRY = 2

  FIELDS = {
    LANGUAGE => {:type => ::Thrift::Types::STRING, :name => 'language'},
    COUNTRY => {:type => ::Thrift::Types::STRING, :name => 'country'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetTagClusterFileRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetResourceFileRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TAGCLUSTERFILEREQUEST = 1

  FIELDS = {
    TAGCLUSTERFILEREQUEST => {:type => ::Thrift::Types::STRUCT, :name => 'tagClusterFileRequest', :class => ::GetTagClusterFileRequest}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PurchaseSubscriptionRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BILLINGITEMID = 1
  SUBSCRIPTIONSERVICE = 2
  STORECODE = 3
  STOREORDERID = 4

  FIELDS = {
    BILLINGITEMID => {:type => ::Thrift::Types::STRING, :name => 'billingItemId'},
    SUBSCRIPTIONSERVICE => {:type => ::Thrift::Types::I32, :name => 'subscriptionService', :enum_class => ::J0_a_a_b_a_a_v3},
    STORECODE => {:type => ::Thrift::Types::I32, :name => 'storeCode', :enum_class => ::J0_a_a_b_a_a_n3},
    STOREORDERID => {:type => ::Thrift::Types::STRING, :name => 'storeOrderId'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @subscriptionService.nil? || ::J0_a_a_b_a_a_v3::VALID_VALUES.include?(@subscriptionService)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field subscriptionService!')
    end
    unless @storeCode.nil? || ::J0_a_a_b_a_a_n3::VALID_VALUES.include?(@storeCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field storeCode!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ApplicationVersionRange
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LOWERBOUND = 1
  LOWERBOUNDINCLUSIVE = 2
  UPPERBOUND = 3
  UPPERBOUNDINCLUSIVE = 4

  FIELDS = {
    LOWERBOUND => {:type => ::Thrift::Types::STRING, :name => 'lowerBound'},
    LOWERBOUNDINCLUSIVE => {:type => ::Thrift::Types::BOOL, :name => 'lowerBoundInclusive'},
    UPPERBOUND => {:type => ::Thrift::Types::STRING, :name => 'upperBound'},
    UPPERBOUNDINCLUSIVE => {:type => ::Thrift::Types::BOOL, :name => 'upperBoundInclusive'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class StickerIdRange
  include ::Thrift::Struct, ::Thrift::Struct_Union
  START = 1
  SIZE = 2

  FIELDS = {
    START => {:type => ::Thrift::Types::I64, :name => 'start'},
    SIZE => {:type => ::Thrift::Types::I32, :name => 'size'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class StickerSummary
  include ::Thrift::Struct, ::Thrift::Struct_Union
  STICKERIDRANGES = 1
  SUGGESTVERSION = 2
  STICKERHASH = 3
  DEFAULTDISPLAYONKEYBOARD = 4
  STICKERRESOURCETYPE = 5
  NAMETEXTPROPERTY = 6
  AVAILABLEFORPHOTOEDIT = 7
  POPUPLAYER = 8

  FIELDS = {
    STICKERIDRANGES => {:type => ::Thrift::Types::LIST, :name => 'stickerIdRanges', :element => {:type => ::Thrift::Types::STRUCT, :class => ::StickerIdRange}},
    SUGGESTVERSION => {:type => ::Thrift::Types::I64, :name => 'suggestVersion'},
    STICKERHASH => {:type => ::Thrift::Types::STRING, :name => 'stickerHash'},
    DEFAULTDISPLAYONKEYBOARD => {:type => ::Thrift::Types::BOOL, :name => 'defaultDisplayOnKeyboard'},
    STICKERRESOURCETYPE => {:type => ::Thrift::Types::I32, :name => 'stickerResourceType', :enum_class => ::J0_a_a_b_a_a_g3},
    NAMETEXTPROPERTY => {:type => ::Thrift::Types::STRUCT, :name => 'nameTextProperty', :class => ::ImageTextProperty},
    AVAILABLEFORPHOTOEDIT => {:type => ::Thrift::Types::BOOL, :name => 'availableForPhotoEdit'},
    POPUPLAYER => {:type => ::Thrift::Types::I32, :name => 'popupLayer', :enum_class => ::J0_a_a_b_a_a_m1}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @stickerResourceType.nil? || ::J0_a_a_b_a_a_g3::VALID_VALUES.include?(@stickerResourceType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field stickerResourceType!')
    end
    unless @popupLayer.nil? || ::J0_a_a_b_a_a_m1::VALID_VALUES.include?(@popupLayer)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field popupLayer!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ThemeSummary
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SticonSummary
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SUGGESTVERSION = 1
  AVAILABLEFORPHOTOEDIT = 2

  FIELDS = {
    SUGGESTVERSION => {:type => ::Thrift::Types::I64, :name => 'suggestVersion'},
    AVAILABLEFORPHOTOEDIT => {:type => ::Thrift::Types::BOOL, :name => 'availableForPhotoEdit'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ProductTypeSummary
  include ::Thrift::Struct, ::Thrift::Struct_Union
  STICKERSUMMARY = 1
  THEMESUMMARY = 2
  STICONSUMMARY = 3

  FIELDS = {
    STICKERSUMMARY => {:type => ::Thrift::Types::STRUCT, :name => 'stickerSummary', :class => ::StickerSummary},
    THEMESUMMARY => {:type => ::Thrift::Types::STRUCT, :name => 'themeSummary', :class => ::ThemeSummary},
    STICONSUMMARY => {:type => ::Thrift::Types::STRUCT, :name => 'sticonSummary', :class => ::SticonSummary}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ProductSummary
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  NAME = 11
  LATESTVERSION = 21
  APPLICATIONVERSIONRANGE = 25
  GRANTEDBYDEFAULT = 32
  ATTRIBUTES = 92
  PRODUCTTYPESUMMARY = 93
  VALIDUNTIL = 94
  VALIDFOR = 95
  INSTALLEDTIME = 96
  AVAILABILITY = 97
  AUTHORID = 98

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    LATESTVERSION => {:type => ::Thrift::Types::I64, :name => 'latestVersion'},
    APPLICATIONVERSIONRANGE => {:type => ::Thrift::Types::STRUCT, :name => 'applicationVersionRange', :class => ::ApplicationVersionRange},
    GRANTEDBYDEFAULT => {:type => ::Thrift::Types::BOOL, :name => 'grantedByDefault'},
    ATTRIBUTES => {:type => ::Thrift::Types::MAP, :name => 'attributes', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    PRODUCTTYPESUMMARY => {:type => ::Thrift::Types::STRUCT, :name => 'productTypeSummary', :class => ::ProductTypeSummary},
    VALIDUNTIL => {:type => ::Thrift::Types::I64, :name => 'validUntil'},
    VALIDFOR => {:type => ::Thrift::Types::I32, :name => 'validFor'},
    INSTALLEDTIME => {:type => ::Thrift::Types::I64, :name => 'installedTime'},
    AVAILABILITY => {:type => ::Thrift::Types::I32, :name => 'availability', :enum_class => ::J0_a_a_b_a_a_o1},
    AUTHORID => {:type => ::Thrift::Types::STRING, :name => 'authorId'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @availability.nil? || ::J0_a_a_b_a_a_o1::VALID_VALUES.include?(@availability)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field availability!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ProductSummaryList
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTLIST = 1
  OFFSET = 2
  TOTALSIZE = 3

  FIELDS = {
    PRODUCTLIST => {:type => ::Thrift::Types::LIST, :name => 'productList', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ProductSummary}},
    OFFSET => {:type => ::Thrift::Types::I32, :name => 'offset'},
    TOTALSIZE => {:type => ::Thrift::Types::I32, :name => 'totalSize'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ShopException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  REASON = 2
  PARAMETERMAP = 3

  FIELDS = {
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::J0_a_a_b_a_a_x2},
    REASON => {:type => ::Thrift::Types::STRING, :name => 'reason'},
    PARAMETERMAP => {:type => ::Thrift::Types::MAP, :name => 'parameterMap', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::J0_a_a_b_a_a_x2::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetTagClusterFileResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PATH = 1
  UPDATEDTIMEMILLIS = 2

  FIELDS = {
    PATH => {:type => ::Thrift::Types::STRING, :name => 'path'},
    UPDATEDTIMEMILLIS => {:type => ::Thrift::Types::I64, :name => 'updatedTimeMillis'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetResourceFileReponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TAGCLUSTERFILERESPONSE = 1

  FIELDS = {
    TAGCLUSTERFILERESPONSE => {:type => ::Thrift::Types::STRUCT, :name => 'tagClusterFileResponse', :class => ::GetTagClusterFileResponse}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PurchaseSubscriptionResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RESULT = 1
  ORDERID = 2
  CONFIRMURL = 3

  FIELDS = {
    RESULT => {:type => ::Thrift::Types::I32, :name => 'result', :enum_class => ::J0_a_a_b_a_a_p3},
    ORDERID => {:type => ::Thrift::Types::STRING, :name => 'orderId'},
    CONFIRMURL => {:type => ::Thrift::Types::STRING, :name => 'confirmUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @result.nil? || ::J0_a_a_b_a_a_p3::VALID_VALUES.include?(@result)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field result!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class EstablishE2EESessionRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CLIENTPUBLICKEY = 1

  FIELDS = {
    CLIENTPUBLICKEY => {:type => ::Thrift::Types::STRING, :name => 'clientPublicKey'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RemoveProductFromSubscriptionSlotRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTTYPE = 1
  PRODUCTID = 2
  SUBSCRIPTIONSERVICE = 3

  FIELDS = {
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_a_b_a_a_z1},
    PRODUCTID => {:type => ::Thrift::Types::STRING, :name => 'productId'},
    SUBSCRIPTIONSERVICE => {:type => ::Thrift::Types::I32, :name => 'subscriptionService', :enum_class => ::J0_a_a_b_a_a_v3}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @productType.nil? || ::J0_a_a_b_a_a_z1::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
    unless @subscriptionService.nil? || ::J0_a_a_b_a_a_v3::VALID_VALUES.include?(@subscriptionService)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field subscriptionService!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class EstablishE2EESessionResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SESSIONID = 1
  SERVERPUBLICKEY = 2
  EXPIREAT = 3

  FIELDS = {
    SESSIONID => {:type => ::Thrift::Types::STRING, :name => 'sessionId'},
    SERVERPUBLICKEY => {:type => ::Thrift::Types::STRING, :name => 'serverPublicKey'},
    EXPIREAT => {:type => ::Thrift::Types::I64, :name => 'expireAt'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Price
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CURRENCY = 1
  AMOUNT = 2
  PRICESTRING = 3

  FIELDS = {
    CURRENCY => {:type => ::Thrift::Types::STRING, :name => 'currency'},
    AMOUNT => {:type => ::Thrift::Types::STRING, :name => 'amount'},
    PRICESTRING => {:type => ::Thrift::Types::STRING, :name => 'priceString'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ProductWishProperty
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TOTALCOUNT = 1

  FIELDS = {
    TOTALCOUNT => {:type => ::Thrift::Types::I64, :name => 'totalCount'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ProductSubscriptionProperty
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AVAILABLEFORSUBSCRIBE = 1
  SUBSCRIPTIONAVAILABILITY = 2

  FIELDS = {
    AVAILABLEFORSUBSCRIBE => {:type => ::Thrift::Types::BOOL, :name => 'availableForSubscribe'},
    SUBSCRIPTIONAVAILABILITY => {:type => ::Thrift::Types::I32, :name => 'subscriptionAvailability', :enum_class => ::J0_a_a_b_a_a_o1}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @subscriptionAvailability.nil? || ::J0_a_a_b_a_a_o1::VALID_VALUES.include?(@subscriptionAvailability)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field subscriptionAvailability!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ProductDetail
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  BILLINGITEMID = 2
  BILLINGCPID = 5
  TYPE = 3
  SUBTYPE = 4
  NAME = 11
  AUTHOR = 12
  DETAILS = 13
  COPYRIGHT = 14
  NOTICE = 15
  PROMOTIONINFO = 16
  LATESTVERSION = 21
  LATESTVERSIONSTRING = 22
  VERSION = 23
  VERSIONSTRING = 24
  APPLICATIONVERSIONRANGE = 25
  OWNED = 31
  GRANTEDBYDEFAULT = 32
  VALIDFOR = 41
  VALIDUNTIL = 42
  ONSALE = 51
  SALESFLAGS = 52
  AVAILABLEFORPRESENT = 53
  AVAILABLEFORMYSELF = 54
  PRICETIER = 61
  PRICE = 62
  PRICEINLINECOIN = 63
  LOCALIZEDPRICE = 64
  IMAGES = 91
  ATTRIBUTES = 92
  AUTHORID = 93
  STICKERRESOURCETYPE = 94
  PRODUCTPROPERTY = 95
  PRODUCTSALESSTATE = 96
  INSTALLEDTIME = 97
  WISHPROPERTY = 101
  SUBSCRIPTIONPROPERTY = 102
  PRODUCTPROMOTIONPROPERTY = 103
  AVAILABLEINCOUNTRY = 104

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    BILLINGITEMID => {:type => ::Thrift::Types::STRUCT, :name => 'billingItemId', :class => ::Price},
    BILLINGCPID => {:type => ::Thrift::Types::MAP, :name => 'billingCpId', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    TYPE => {:type => ::Thrift::Types::MAP, :name => 'type', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    SUBTYPE => {:type => ::Thrift::Types::STRING, :name => 'subtype'},
    NAME => {:type => ::Thrift::Types::I32, :name => 'name', :enum_class => ::J0_a_a_b_a_a_g3},
    AUTHOR => {:type => ::Thrift::Types::STRUCT, :name => 'author', :class => ::ProductProperty},
    DETAILS => {:type => ::Thrift::Types::I32, :name => 'details', :enum_class => ::J0_a_a_b_a_a_u1},
    COPYRIGHT => {:type => ::Thrift::Types::I64, :name => 'copyright'},
    NOTICE => {:type => ::Thrift::Types::STRUCT, :name => 'notice', :class => ::ProductWishProperty},
    PROMOTIONINFO => {:type => ::Thrift::Types::STRUCT, :name => 'promotionInfo', :class => ::ProductSubscriptionProperty},
    LATESTVERSION => {:type => ::Thrift::Types::I64, :name => 'latestVersion'},
    LATESTVERSIONSTRING => {:type => ::Thrift::Types::BOOL, :name => 'latestVersionString'},
    VERSION => {:type => ::Thrift::Types::I16, :name => 'version'},
    VERSIONSTRING => {:type => ::Thrift::Types::STRING, :name => 'versionString'},
    APPLICATIONVERSIONRANGE => {:type => ::Thrift::Types::STRING, :name => 'applicationVersionRange'},
    OWNED => {:type => ::Thrift::Types::STRING, :name => 'owned'},
    GRANTEDBYDEFAULT => {:type => ::Thrift::Types::STRING, :name => 'grantedByDefault'},
    VALIDFOR => {:type => ::Thrift::Types::I32, :name => 'validFor', :enum_class => ::J0_a_a_b_a_a_y3},
    VALIDUNTIL => {:type => ::Thrift::Types::STRING, :name => 'validUntil'},
    ONSALE => {:type => ::Thrift::Types::STRING, :name => 'onSale'},
    SALESFLAGS => {:type => ::Thrift::Types::STRING, :name => 'salesFlags'},
    AVAILABLEFORPRESENT => {:type => ::Thrift::Types::STRING, :name => 'availableForPresent'},
    AVAILABLEFORMYSELF => {:type => ::Thrift::Types::STRING, :name => 'availableForMyself'},
    PRICETIER => {:type => ::Thrift::Types::STRUCT, :name => 'priceTier', :class => ::PromotionInfo},
    PRICE => {:type => ::Thrift::Types::I64, :name => 'price'},
    PRICEINLINECOIN => {:type => ::Thrift::Types::STRING, :name => 'priceInLineCoin'},
    LOCALIZEDPRICE => {:type => ::Thrift::Types::I64, :name => 'localizedPrice'},
    IMAGES => {:type => ::Thrift::Types::STRING, :name => 'images'},
    ATTRIBUTES => {:type => ::Thrift::Types::STRUCT, :name => 'attributes', :class => ::ApplicationVersionRange},
    AUTHORID => {:type => ::Thrift::Types::BOOL, :name => 'authorId'},
    STICKERRESOURCETYPE => {:type => ::Thrift::Types::BOOL, :name => 'stickerResourceType'},
    PRODUCTPROPERTY => {:type => ::Thrift::Types::I32, :name => 'productProperty'},
    PRODUCTSALESSTATE => {:type => ::Thrift::Types::I64, :name => 'productSalesState'},
    INSTALLEDTIME => {:type => ::Thrift::Types::BOOL, :name => 'installedTime'},
    WISHPROPERTY => {:type => ::Thrift::Types::SET, :name => 'wishProperty', :element => {:type => ::Thrift::Types::STRING}},
    SUBSCRIPTIONPROPERTY => {:type => ::Thrift::Types::BOOL, :name => 'subscriptionProperty'},
    PRODUCTPROMOTIONPROPERTY => {:type => ::Thrift::Types::BOOL, :name => 'productPromotionProperty'},
    AVAILABLEINCOUNTRY => {:type => ::Thrift::Types::I32, :name => 'availableInCountry'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @name.nil? || ::J0_a_a_b_a_a_g3::VALID_VALUES.include?(@name)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field name!')
    end
    unless @details.nil? || ::J0_a_a_b_a_a_u1::VALID_VALUES.include?(@details)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field details!')
    end
    unless @validFor.nil? || ::J0_a_a_b_a_a_y3::VALID_VALUES.include?(@validFor)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field validFor!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class DetailedProductList
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTLIST = 1
  OFFSET = 2
  TOTALSIZE = 3

  FIELDS = {
    PRODUCTLIST => {:type => ::Thrift::Types::LIST, :name => 'productList', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ProductDetail}},
    OFFSET => {:type => ::Thrift::Types::I32, :name => 'offset'},
    TOTALSIZE => {:type => ::Thrift::Types::I32, :name => 'totalSize'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PurchaseRecord
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTDETAIL = 1
  PURCHASEDTIME = 11
  GIVER = 21
  RECIPIENT = 22
  PURCHASEDPRICE = 31

  FIELDS = {
    PRODUCTDETAIL => {:type => ::Thrift::Types::STRUCT, :name => 'productDetail', :class => ::ProductDetail},
    PURCHASEDTIME => {:type => ::Thrift::Types::I64, :name => 'purchasedTime'},
    GIVER => {:type => ::Thrift::Types::STRING, :name => 'giver'},
    RECIPIENT => {:type => ::Thrift::Types::STRING, :name => 'recipient'},
    PURCHASEDPRICE => {:type => ::Thrift::Types::STRUCT, :name => 'purchasedPrice', :class => ::Price}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PurchaseRecordList
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PURCHASERECORDS = 1
  OFFSET = 2
  TOTALSIZE = 3

  FIELDS = {
    PURCHASERECORDS => {:type => ::Thrift::Types::LIST, :name => 'purchaseRecords', :element => {:type => ::Thrift::Types::STRUCT, :class => ::PurchaseRecord}},
    OFFSET => {:type => ::Thrift::Types::I32, :name => 'offset'},
    TOTALSIZE => {:type => ::Thrift::Types::I32, :name => 'totalSize'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RemoveProductFromSubscriptionSlotResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RESULT = 1

  FIELDS = {
    RESULT => {:type => ::Thrift::Types::I32, :name => 'result', :enum_class => ::J0_a_a_b_a_a_w3}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @result.nil? || ::J0_a_a_b_a_a_w3::VALID_VALUES.include?(@result)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field result!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class DemographicType
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DEMOGRAPHICGENDERTYPE = 1
  DEMOGRAPHICAGETYPE = 2
  DEFAULTORDER = 3

  FIELDS = {
    DEMOGRAPHICGENDERTYPE => {:type => ::Thrift::Types::I32, :name => 'demographicGenderType', :enum_class => ::J0_a_a_b_a_a_r},
    DEMOGRAPHICAGETYPE => {:type => ::Thrift::Types::I32, :name => 'demographicAgeType', :enum_class => ::J0_a_a_b_a_a_q},
    DEFAULTORDER => {:type => ::Thrift::Types::BOOL, :name => 'defaultOrder'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @demographicGenderType.nil? || ::J0_a_a_b_a_a_r::VALID_VALUES.include?(@demographicGenderType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field demographicGenderType!')
    end
    unless @demographicAgeType.nil? || ::J0_a_a_b_a_a_q::VALID_VALUES.include?(@demographicAgeType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field demographicAgeType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class StudentInformation
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SCHOOLNAME = 1
  GRADUATIONDATE = 2

  FIELDS = {
    SCHOOLNAME => {:type => ::Thrift::Types::STRING, :name => 'schoolName'},
    GRADUATIONDATE => {:type => ::Thrift::Types::STRING, :name => 'graduationDate'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SaveStudentInformationRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  STUDENTINFORMATION = 1

  FIELDS = {
    STUDENTINFORMATION => {:type => ::Thrift::Types::STRUCT, :name => 'studentInformation', :class => ::StudentInformation}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ShowcaseV3
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTLIST = 1
  CONTINUATIONTOKEN = 2
  TOTALSIZE = 3
  SHOWCASETYPE = 4
  PRODUCTTYPE = 5
  SUBTYPE = 6
  DEMOGRAPHICTYPE = 7

  FIELDS = {
    PRODUCTLIST => {:type => ::Thrift::Types::LIST, :name => 'productList', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ProductSearchSummary}},
    CONTINUATIONTOKEN => {:type => ::Thrift::Types::STRING, :name => 'continuationToken'},
    TOTALSIZE => {:type => ::Thrift::Types::I64, :name => 'totalSize'},
    SHOWCASETYPE => {:type => ::Thrift::Types::I32, :name => 'showcaseType', :enum_class => ::J0_a_a_b_a_a_c3},
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_a_b_a_a_z1},
    SUBTYPE => {:type => ::Thrift::Types::I32, :name => 'subType', :enum_class => ::J0_a_a_b_a_a_y3},
    DEMOGRAPHICTYPE => {:type => ::Thrift::Types::STRUCT, :name => 'demographicType', :class => ::DemographicType}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @showcaseType.nil? || ::J0_a_a_b_a_a_c3::VALID_VALUES.include?(@showcaseType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field showcaseType!')
    end
    unless @productType.nil? || ::J0_a_a_b_a_a_z1::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
    unless @subType.nil? || ::J0_a_a_b_a_a_y3::VALID_VALUES.include?(@subType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field subType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class SaveStudentInformationResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AddProductToSubscriptionSlotRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTTYPE = 1
  PRODUCTID = 2
  OLDPRODUCTID = 3
  SUBSCRIPTIONSERVICE = 4

  FIELDS = {
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_a_b_a_a_z1},
    PRODUCTID => {:type => ::Thrift::Types::STRING, :name => 'productId'},
    OLDPRODUCTID => {:type => ::Thrift::Types::STRING, :name => 'oldProductId'},
    SUBSCRIPTIONSERVICE => {:type => ::Thrift::Types::I32, :name => 'subscriptionService', :enum_class => ::J0_a_a_b_a_a_v3}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @productType.nil? || ::J0_a_a_b_a_a_z1::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
    unless @subscriptionService.nil? || ::J0_a_a_b_a_a_v3::VALID_VALUES.include?(@subscriptionService)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field subscriptionService!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetProductSummariesInSubscriptionSlotsRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTTYPE = 1
  CONTINUATIONTOKEN = 2
  LIMIT = 3

  FIELDS = {
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_a_b_a_a_z1},
    CONTINUATIONTOKEN => {:type => ::Thrift::Types::STRING, :name => 'continuationToken'},
    LIMIT => {:type => ::Thrift::Types::I32, :name => 'limit'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @productType.nil? || ::J0_a_a_b_a_a_z1::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetStudentInformationRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ImageTextRequestEntry
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TEXT = 1

  FIELDS = {
    TEXT => {:type => ::Thrift::Types::STRING, :name => 'text'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CustomizeImageTextRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTTYPE = 1
  PRODUCTID = 2
  NAMEREQUESTENTRY = 3

  FIELDS = {
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_a_b_a_a_z1},
    PRODUCTID => {:type => ::Thrift::Types::STRING, :name => 'productId'},
    NAMEREQUESTENTRY => {:type => ::Thrift::Types::STRUCT, :name => 'nameRequestEntry', :class => ::ImageTextRequestEntry}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @productType.nil? || ::J0_a_a_b_a_a_z1::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class AddProductToSubscriptionSlotResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RESULT = 1

  FIELDS = {
    RESULT => {:type => ::Thrift::Types::I32, :name => 'result', :enum_class => ::J0_a_a_b_a_a_w3}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @result.nil? || ::J0_a_a_b_a_a_w3::VALID_VALUES.include?(@result)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field result!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetProductSummariesInSubscriptionSlotsResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTS = 1
  CONTINUATIONTOKEN = 2
  TOTALSIZE = 3
  MAXSLOTCOUNT = 4

  FIELDS = {
    PRODUCTS => {:type => ::Thrift::Types::LIST, :name => 'products', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ProductSummary}},
    CONTINUATIONTOKEN => {:type => ::Thrift::Types::STRING, :name => 'continuationToken'},
    TOTALSIZE => {:type => ::Thrift::Types::I64, :name => 'totalSize'},
    MAXSLOTCOUNT => {:type => ::Thrift::Types::I32, :name => 'maxSlotCount'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetStudentInformationResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  STUDENTINFORMATION = 1
  ISVALID = 2

  FIELDS = {
    STUDENTINFORMATION => {:type => ::Thrift::Types::STRUCT, :name => 'studentInformation', :class => ::StudentInformation},
    ISVALID => {:type => ::Thrift::Types::BOOL, :name => 'isValid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CustomizeImageTextResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NAMETEXTPROPERTY = 1

  FIELDS = {
    NAMETEXTPROPERTY => {:type => ::Thrift::Types::STRUCT, :name => 'nameTextProperty', :class => ::ImageTextProperty}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BuyMustbuyRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTTYPE = 1
  PRODUCTID = 2
  SERIALNUMBER = 3

  FIELDS = {
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_a_b_a_a_z1},
    PRODUCTID => {:type => ::Thrift::Types::STRING, :name => 'productId'},
    SERIALNUMBER => {:type => ::Thrift::Types::STRING, :name => 'serialNumber'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @productType.nil? || ::J0_a_a_b_a_a_z1::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetProductRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTTYPE = 1
  PRODUCTID = 2
  CARRIERCODE = 3
  SAVEBROWSINGHISTORY = 4

  FIELDS = {
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_a_b_a_a_z1},
    PRODUCTID => {:type => ::Thrift::Types::STRING, :name => 'productId'},
    CARRIERCODE => {:type => ::Thrift::Types::STRING, :name => 'carrierCode'},
    SAVEBROWSINGHISTORY => {:type => ::Thrift::Types::BOOL, :name => 'saveBrowsingHistory'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @productType.nil? || ::J0_a_a_b_a_a_z1::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetSubscriptionPlansRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SUBSCRIPTIONSERVICE = 1
  STORECODE = 2

  FIELDS = {
    SUBSCRIPTIONSERVICE => {:type => ::Thrift::Types::I32, :name => 'subscriptionService', :enum_class => ::J0_a_a_b_a_a_v3},
    STORECODE => {:type => ::Thrift::Types::I32, :name => 'storeCode', :enum_class => ::J0_a_a_b_a_a_n3}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @subscriptionService.nil? || ::J0_a_a_b_a_a_v3::VALID_VALUES.include?(@subscriptionService)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field subscriptionService!')
    end
    unless @storeCode.nil? || ::J0_a_a_b_a_a_n3::VALID_VALUES.include?(@storeCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field storeCode!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ProductValidationScheme
  include ::Thrift::Struct, ::Thrift::Struct_Union
  KEY = 10
  OFFSET = 11
  SIZE = 12

  FIELDS = {
    KEY => {:type => ::Thrift::Types::STRING, :name => 'key'},
    OFFSET => {:type => ::Thrift::Types::I64, :name => 'offset'},
    SIZE => {:type => ::Thrift::Types::I64, :name => 'size'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ProductValidationRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VALIDATIONSCHEME = 1
  AUTHCODE = 10

  FIELDS = {
    VALIDATIONSCHEME => {:type => ::Thrift::Types::STRUCT, :name => 'validationScheme', :class => ::ProductValidationScheme},
    AUTHCODE => {:type => ::Thrift::Types::STRING, :name => 'authCode'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetProductResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTDETAIL = 1

  FIELDS = {
    PRODUCTDETAIL => {:type => ::Thrift::Types::STRUCT, :name => 'productDetail', :class => ::ProductDetail}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SubscriptionPlan
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BILLINGITEMID = 1
  SUBSCRIPTIONSERVICE = 2
  TARGET = 3
  TYPE = 4
  PERIOD = 5
  FREETRIAL = 6
  LOCALIZEDNAME = 7
  PRICE = 8
  AVAILABILITY = 9
  CPID = 10
  NAMEKEY = 11
  TIER = 12

  FIELDS = {
    BILLINGITEMID => {:type => ::Thrift::Types::STRING, :name => 'billingItemId'},
    SUBSCRIPTIONSERVICE => {:type => ::Thrift::Types::I32, :name => 'subscriptionService', :enum_class => ::J0_a_a_b_a_a_v3},
    TARGET => {:type => ::Thrift::Types::I32, :name => 'target', :enum_class => ::J0_a_a_b_a_a_s3},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::J0_a_a_b_a_a_u3},
    PERIOD => {:type => ::Thrift::Types::STRING, :name => 'period'},
    FREETRIAL => {:type => ::Thrift::Types::STRING, :name => 'freeTrial'},
    LOCALIZEDNAME => {:type => ::Thrift::Types::STRING, :name => 'localizedName'},
    PRICE => {:type => ::Thrift::Types::STRUCT, :name => 'price', :class => ::Price},
    AVAILABILITY => {:type => ::Thrift::Types::I32, :name => 'availability', :enum_class => ::J0_a_a_b_a_a_r3},
    CPID => {:type => ::Thrift::Types::STRING, :name => 'cpId'},
    NAMEKEY => {:type => ::Thrift::Types::STRING, :name => 'nameKey'},
    TIER => {:type => ::Thrift::Types::I32, :name => 'tier', :enum_class => ::J0_a_a_b_a_a_t3}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @subscriptionService.nil? || ::J0_a_a_b_a_a_v3::VALID_VALUES.include?(@subscriptionService)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field subscriptionService!')
    end
    unless @target.nil? || ::J0_a_a_b_a_a_s3::VALID_VALUES.include?(@target)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field target!')
    end
    unless @type.nil? || ::J0_a_a_b_a_a_u3::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
    unless @availability.nil? || ::J0_a_a_b_a_a_r3::VALID_VALUES.include?(@availability)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field availability!')
    end
    unless @tier.nil? || ::J0_a_a_b_a_a_t3::VALID_VALUES.include?(@tier)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field tier!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetSubscriptionPlansResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PLANS = 1

  FIELDS = {
    PLANS => {:type => ::Thrift::Types::LIST, :name => 'plans', :element => {:type => ::Thrift::Types::STRUCT, :class => ::SubscriptionPlan}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ProductValidationResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VALIDATED = 1

  FIELDS = {
    VALIDATED => {:type => ::Thrift::Types::BOOL, :name => 'validated'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetSubscriptionStatusRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BirthdayGiftAssociationVerifyRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ASSOCIATIONTOKEN = 1

  FIELDS = {
    ASSOCIATIONTOKEN => {:type => ::Thrift::Types::STRING, :name => 'associationToken'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SubscriptionStatus
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BILLINGITEMID = 1
  SUBSCRIPTIONSERVICE = 2
  PERIOD = 3
  LOCALIZEDNAME = 4
  FREETRIAL = 5
  EXPIRED = 6
  VALIDUNTIL = 7
  STICKERSLOTCOUNT = 8
  TARGET = 9
  TYPE = 10
  STORECODE = 11
  NAMEKEY = 12
  TIER = 13

  FIELDS = {
    BILLINGITEMID => {:type => ::Thrift::Types::STRING, :name => 'billingItemId'},
    SUBSCRIPTIONSERVICE => {:type => ::Thrift::Types::I32, :name => 'subscriptionService', :enum_class => ::J0_a_a_b_a_a_v3},
    PERIOD => {:type => ::Thrift::Types::STRING, :name => 'period'},
    LOCALIZEDNAME => {:type => ::Thrift::Types::STRING, :name => 'localizedName'},
    FREETRIAL => {:type => ::Thrift::Types::BOOL, :name => 'freeTrial'},
    EXPIRED => {:type => ::Thrift::Types::BOOL, :name => 'expired'},
    VALIDUNTIL => {:type => ::Thrift::Types::I64, :name => 'validUntil'},
    STICKERSLOTCOUNT => {:type => ::Thrift::Types::I32, :name => 'stickerSlotCount'},
    TARGET => {:type => ::Thrift::Types::I32, :name => 'target', :enum_class => ::J0_a_a_b_a_a_s3},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::J0_a_a_b_a_a_u3},
    STORECODE => {:type => ::Thrift::Types::I32, :name => 'storeCode', :enum_class => ::J0_a_a_b_a_a_n3},
    NAMEKEY => {:type => ::Thrift::Types::STRING, :name => 'nameKey'},
    TIER => {:type => ::Thrift::Types::I32, :name => 'tier', :enum_class => ::J0_a_a_b_a_a_t3}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @subscriptionService.nil? || ::J0_a_a_b_a_a_v3::VALID_VALUES.include?(@subscriptionService)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field subscriptionService!')
    end
    unless @target.nil? || ::J0_a_a_b_a_a_s3::VALID_VALUES.include?(@target)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field target!')
    end
    unless @type.nil? || ::J0_a_a_b_a_a_u3::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
    unless @storeCode.nil? || ::J0_a_a_b_a_a_n3::VALID_VALUES.include?(@storeCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field storeCode!')
    end
    unless @tier.nil? || ::J0_a_a_b_a_a_t3::VALID_VALUES.include?(@tier)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field tier!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetSubscriptionStatusResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SUBSCRIPTIONS = 1
  HASVALIDSTUDENTINFORMATION = 2

  FIELDS = {
    SUBSCRIPTIONS => {:type => ::Thrift::Types::MAP, :name => 'subscriptions', :key => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_a_b_a_a_v3}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::SubscriptionStatus}},
    HASVALIDSTUDENTINFORMATION => {:type => ::Thrift::Types::BOOL, :name => 'hasValidStudentInformation'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BirthdayGiftAssociationVerifyResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TOKENSTATUS = 1
  RECIPIENTUSERMID = 2

  FIELDS = {
    TOKENSTATUS => {:type => ::Thrift::Types::I32, :name => 'tokenStatus', :enum_class => ::J0_a_a_b_a_a_i},
    RECIPIENTUSERMID => {:type => ::Thrift::Types::STRING, :name => 'recipientUserMid'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @tokenStatus.nil? || ::J0_a_a_b_a_a_i::VALID_VALUES.include?(@tokenStatus)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field tokenStatus!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ChangeSubscriptionRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BILLINGITEMID = 1
  SUBSCRIPTIONSERVICE = 2
  STORECODE = 3

  FIELDS = {
    BILLINGITEMID => {:type => ::Thrift::Types::STRING, :name => 'billingItemId'},
    SUBSCRIPTIONSERVICE => {:type => ::Thrift::Types::I32, :name => 'subscriptionService', :enum_class => ::J0_a_a_b_a_a_v3},
    STORECODE => {:type => ::Thrift::Types::I32, :name => 'storeCode', :enum_class => ::J0_a_a_b_a_a_n3}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @subscriptionService.nil? || ::J0_a_a_b_a_a_v3::VALID_VALUES.include?(@subscriptionService)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field subscriptionService!')
    end
    unless @storeCode.nil? || ::J0_a_a_b_a_a_n3::VALID_VALUES.include?(@storeCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field storeCode!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetSuggestDictionarySettingRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ChangeSubscriptionResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RESULT = 1
  ORDERID = 2
  CONFIRMURL = 3

  FIELDS = {
    RESULT => {:type => ::Thrift::Types::I32, :name => 'result', :enum_class => ::J0_a_a_b_a_a_p3},
    ORDERID => {:type => ::Thrift::Types::STRING, :name => 'orderId'},
    CONFIRMURL => {:type => ::Thrift::Types::STRING, :name => 'confirmUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @result.nil? || ::J0_a_a_b_a_a_p3::VALID_VALUES.include?(@result)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field result!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class SuggestResource
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DATAURL = 1
  VERSION = 2
  UPDATEDTIME = 3

  FIELDS = {
    DATAURL => {:type => ::Thrift::Types::STRING, :name => 'dataUrl'},
    VERSION => {:type => ::Thrift::Types::I64, :name => 'version'},
    UPDATEDTIME => {:type => ::Thrift::Types::I64, :name => 'updatedTime'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SuggestDictionarySetting
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LANGUAGE = 1
  NAME = 2
  PRELOAD = 3
  SUGGESTRESOURCE = 4
  PATCH = 5
  SUGGESTTAGRESOURCE = 6
  TAGPATCH = 7

  FIELDS = {
    LANGUAGE => {:type => ::Thrift::Types::STRING, :name => 'language'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    PRELOAD => {:type => ::Thrift::Types::BOOL, :name => 'preload'},
    SUGGESTRESOURCE => {:type => ::Thrift::Types::STRUCT, :name => 'suggestResource', :class => ::SuggestResource},
    PATCH => {:type => ::Thrift::Types::MAP, :name => 'patch', :key => {:type => ::Thrift::Types::I64}, :value => {:type => ::Thrift::Types::STRING}},
    SUGGESTTAGRESOURCE => {:type => ::Thrift::Types::STRUCT, :name => 'suggestTagResource', :class => ::SuggestResource},
    TAGPATCH => {:type => ::Thrift::Types::MAP, :name => 'tagPatch', :key => {:type => ::Thrift::Types::I64}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetSuggestDictionarySettingResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RESULTS = 1

  FIELDS = {
    RESULTS => {:type => ::Thrift::Types::LIST, :name => 'results', :element => {:type => ::Thrift::Types::STRUCT, :class => ::SuggestDictionarySetting}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class FindRestorablePlanRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SUBSCRIPTIONSERVICE = 1
  STOREORDERIDS = 2

  FIELDS = {
    SUBSCRIPTIONSERVICE => {:type => ::Thrift::Types::I32, :name => 'subscriptionService', :enum_class => ::J0_a_a_b_a_a_v3},
    STOREORDERIDS => {:type => ::Thrift::Types::LIST, :name => 'storeOrderIds', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @subscriptionService.nil? || ::J0_a_a_b_a_a_v3::VALID_VALUES.include?(@subscriptionService)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field subscriptionService!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ShopFilter
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTAVAILABILITIES = 1
  STICKERSIZES = 2

  FIELDS = {
    PRODUCTAVAILABILITIES => {:type => ::Thrift::Types::SET, :name => 'productAvailabilities', :element => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_a_b_a_a_o1}},
    STICKERSIZES => {:type => ::Thrift::Types::SET, :name => 'stickerSizes', :element => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_a_b_a_a_h3}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ProductListByAuthorRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTTYPE = 1
  AUTHORID = 2
  OFFSET = 3
  LIMIT = 4
  SHOPFILTER = 5
  INCLUDESTICKERIDS = 6

  FIELDS = {
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_a_b_a_a_z1},
    AUTHORID => {:type => ::Thrift::Types::STRING, :name => 'authorId'},
    OFFSET => {:type => ::Thrift::Types::I32, :name => 'offset'},
    LIMIT => {:type => ::Thrift::Types::I32, :name => 'limit'},
    SHOPFILTER => {:type => ::Thrift::Types::STRUCT, :name => 'shopFilter', :class => ::ShopFilter},
    INCLUDESTICKERIDS => {:type => ::Thrift::Types::BOOL, :name => 'includeStickerIds'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @productType.nil? || ::J0_a_a_b_a_a_z1::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetSuggestResourcesV2Request
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTTYPE = 1
  PRODUCTIDS = 2

  FIELDS = {
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_a_b_a_a_z1},
    PRODUCTIDS => {:type => ::Thrift::Types::LIST, :name => 'productIds', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @productType.nil? || ::J0_a_a_b_a_a_z1::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class FindRestorablePlanResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RESULT = 1
  BILLINGITEMID = 2
  STOREORDERID = 3
  ORIGINALSTOREORDERID = 4
  ORDERID = 5
  MID = 6

  FIELDS = {
    RESULT => {:type => ::Thrift::Types::I32, :name => 'result', :enum_class => ::J0_a_a_b_a_a_p3},
    BILLINGITEMID => {:type => ::Thrift::Types::STRING, :name => 'billingItemId'},
    STOREORDERID => {:type => ::Thrift::Types::STRING, :name => 'storeOrderId'},
    ORIGINALSTOREORDERID => {:type => ::Thrift::Types::STRING, :name => 'originalStoreOrderId'},
    ORDERID => {:type => ::Thrift::Types::STRING, :name => 'orderId'},
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @result.nil? || ::J0_a_a_b_a_a_p3::VALID_VALUES.include?(@result)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field result!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ProductList
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTLIST = 1
  OFFSET = 2
  TOTALSIZE = 3
  TITLE = 11

  FIELDS = {
    PRODUCTLIST => {:type => ::Thrift::Types::LIST, :name => 'productList', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ProductDetail}},
    OFFSET => {:type => ::Thrift::Types::I32, :name => 'offset'},
    TOTALSIZE => {:type => ::Thrift::Types::I32, :name => 'totalSize'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetSuggestResourcesV2Response
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SUGGESTRESOURCES = 1

  FIELDS = {
    SUGGESTRESOURCES => {:type => ::Thrift::Types::MAP, :name => 'suggestResources', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::SuggestResource}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class LatestProductsByAuthorRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTTYPE = 1
  AUTHORID = 2
  LIMIT = 3

  FIELDS = {
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_a_b_a_a_z1},
    AUTHORID => {:type => ::Thrift::Types::I64, :name => 'authorId'},
    LIMIT => {:type => ::Thrift::Types::I32, :name => 'limit'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @productType.nil? || ::J0_a_a_b_a_a_z1::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ShopUpdates
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SHOPID = 1
  LATESTUPDATETIME = 11

  FIELDS = {
    SHOPID => {:type => ::Thrift::Types::STRING, :name => 'shopId'},
    LATESTUPDATETIME => {:type => ::Thrift::Types::I64, :name => 'latestUpdateTime'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AutoSuggestionShowcaseRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTTYPE = 1
  SUGGESTIONTYPE = 2

  FIELDS = {
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_a_b_a_a_z1},
    SUGGESTIONTYPE => {:type => ::Thrift::Types::I32, :name => 'suggestionType', :enum_class => ::J0_a_a_b_a_a_b4}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @productType.nil? || ::J0_a_a_b_a_a_z1::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
    unless @suggestionType.nil? || ::J0_a_a_b_a_a_b4::VALID_VALUES.include?(@suggestionType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field suggestionType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ProductSummaryForAutoSuggest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  VERSION = 2
  NAME = 3
  STICKERRESOURCETYPE = 4
  SUGGESTVERSION = 5
  POPUPLAYER = 6

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    VERSION => {:type => ::Thrift::Types::I64, :name => 'version'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    STICKERRESOURCETYPE => {:type => ::Thrift::Types::I32, :name => 'stickerResourceType', :enum_class => ::J0_a_a_b_a_a_g3},
    SUGGESTVERSION => {:type => ::Thrift::Types::I64, :name => 'suggestVersion'},
    POPUPLAYER => {:type => ::Thrift::Types::I32, :name => 'popupLayer', :enum_class => ::J0_a_a_b_a_a_m1}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @stickerResourceType.nil? || ::J0_a_a_b_a_a_g3::VALID_VALUES.include?(@stickerResourceType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field stickerResourceType!')
    end
    unless @popupLayer.nil? || ::J0_a_a_b_a_a_m1::VALID_VALUES.include?(@popupLayer)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field popupLayer!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class AutoSuggestionShowcaseResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTLIST = 1
  TOTALSIZE = 2

  FIELDS = {
    PRODUCTLIST => {:type => ::Thrift::Types::LIST, :name => 'productList', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ProductSummaryForAutoSuggest}},
    TOTALSIZE => {:type => ::Thrift::Types::I64, :name => 'totalSize'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetBrowsingHistoryRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTTYPES = 1
  CONTINUATIONTOKEN = 2
  LIMIT = 3
  SHOPFILTER = 4

  FIELDS = {
    PRODUCTTYPES => {:type => ::Thrift::Types::SET, :name => 'productTypes', :element => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_a_b_a_a_z1}},
    CONTINUATIONTOKEN => {:type => ::Thrift::Types::STRING, :name => 'continuationToken'},
    LIMIT => {:type => ::Thrift::Types::I32, :name => 'limit'},
    SHOPFILTER => {:type => ::Thrift::Types::STRUCT, :name => 'shopFilter', :class => ::ShopFilter}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetRecommendOaRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTTYPE = 1
  PRODUCTID = 2

  FIELDS = {
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_a_b_a_a_z1},
    PRODUCTID => {:type => ::Thrift::Types::STRING, :name => 'productId'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @productType.nil? || ::J0_a_a_b_a_a_z1::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PurchaseOrder
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SHOPID = 1
  PRODUCTID = 2
  RECIPIENTMID = 5
  PRICE = 11
  ENABLELINEPOINTAUTOEXCHANGE = 12
  LOCALE = 21
  PRESENTATTRIBUTES = 31

  FIELDS = {
    SHOPID => {:type => ::Thrift::Types::STRING, :name => 'shopId'},
    PRODUCTID => {:type => ::Thrift::Types::STRING, :name => 'productId'},
    RECIPIENTMID => {:type => ::Thrift::Types::STRING, :name => 'recipientMid'},
    PRICE => {:type => ::Thrift::Types::STRUCT, :name => 'price', :class => ::Price},
    ENABLELINEPOINTAUTOEXCHANGE => {:type => ::Thrift::Types::BOOL, :name => 'enableLinePointAutoExchange'},
    LOCALE => {:type => ::Thrift::Types::STRUCT, :name => 'locale', :class => ::Locale},
    PRESENTATTRIBUTES => {:type => ::Thrift::Types::MAP, :name => 'presentAttributes', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BrowsingHistory
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTSEARCHSUMMARY = 1
  BROWSINGTIME = 2

  FIELDS = {
    PRODUCTSEARCHSUMMARY => {:type => ::Thrift::Types::STRUCT, :name => 'productSearchSummary', :class => ::ProductSearchSummary},
    BROWSINGTIME => {:type => ::Thrift::Types::I64, :name => 'browsingTime'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetBrowsingHistoryResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BROWSINGHISTORY = 1
  CONTINUATIONTOKEN = 2
  TOTALSIZE = 3

  FIELDS = {
    BROWSINGHISTORY => {:type => ::Thrift::Types::LIST, :name => 'browsingHistory', :element => {:type => ::Thrift::Types::STRUCT, :class => ::BrowsingHistory}},
    CONTINUATIONTOKEN => {:type => ::Thrift::Types::STRING, :name => 'continuationToken'},
    TOTALSIZE => {:type => ::Thrift::Types::I32, :name => 'totalSize'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetRecommendOaResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BUDDYMIDS = 1

  FIELDS = {
    BUDDYMIDS => {:type => ::Thrift::Types::LIST, :name => 'buddyMids', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PurchaseOrderResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ORDERID = 1
  ATTRIBUTES = 11
  BILLINGCONFIRMURL = 12

  FIELDS = {
    ORDERID => {:type => ::Thrift::Types::STRING, :name => 'orderId'},
    ATTRIBUTES => {:type => ::Thrift::Types::MAP, :name => 'attributes', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    BILLINGCONFIRMURL => {:type => ::Thrift::Types::STRING, :name => 'billingConfirmUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class DynamicHomeNativeRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTTYPE = 1

  FIELDS = {
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_a_b_a_a_z1}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @productType.nil? || ::J0_a_a_b_a_a_z1::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetOldSticonMappingRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LASTUPDATEDTIMEMILLIS = 1

  FIELDS = {
    LASTUPDATEDTIMEMILLIS => {:type => ::Thrift::Types::I64, :name => 'lastUpdatedTimeMillis'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetRecommendationRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CONTINUATIONTOKEN = 1
  LIMIT = 2
  PRODUCTTYPE = 3
  RECOMMENDATIONTYPE = 4
  PRODUCTID = 5
  SUBTYPES = 6
  SHOULDSHUFFLE = 7
  INCLUDESTICKERIDS = 8
  SHOPFILTER = 9

  FIELDS = {
    CONTINUATIONTOKEN => {:type => ::Thrift::Types::STRING, :name => 'continuationToken'},
    LIMIT => {:type => ::Thrift::Types::I32, :name => 'limit'},
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_a_b_a_a_z1},
    RECOMMENDATIONTYPE => {:type => ::Thrift::Types::I32, :name => 'recommendationType', :enum_class => ::J0_a_a_b_a_a_s2},
    PRODUCTID => {:type => ::Thrift::Types::STRING, :name => 'productId'},
    SUBTYPES => {:type => ::Thrift::Types::SET, :name => 'subtypes', :element => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_a_b_a_a_y3}},
    SHOULDSHUFFLE => {:type => ::Thrift::Types::BOOL, :name => 'shouldShuffle'},
    INCLUDESTICKERIDS => {:type => ::Thrift::Types::BOOL, :name => 'includeStickerIds'},
    SHOPFILTER => {:type => ::Thrift::Types::STRUCT, :name => 'shopFilter', :class => ::ShopFilter}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @productType.nil? || ::J0_a_a_b_a_a_z1::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
    unless @recommendationType.nil? || ::J0_a_a_b_a_a_s2::VALID_VALUES.include?(@recommendationType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field recommendationType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class SticonProductMapping
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTID = 1
  OLDPRODUCTID = 2
  NEWTOOLDSTICONIDMAPPING = 3
  OLDPACKAGEVERSION = 4
  OLDMETAVERSION = 5
  STICKERPACKAGEID = 6
  STICKERPACKAGEVERSION = 7
  STICKERIDS = 8

  FIELDS = {
    PRODUCTID => {:type => ::Thrift::Types::STRING, :name => 'productId'},
    OLDPRODUCTID => {:type => ::Thrift::Types::STRING, :name => 'oldProductId'},
    NEWTOOLDSTICONIDMAPPING => {:type => ::Thrift::Types::MAP, :name => 'newToOldSticonIdMapping', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    OLDPACKAGEVERSION => {:type => ::Thrift::Types::I32, :name => 'oldPackageVersion'},
    OLDMETAVERSION => {:type => ::Thrift::Types::I32, :name => 'oldMetaVersion'},
    STICKERPACKAGEID => {:type => ::Thrift::Types::I64, :name => 'stickerPackageId'},
    STICKERPACKAGEVERSION => {:type => ::Thrift::Types::I32, :name => 'stickerPackageVersion'},
    STICKERIDS => {:type => ::Thrift::Types::MAP, :name => 'stickerIds', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetOldSticonMappingResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  STICONPRODUCTMAPPINGS = 1
  UPDATEDTIMEMILLIS = 2
  UPDATED = 3

  FIELDS = {
    STICONPRODUCTMAPPINGS => {:type => ::Thrift::Types::LIST, :name => 'sticonProductMappings', :element => {:type => ::Thrift::Types::STRUCT, :class => ::SticonProductMapping}},
    UPDATEDTIMEMILLIS => {:type => ::Thrift::Types::I64, :name => 'updatedTimeMillis'},
    UPDATED => {:type => ::Thrift::Types::BOOL, :name => 'updated'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetRecommendationResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RESULTS = 1
  CONTINUATIONTOKEN = 2
  TOTALSIZE = 3

  FIELDS = {
    RESULTS => {:type => ::Thrift::Types::LIST, :name => 'results', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ProductSearchSummary}},
    CONTINUATIONTOKEN => {:type => ::Thrift::Types::STRING, :name => 'continuationToken'},
    TOTALSIZE => {:type => ::Thrift::Types::I64, :name => 'totalSize'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetReservationRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RESERVATIONNUMBER = 1

  FIELDS = {
    RESERVATIONNUMBER => {:type => ::Thrift::Types::STRING, :name => 'reservationNumber'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Admission
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ADMISSIONTIME = 1

  FIELDS = {
    ADMISSIONTIME => {:type => ::Thrift::Types::I64, :name => 'admissionTime'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class UIInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  UIFORMAT = 1
  SCHEMEVERSION = 2
  BGCOLOR = 3
  FGCOLOR = 4
  BGIMGURL = 5
  FGIMGURL = 6
  EXTDATA = 7

  FIELDS = {
    UIFORMAT => {:type => ::Thrift::Types::BYTE, :name => 'uiFormat'},
    SCHEMEVERSION => {:type => ::Thrift::Types::STRING, :name => 'schemeVersion'},
    BGCOLOR => {:type => ::Thrift::Types::STRING, :name => 'bgColor'},
    FGCOLOR => {:type => ::Thrift::Types::STRING, :name => 'fgColor'},
    BGIMGURL => {:type => ::Thrift::Types::STRING, :name => 'bgImgUrl'},
    FGIMGURL => {:type => ::Thrift::Types::STRING, :name => 'fgImgUrl'},
    EXTDATA => {:type => ::Thrift::Types::I32, :name => 'extData'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Ticket
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TICKETID = 1
  DISPLAYORDER = 2
  OWNERNAME = 3
  TICKETCLASS = 4
  SEATCLASS = 5
  SEATINFOPRIMARY = 6
  SEATINFOSECONDARY = 7
  FCID = 8
  PRICESTRING = 9
  TICKETDESC = 10
  QRCODEID = 11
  QRCODEVALUE = 12
  QRCODETYPE = 13
  FACEPHOTOURL = 14
  UIINFO = 15

  FIELDS = {
    TICKETID => {:type => ::Thrift::Types::BYTE, :name => 'ticketId'},
    DISPLAYORDER => {:type => ::Thrift::Types::I32, :name => 'displayOrder'},
    OWNERNAME => {:type => ::Thrift::Types::STRING, :name => 'ownerName'},
    TICKETCLASS => {:type => ::Thrift::Types::STRING, :name => 'ticketClass'},
    SEATCLASS => {:type => ::Thrift::Types::STRING, :name => 'seatClass'},
    SEATINFOPRIMARY => {:type => ::Thrift::Types::STRING, :name => 'seatInfoPrimary'},
    SEATINFOSECONDARY => {:type => ::Thrift::Types::STRING, :name => 'seatInfoSecondary'},
    FCID => {:type => ::Thrift::Types::STRING, :name => 'fcId'},
    PRICESTRING => {:type => ::Thrift::Types::STRING, :name => 'priceString'},
    TICKETDESC => {:type => ::Thrift::Types::STRING, :name => 'ticketDesc'},
    QRCODEID => {:type => ::Thrift::Types::STRING, :name => 'qrCodeId'},
    QRCODEVALUE => {:type => ::Thrift::Types::STRING, :name => 'qrCodeValue'},
    QRCODETYPE => {:type => ::Thrift::Types::STRING, :name => 'qrCodeType'},
    FACEPHOTOURL => {:type => ::Thrift::Types::STRING, :name => 'facePhotoUrl'},
    UIINFO => {:type => ::Thrift::Types::STRING, :name => 'uiInfo'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Reservation
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RESERVATIONNUMBER = 1
  OFFLINEENABLED = 2
  EVENTTITLE = 3
  EVENTVENUE = 4
  ARTISTNAME = 5
  EVENTIMGURL = 6
  STARTDATE = 7
  STARTTIME = 8
  DOORTIME = 9
  ENABLEDOORTIME = 10
  VALIDLIMITTIME = 11
  DELETABLETIME = 12
  ENTRYCHECKMETHOD = 13
  EVENTDESC = 14
  COMMEVENTDESC = 15
  UIINFO = 16
  TICKETS = 17
  ADMISSION = 18
  ENTRYCHECKTIMEOUTSEC = 19

  FIELDS = {
    RESERVATIONNUMBER => {:type => ::Thrift::Types::BYTE, :name => 'reservationNumber'},
    OFFLINEENABLED => {:type => ::Thrift::Types::STRUCT, :name => 'offlineEnabled', :class => ::Admission},
    EVENTTITLE => {:type => ::Thrift::Types::STRING, :name => 'eventTitle'},
    EVENTVENUE => {:type => ::Thrift::Types::STRING, :name => 'eventVenue'},
    ARTISTNAME => {:type => ::Thrift::Types::I64, :name => 'artistName'},
    EVENTIMGURL => {:type => ::Thrift::Types::I64, :name => 'eventImgUrl'},
    STARTDATE => {:type => ::Thrift::Types::I64, :name => 'startDate'},
    STARTTIME => {:type => ::Thrift::Types::I32, :name => 'startTime', :enum_class => ::G_a_t0_a_a_b},
    DOORTIME => {:type => ::Thrift::Types::I32, :name => 'doorTime'},
    ENABLEDOORTIME => {:type => ::Thrift::Types::STRING, :name => 'enableDoorTime'},
    VALIDLIMITTIME => {:type => ::Thrift::Types::STRING, :name => 'validLimitTime'},
    DELETABLETIME => {:type => ::Thrift::Types::STRING, :name => 'deletableTime'},
    ENTRYCHECKMETHOD => {:type => ::Thrift::Types::STRING, :name => 'entryCheckMethod'},
    EVENTDESC => {:type => ::Thrift::Types::I32, :name => 'eventDesc'},
    COMMEVENTDESC => {:type => ::Thrift::Types::STRING, :name => 'commEventDesc'},
    UIINFO => {:type => ::Thrift::Types::I64, :name => 'uiInfo'},
    TICKETS => {:type => ::Thrift::Types::I64, :name => 'tickets'},
    ADMISSION => {:type => ::Thrift::Types::LIST, :name => 'admission', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Ticket}},
    ENTRYCHECKTIMEOUTSEC => {:type => ::Thrift::Types::STRUCT, :name => 'entryCheckTimeoutSec', :class => ::UIInfo}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @startTime.nil? || ::G_a_t0_a_a_b::VALID_VALUES.include?(@startTime)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field startTime!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetReservationResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RESERVATION = 1

  FIELDS = {
    RESERVATION => {:type => ::Thrift::Types::STRUCT, :name => 'reservation', :class => ::Reservation}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class TicketException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  REASON = 2
  PARAMETERMAP = 3

  FIELDS = {
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::G_a_t0_a_a_c},
    REASON => {:type => ::Thrift::Types::STRING, :name => 'reason'},
    PARAMETERMAP => {:type => ::Thrift::Types::MAP, :name => 'parameterMap', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::G_a_t0_a_a_c::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetReservationsRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LASTFETCHTIMESTAMP = 1

  FIELDS = {
    LASTFETCHTIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'lastFetchTimeStamp'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetReservationsResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RESERVATIONS = 1

  FIELDS = {
    RESERVATIONS => {:type => ::Thrift::Types::LIST, :name => 'reservations', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Reservation}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class NotifyEnteringRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TICKETIDS = 1

  FIELDS = {
    TICKETIDS => {:type => ::Thrift::Types::LIST, :name => 'ticketIds', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class NotifyEnteringResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ADMISSIONTIME = 1

  FIELDS = {
    ADMISSIONTIME => {:type => ::Thrift::Types::I64, :name => 'admissionTime'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ReturnTicketRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RESERVATIONNUMBER = 1

  FIELDS = {
    RESERVATIONNUMBER => {:type => ::Thrift::Types::STRING, :name => 'reservationNumber'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ReturnTicketResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RETURNTICKETTIME = 1

  FIELDS = {
    RETURNTICKETTIME => {:type => ::Thrift::Types::I64, :name => 'returnTicketTime'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetBalanceSummaryRequestV2
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CurrencyProperty
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  SYMBOL = 2
  POSITION = 3
  SCALE = 4

  FIELDS = {
    CODE => {:type => ::Thrift::Types::STRING, :name => 'code'},
    SYMBOL => {:type => ::Thrift::Types::STRING, :name => 'symbol'},
    POSITION => {:type => ::Thrift::Types::I32, :name => 'position', :enum_class => ::G_a_r1_x_d},
    SCALE => {:type => ::Thrift::Types::I32, :name => 'scale'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @position.nil? || ::G_a_r1_x_d::VALID_VALUES.include?(@position)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field position!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class IpassTokenProperty
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TOKEN = 1
  TOKENISSUEDTIMESTAMP = 2

  FIELDS = {
    TOKEN => {:type => ::Thrift::Types::STRING, :name => 'token'},
    TOKENISSUEDTIMESTAMP => {:type => ::Thrift::Types::STRING, :name => 'tokenIssuedTimestamp'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class LinePayInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BALANCEAMOUNT = 1
  CURRENCYPROPERTY = 2
  PAYMEMBERSTATUS = 3
  APPLICATIONURL = 4
  CHARGEURL = 5
  PAYMEMBERGRADE = 6
  COUNTRY = 7
  REFERENCENUMBER = 8
  IPASSTOKENPROPERTY = 9

  FIELDS = {
    BALANCEAMOUNT => {:type => ::Thrift::Types::STRING, :name => 'balanceAmount'},
    CURRENCYPROPERTY => {:type => ::Thrift::Types::STRUCT, :name => 'currencyProperty', :class => ::CurrencyProperty},
    PAYMEMBERSTATUS => {:type => ::Thrift::Types::I32, :name => 'payMemberStatus', :enum_class => ::G_a_r1_x_r},
    APPLICATIONURL => {:type => ::Thrift::Types::STRING, :name => 'applicationUrl'},
    CHARGEURL => {:type => ::Thrift::Types::STRING, :name => 'chargeUrl'},
    PAYMEMBERGRADE => {:type => ::Thrift::Types::I32, :name => 'payMemberGrade', :enum_class => ::G_a_r1_x_q},
    COUNTRY => {:type => ::Thrift::Types::STRING, :name => 'country'},
    REFERENCENUMBER => {:type => ::Thrift::Types::STRING, :name => 'referenceNumber'},
    IPASSTOKENPROPERTY => {:type => ::Thrift::Types::STRUCT, :name => 'ipassTokenProperty', :class => ::IpassTokenProperty}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @payMemberStatus.nil? || ::G_a_r1_x_r::VALID_VALUES.include?(@payMemberStatus)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field payMemberStatus!')
    end
    unless @payMemberGrade.nil? || ::G_a_r1_x_q::VALID_VALUES.include?(@payMemberGrade)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field payMemberGrade!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class LinePayPromotion
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MAINTEXT = 1
  SUBTEXT = 2
  BUTTONTEXT = 3
  ICONURL = 4
  LINKURL = 5
  TSTARGETID = 6

  FIELDS = {
    MAINTEXT => {:type => ::Thrift::Types::STRING, :name => 'mainText'},
    SUBTEXT => {:type => ::Thrift::Types::STRING, :name => 'subText'},
    BUTTONTEXT => {:type => ::Thrift::Types::STRING, :name => 'buttonText'},
    ICONURL => {:type => ::Thrift::Types::STRING, :name => 'iconUrl'},
    LINKURL => {:type => ::Thrift::Types::STRING, :name => 'linkUrl'},
    TSTARGETID => {:type => ::Thrift::Types::STRING, :name => 'tsTargetId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class MyRankBenefit
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REWARDCOUPONCOUNT = 1
  REWARDCOUPONCOUNTLINKURL = 2
  PAYRETURNPOINTRATE = 3
  PAYRETURNPOINTRATELINKURL = 4

  FIELDS = {
    REWARDCOUPONCOUNT => {:type => ::Thrift::Types::STRING, :name => 'rewardCouponCount'},
    REWARDCOUPONCOUNTLINKURL => {:type => ::Thrift::Types::STRING, :name => 'rewardCouponCountLinkUrl'},
    PAYRETURNPOINTRATE => {:type => ::Thrift::Types::STRING, :name => 'payReturnPointRate'},
    PAYRETURNPOINTRATELINKURL => {:type => ::Thrift::Types::STRING, :name => 'payReturnPointRateLinkUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class MyRank
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RANKTYPE = 1
  RANKNAME = 2
  ICONURL = 3
  LINKURL = 4
  MYRANKBENEFIT = 5
  ANIMATEDICONURL = 6

  FIELDS = {
    RANKTYPE => {:type => ::Thrift::Types::I32, :name => 'rankType', :enum_class => ::G_a_r1_x_a0},
    RANKNAME => {:type => ::Thrift::Types::STRING, :name => 'rankName'},
    ICONURL => {:type => ::Thrift::Types::STRING, :name => 'iconUrl'},
    LINKURL => {:type => ::Thrift::Types::STRING, :name => 'linkUrl'},
    MYRANKBENEFIT => {:type => ::Thrift::Types::STRUCT, :name => 'myRankBenefit', :class => ::MyRankBenefit},
    ANIMATEDICONURL => {:type => ::Thrift::Types::STRING, :name => 'animatedIconUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @rankType.nil? || ::G_a_r1_x_a0::VALID_VALUES.include?(@rankType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field rankType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class LinePointInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BALANCEAMOUNT = 1
  APPLICATIONURL = 2

  FIELDS = {
    BALANCEAMOUNT => {:type => ::Thrift::Types::STRING, :name => 'balanceAmount'},
    APPLICATIONURL => {:type => ::Thrift::Types::STRING, :name => 'applicationUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BalanceShortcut
  include ::Thrift::Struct, ::Thrift::Struct_Union
  OSPAYMENT = 1
  ICONPOSITION = 2
  ICONURL = 3
  ICONTEXT = 4
  ICONALTTEXT = 5
  LINKURL = 6
  TSTARGETID = 7

  FIELDS = {
    OSPAYMENT => {:type => ::Thrift::Types::BOOL, :name => 'osPayment'},
    ICONPOSITION => {:type => ::Thrift::Types::I32, :name => 'iconPosition'},
    ICONURL => {:type => ::Thrift::Types::STRING, :name => 'iconUrl'},
    ICONTEXT => {:type => ::Thrift::Types::STRING, :name => 'iconText'},
    ICONALTTEXT => {:type => ::Thrift::Types::STRING, :name => 'iconAltText'},
    LINKURL => {:type => ::Thrift::Types::STRING, :name => 'linkUrl'},
    TSTARGETID => {:type => ::Thrift::Types::STRING, :name => 'tsTargetId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BalanceShortcutInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BALANCESHORTCUTS = 1
  OSPAYMENTFALLBACKSHORTCUT = 2

  FIELDS = {
    BALANCESHORTCUTS => {:type => ::Thrift::Types::LIST, :name => 'balanceShortcuts', :element => {:type => ::Thrift::Types::STRUCT, :class => ::BalanceShortcut}},
    OSPAYMENTFALLBACKSHORTCUT => {:type => ::Thrift::Types::STRUCT, :name => 'osPaymentFallbackShortcut', :class => ::BalanceShortcut}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetBalanceSummaryResponseV2
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PAYINFO = 1
  PAYPROMOTIONS = 2
  MYRANK = 3
  POINTINFO = 4
  BALANCESHORTCUTINFO = 5

  FIELDS = {
    PAYINFO => {:type => ::Thrift::Types::STRUCT, :name => 'payInfo', :class => ::LinePayInfo},
    PAYPROMOTIONS => {:type => ::Thrift::Types::LIST, :name => 'payPromotions', :element => {:type => ::Thrift::Types::STRUCT, :class => ::LinePayPromotion}},
    MYRANK => {:type => ::Thrift::Types::STRUCT, :name => 'myRank', :class => ::MyRank},
    POINTINFO => {:type => ::Thrift::Types::STRUCT, :name => 'pointInfo', :class => ::LinePointInfo},
    BALANCESHORTCUTINFO => {:type => ::Thrift::Types::STRUCT, :name => 'balanceShortcutInfo', :class => ::BalanceShortcutInfo}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class WalletException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  REASON = 2
  ATTRIBUTES = 3

  FIELDS = {
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::G_a_r1_x_e0},
    REASON => {:type => ::Thrift::Types::STRING, :name => 'reason'},
    ATTRIBUTES => {:type => ::Thrift::Types::MAP, :name => 'attributes', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::G_a_r1_x_e0::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetModuleRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  ETAG = 2
  RECOMMENDEDMODELID = 3

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    ETAG => {:type => ::Thrift::Types::STRING, :name => 'etag'},
    RECOMMENDEDMODELID => {:type => ::Thrift::Types::STRING, :name => 'recommendedModelId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Module
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  TEMPLATENAME = 2
  FIELDS = 3
  ELEMENTS = 4
  ETAG = 5
  REFRESHTIMESEC = 6
  NAME = 7
  RECOMMENDABLE = 8
  RECOMMENDEDMODELID = 9

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    TEMPLATENAME => {:type => ::Thrift::Types::STRING, :name => 'templateName'},
    FIELDS => {:type => ::Thrift::Types::MAP, :name => 'fields', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    ELEMENTS => {:type => ::Thrift::Types::LIST, :name => 'elements', :element => {:type => ::Thrift::Types::STRING}},
    ETAG => {:type => ::Thrift::Types::STRING, :name => 'etag'},
    REFRESHTIMESEC => {:type => ::Thrift::Types::I32, :name => 'refreshTimeSec'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    RECOMMENDABLE => {:type => ::Thrift::Types::BOOL, :name => 'recommendable'},
    RECOMMENDEDMODELID => {:type => ::Thrift::Types::STRING, :name => 'recommendedModelId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ModuleResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MODULEINSTANCE = 1

  FIELDS = {
    MODULEINSTANCE => {:type => ::Thrift::Types::STRUCT, :name => 'moduleInstance', :class => ::Module}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class NotModified
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class NotFound
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetModuleResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MODULERESPONSE = 1
  NOTMODIFIED = 2
  NOTFOUND = 3

  FIELDS = {
    MODULERESPONSE => {:type => ::Thrift::Types::STRUCT, :name => 'moduleResponse', :class => ::ModuleResponse},
    NOTMODIFIED => {:type => ::Thrift::Types::STRUCT, :name => 'notModified', :class => ::NotModified},
    NOTFOUND => {:type => ::Thrift::Types::STRUCT, :name => 'notFound', :class => ::NotFound}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetModulesRequestV2
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ETAG = 1

  FIELDS = {
    ETAG => {:type => ::Thrift::Types::STRING, :name => 'etag'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ModuleAggregationResponseV2
  include ::Thrift::Struct, ::Thrift::Struct_Union
  FIXEDMODULES = 1
  ETAG = 2
  REFRESHTIMESEC = 3
  RECOMMENDEDMODULES = 4

  FIELDS = {
    FIXEDMODULES => {:type => ::Thrift::Types::LIST, :name => 'fixedModules', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Module}},
    ETAG => {:type => ::Thrift::Types::STRING, :name => 'etag'},
    REFRESHTIMESEC => {:type => ::Thrift::Types::I32, :name => 'refreshTimeSec'},
    RECOMMENDEDMODULES => {:type => ::Thrift::Types::LIST, :name => 'recommendedModules', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Module}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetModulesResponseV2
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MODULEAGGREGATIONRESPONSE = 1
  NOTMODIFIED = 2

  FIELDS = {
    MODULEAGGREGATIONRESPONSE => {:type => ::Thrift::Types::STRUCT, :name => 'moduleAggregationResponse', :class => ::ModuleAggregationResponseV2},
    NOTMODIFIED => {:type => ::Thrift::Types::STRUCT, :name => 'notModified', :class => ::NotModified}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetModulesRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ETAG = 1

  FIELDS = {
    ETAG => {:type => ::Thrift::Types::STRING, :name => 'etag'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ModuleAggregationResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MODULES = 1
  ETAG = 2
  REFRESHTIMESEC = 3

  FIELDS = {
    MODULES => {:type => ::Thrift::Types::LIST, :name => 'modules', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Module}},
    ETAG => {:type => ::Thrift::Types::STRING, :name => 'etag'},
    REFRESHTIMESEC => {:type => ::Thrift::Types::I32, :name => 'refreshTimeSec'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetModulesResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MODULEAGGREGATIONRESPONSE = 1
  NOTMODIFIED = 2

  FIELDS = {
    MODULEAGGREGATIONRESPONSE => {:type => ::Thrift::Types::STRUCT, :name => 'moduleAggregationResponse', :class => ::ModuleAggregationResponse},
    NOTMODIFIED => {:type => ::Thrift::Types::STRUCT, :name => 'notModified', :class => ::NotModified}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetSmartChannelRecommendationsRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MAXRESULTS = 1
  PLACEMENT = 2
  TESTMODE = 3

  FIELDS = {
    MAXRESULTS => {:type => ::Thrift::Types::I32, :name => 'maxResults'},
    PLACEMENT => {:type => ::Thrift::Types::STRING, :name => 'placement'},
    TESTMODE => {:type => ::Thrift::Types::BOOL, :name => 'testMode'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SmartChannelRecommendation
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MINDISPLAYDURATION = 1
  TITLE = 2
  DESCRIPTIONTEXT = 3
  LABELTEXT = 4
  IMAGEURL = 5
  BGCOLORCODE = 6
  LINKURL = 7
  IMPEVENTURL = 8
  CLICKEVENTURL = 9
  MUTEEVENTURL = 10
  UPVOTEEVENTURL = 11
  DOWNVOTEEVENTURL = 12

  FIELDS = {
    MINDISPLAYDURATION => {:type => ::Thrift::Types::I32, :name => 'minDisplayDuration'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    DESCRIPTIONTEXT => {:type => ::Thrift::Types::STRING, :name => 'descriptionText'},
    LABELTEXT => {:type => ::Thrift::Types::STRING, :name => 'labelText'},
    IMAGEURL => {:type => ::Thrift::Types::STRING, :name => 'imageUrl'},
    BGCOLORCODE => {:type => ::Thrift::Types::STRING, :name => 'bgColorCode'},
    LINKURL => {:type => ::Thrift::Types::STRING, :name => 'linkUrl'},
    IMPEVENTURL => {:type => ::Thrift::Types::STRING, :name => 'impEventUrl'},
    CLICKEVENTURL => {:type => ::Thrift::Types::STRING, :name => 'clickEventUrl'},
    MUTEEVENTURL => {:type => ::Thrift::Types::STRING, :name => 'muteEventUrl'},
    UPVOTEEVENTURL => {:type => ::Thrift::Types::STRING, :name => 'upvoteEventUrl'},
    DOWNVOTEEVENTURL => {:type => ::Thrift::Types::STRING, :name => 'downvoteEventUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetSmartChannelRecommendationsResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SMARTCHANNELRECOMMENDATIONS = 1
  MININTERVAL = 2
  REQUESTID = 3

  FIELDS = {
    SMARTCHANNELRECOMMENDATIONS => {:type => ::Thrift::Types::LIST, :name => 'smartChannelRecommendations', :element => {:type => ::Thrift::Types::STRUCT, :class => ::SmartChannelRecommendation}},
    MININTERVAL => {:type => ::Thrift::Types::I32, :name => 'minInterval'},
    REQUESTID => {:type => ::Thrift::Types::STRING, :name => 'requestId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AcceptChatInvitationResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ChatRoomAnnouncementContentMetadata
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REPLACE = 1
  STICONOWNERSHIP = 2

  FIELDS = {
    REPLACE => {:type => ::Thrift::Types::STRING, :name => 'replace', :optional => true},
    STICONOWNERSHIP => {:type => ::Thrift::Types::STRING, :name => 'sticonOwnership', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ChatRoomAnnouncementContents
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DISPLAYFIELDS = 1
  TEXT = 2
  LINK = 3
  THUMBNAIL = 4
  CONTENTMETADATA = 5

  FIELDS = {
    DISPLAYFIELDS => {:type => ::Thrift::Types::I32, :name => 'displayFields'},
    TEXT => {:type => ::Thrift::Types::STRING, :name => 'text'},
    LINK => {:type => ::Thrift::Types::STRING, :name => 'link', :optional => true},
    THUMBNAIL => {:type => ::Thrift::Types::STRING, :name => 'thumbnail', :optional => true},
    CONTENTMETADATA => {:type => ::Thrift::Types::STRUCT, :name => 'contentMetadata', :class => ::ChatRoomAnnouncementContentMetadata, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ChatRoomAnnouncement
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ANNOUNCEMENTSEQ = 1
  TYPE = 2
  CONTENTS = 3
  CREATORMID = 4
  CREATEDTIME = 5
  DELETEPERMISSION = 6

  FIELDS = {
    ANNOUNCEMENTSEQ => {:type => ::Thrift::Types::I64, :name => 'announcementSeq'},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::J0_a_e_a_b_o7},
    CONTENTS => {:type => ::Thrift::Types::STRUCT, :name => 'contents', :class => ::ChatRoomAnnouncementContents},
    CREATORMID => {:type => ::Thrift::Types::STRING, :name => 'creatorMid'},
    CREATEDTIME => {:type => ::Thrift::Types::I64, :name => 'createdTime'},
    DELETEPERMISSION => {:type => ::Thrift::Types::I32, :name => 'deletePermission', :optional => true, :enum_class => ::J0_a_e_a_b_n7}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::J0_a_e_a_b_o7::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
    unless @deletePermission.nil? || ::J0_a_e_a_b_n7::VALID_VALUES.include?(@deletePermission)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field deletePermission!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GroupExtra
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CREATOR = 1
  PREVENTEDJOINBYTICKET = 2
  INVITATIONTICKET = 3
  MEMBERMIDS = 4
  INVITEEMIDS = 5

  FIELDS = {
    CREATOR => {:type => ::Thrift::Types::STRING, :name => 'creator'},
    PREVENTEDJOINBYTICKET => {:type => ::Thrift::Types::BOOL, :name => 'preventedJoinByTicket'},
    INVITATIONTICKET => {:type => ::Thrift::Types::STRING, :name => 'invitationTicket', :optional => true},
    MEMBERMIDS => {:type => ::Thrift::Types::MAP, :name => 'memberMids', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::I64}, :optional => true},
    INVITEEMIDS => {:type => ::Thrift::Types::MAP, :name => 'inviteeMids', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::I64}, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PeerExtra
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Extra
  include ::Thrift::Struct, ::Thrift::Struct_Union
  GROUPEXTRA = 1
  PEEREXTRA = 2

  FIELDS = {
    GROUPEXTRA => {:type => ::Thrift::Types::STRUCT, :name => 'groupExtra', :class => ::GroupExtra},
    PEEREXTRA => {:type => ::Thrift::Types::STRUCT, :name => 'peerExtra', :class => ::PeerExtra}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Chat
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TYPE = 1
  CHATMID = 2
  CREATEDTIME = 3
  NOTIFICATIONDISABLED = 4
  FAVORITETIMESTAMP = 5
  CHATNAME = 6
  PICTUREPATH = 7
  EXTRA = 8

  FIELDS = {
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::J0_a_e_a_b_q7},
    CHATMID => {:type => ::Thrift::Types::STRING, :name => 'chatMid'},
    CREATEDTIME => {:type => ::Thrift::Types::I64, :name => 'createdTime'},
    NOTIFICATIONDISABLED => {:type => ::Thrift::Types::BOOL, :name => 'notificationDisabled'},
    FAVORITETIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'favoriteTimestamp', :optional => true},
    CHATNAME => {:type => ::Thrift::Types::STRING, :name => 'chatName', :optional => true},
    PICTUREPATH => {:type => ::Thrift::Types::STRING, :name => 'picturePath', :optional => true},
    EXTRA => {:type => ::Thrift::Types::STRUCT, :name => 'extra', :class => ::Extra, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::J0_a_e_a_b_q7::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class FindChatByTicketResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHAT = 1

  FIELDS = {
    CHAT => {:type => ::Thrift::Types::STRUCT, :name => 'chat', :class => ::Chat}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RejectChatInvitationRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REQSEQ = 1
  CHATMID = 2

  FIELDS = {
    REQSEQ => {:type => ::Thrift::Types::I32, :name => 'reqSeq'},
    CHATMID => {:type => ::Thrift::Types::STRING, :name => 'chatMid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class VerificationSessionData
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SESSIONID = 1
  METHOD = 2
  CALLBACK = 3
  NORMALIZEDPHONE = 4
  COUNTRYCODE = 5
  NATIONALSIGNIFICANTNUMBER = 6
  AVAILABLEVERIFICATIONMETHODS = 7
  CALLERIDMASK = 8

  FIELDS = {
    SESSIONID => {:type => ::Thrift::Types::STRING, :name => 'sessionId'},
    METHOD => {:type => ::Thrift::Types::I32, :name => 'method', :enum_class => ::J0_a_e_a_b_qt},
    CALLBACK => {:type => ::Thrift::Types::STRING, :name => 'callback'},
    NORMALIZEDPHONE => {:type => ::Thrift::Types::STRING, :name => 'normalizedPhone'},
    COUNTRYCODE => {:type => ::Thrift::Types::STRING, :name => 'countryCode'},
    NATIONALSIGNIFICANTNUMBER => {:type => ::Thrift::Types::STRING, :name => 'nationalSignificantNumber'},
    AVAILABLEVERIFICATIONMETHODS => {:type => ::Thrift::Types::LIST, :name => 'availableVerificationMethods', :element => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_qt}},
    CALLERIDMASK => {:type => ::Thrift::Types::STRING, :name => 'callerIdMask'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @method.nil? || ::J0_a_e_a_b_qt::VALID_VALUES.include?(@method)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field method!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class AuthLoginRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHLOGINVERSION = 1
  METADATA = 2
  CIPHERTEXT = 3

  FIELDS = {
    AUTHLOGINVERSION => {:type => ::Thrift::Types::I32, :name => 'authLoginVersion', :enum_class => ::J0_a_e_a_b_g0},
    METADATA => {:type => ::Thrift::Types::MAP, :name => 'metaData', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    CIPHERTEXT => {:type => ::Thrift::Types::STRING, :name => 'cipherText'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @authLoginVersion.nil? || ::J0_a_e_a_b_g0::VALID_VALUES.include?(@authLoginVersion)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field authLoginVersion!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class AvatarProfile
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VERSION = 1
  UPDATEDMILLIS = 2
  THUMBNAIL = 3

  FIELDS = {
    VERSION => {:type => ::Thrift::Types::STRING, :name => 'version'},
    UPDATEDMILLIS => {:type => ::Thrift::Types::I64, :name => 'updatedMillis'},
    THUMBNAIL => {:type => ::Thrift::Types::STRING, :name => 'thumbnail'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Contact
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MID = 1
  CREATEDTIME = 2
  TYPE = 10
  STATUS = 11
  RELATION = 21
  DISPLAYNAME = 22
  PHONETICNAME = 23
  PICTURESTATUS = 24
  THUMBNAILURL = 25
  STATUSMESSAGE = 26
  DISPLAYNAMEOVERRIDDEN = 27
  FAVORITETIME = 28
  CAPABLEVOICECALL = 31
  CAPABLEVIDEOCALL = 32
  CAPABLEMYHOME = 33
  CAPABLEBUDDY = 34
  ATTRIBUTES = 35
  SETTINGS = 36
  PICTUREPATH = 37
  RECOMMENDPARAMS = 38
  FRIENDREQUESTSTATUS = 39
  MUSICPROFILE = 40
  VIDEOPROFILE = 42
  STATUSMESSAGECONTENTMETADATA = 43
  AVATARPROFILE = 44

  FIELDS = {
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'},
    CREATEDTIME => {:type => ::Thrift::Types::I64, :name => 'createdTime'},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::J0_a_e_a_b_b9},
    STATUS => {:type => ::Thrift::Types::I32, :name => 'status', :enum_class => ::J0_a_e_a_b_a9},
    RELATION => {:type => ::Thrift::Types::I32, :name => 'relation', :enum_class => ::J0_a_e_a_b_y8},
    DISPLAYNAME => {:type => ::Thrift::Types::STRING, :name => 'displayName'},
    PHONETICNAME => {:type => ::Thrift::Types::STRING, :name => 'phoneticName'},
    PICTURESTATUS => {:type => ::Thrift::Types::STRING, :name => 'pictureStatus'},
    THUMBNAILURL => {:type => ::Thrift::Types::STRING, :name => 'thumbnailUrl'},
    STATUSMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'statusMessage'},
    DISPLAYNAMEOVERRIDDEN => {:type => ::Thrift::Types::STRING, :name => 'displayNameOverridden'},
    FAVORITETIME => {:type => ::Thrift::Types::I64, :name => 'favoriteTime'},
    CAPABLEVOICECALL => {:type => ::Thrift::Types::BOOL, :name => 'capableVoiceCall'},
    CAPABLEVIDEOCALL => {:type => ::Thrift::Types::BOOL, :name => 'capableVideoCall'},
    CAPABLEMYHOME => {:type => ::Thrift::Types::BOOL, :name => 'capableMyhome'},
    CAPABLEBUDDY => {:type => ::Thrift::Types::BOOL, :name => 'capableBuddy'},
    ATTRIBUTES => {:type => ::Thrift::Types::I32, :name => 'attributes'},
    SETTINGS => {:type => ::Thrift::Types::I64, :name => 'settings'},
    PICTUREPATH => {:type => ::Thrift::Types::STRING, :name => 'picturePath'},
    RECOMMENDPARAMS => {:type => ::Thrift::Types::STRING, :name => 'recommendParams'},
    FRIENDREQUESTSTATUS => {:type => ::Thrift::Types::I32, :name => 'friendRequestStatus', :enum_class => ::J0_a_e_a_b_ya},
    MUSICPROFILE => {:type => ::Thrift::Types::STRING, :name => 'musicProfile'},
    VIDEOPROFILE => {:type => ::Thrift::Types::STRING, :name => 'videoProfile'},
    STATUSMESSAGECONTENTMETADATA => {:type => ::Thrift::Types::MAP, :name => 'statusMessageContentMetadata', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    AVATARPROFILE => {:type => ::Thrift::Types::STRUCT, :name => 'avatarProfile', :class => ::AvatarProfile, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::J0_a_e_a_b_b9::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
    unless @status.nil? || ::J0_a_e_a_b_a9::VALID_VALUES.include?(@status)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field status!')
    end
    unless @relation.nil? || ::J0_a_e_a_b_y8::VALID_VALUES.include?(@relation)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field relation!')
    end
    unless @friendRequestStatus.nil? || ::J0_a_e_a_b_ya::VALID_VALUES.include?(@friendRequestStatus)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field friendRequestStatus!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class CoinProductItem
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ITEMID = 1
  COIN = 2
  FREECOIN = 3
  CURRENCY = 5
  PRICE = 6
  DISPLAYPRICE = 7
  NAME = 8
  DESC = 9

  FIELDS = {
    ITEMID => {:type => ::Thrift::Types::STRING, :name => 'itemId'},
    COIN => {:type => ::Thrift::Types::I32, :name => 'coin'},
    FREECOIN => {:type => ::Thrift::Types::I32, :name => 'freeCoin'},
    CURRENCY => {:type => ::Thrift::Types::STRING, :name => 'currency'},
    PRICE => {:type => ::Thrift::Types::STRING, :name => 'price'},
    DISPLAYPRICE => {:type => ::Thrift::Types::STRING, :name => 'displayPrice'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    DESC => {:type => ::Thrift::Types::STRING, :name => 'desc'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaidCallRedeemResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  EVENTNAME = 1
  EVENTAMOUNT = 2

  FIELDS = {
    EVENTNAME => {:type => ::Thrift::Types::STRING, :name => 'eventName'},
    EVENTAMOUNT => {:type => ::Thrift::Types::I32, :name => 'eventAmount'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ChannelProvider
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NAME = 1
  CERTIFIED = 2

  FIELDS = {
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    CERTIFIED => {:type => ::Thrift::Types::BOOL, :name => 'certified', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ChannelDomain
  include ::Thrift::Struct, ::Thrift::Struct_Union
  HOST = 1
  REMOVED = 2

  FIELDS = {
    HOST => {:type => ::Thrift::Types::STRING, :name => 'host'},
    REMOVED => {:type => ::Thrift::Types::BOOL, :name => 'removed'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ChannelInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHANNELID = 1
  NAME = 3
  ENTRYPAGEURL = 4
  DESCRIPTIONTEXT = 5
  PROVIDER = 6
  PUBLICTYPE = 7
  ICONIMAGE = 8
  PERMISSIONS = 9
  ICONTHUMBNAILIMAGE = 11
  CHANNELCONFIGURATIONS = 12
  LCSALLAPIUSABLE = 13
  ALLOWEDPERMISSIONS = 14
  CHANNELDOMAINS = 15
  UPDATEDTIMESTAMP = 16
  FEATURELICENSES = 17

  FIELDS = {
    CHANNELID => {:type => ::Thrift::Types::STRING, :name => 'channelId'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    ENTRYPAGEURL => {:type => ::Thrift::Types::STRING, :name => 'entryPageUrl'},
    DESCRIPTIONTEXT => {:type => ::Thrift::Types::STRING, :name => 'descriptionText'},
    PROVIDER => {:type => ::Thrift::Types::STRUCT, :name => 'provider', :class => ::ChannelProvider},
    PUBLICTYPE => {:type => ::Thrift::Types::I32, :name => 'publicType', :enum_class => ::J0_a_e_a_b_ef},
    ICONIMAGE => {:type => ::Thrift::Types::STRING, :name => 'iconImage'},
    PERMISSIONS => {:type => ::Thrift::Types::LIST, :name => 'permissions', :element => {:type => ::Thrift::Types::STRING}},
    ICONTHUMBNAILIMAGE => {:type => ::Thrift::Types::STRING, :name => 'iconThumbnailImage'},
    CHANNELCONFIGURATIONS => {:type => ::Thrift::Types::LIST, :name => 'channelConfigurations', :element => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_l5}},
    LCSALLAPIUSABLE => {:type => ::Thrift::Types::BOOL, :name => 'lcsAllApiUsable'},
    ALLOWEDPERMISSIONS => {:type => ::Thrift::Types::SET, :name => 'allowedPermissions', :element => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_u5}},
    CHANNELDOMAINS => {:type => ::Thrift::Types::LIST, :name => 'channelDomains', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ChannelDomain}},
    UPDATEDTIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'updatedTimestamp'},
    FEATURELICENSES => {:type => ::Thrift::Types::SET, :name => 'featureLicenses', :element => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_q5}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @publicType.nil? || ::J0_a_e_a_b_ef::VALID_VALUES.include?(@publicType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field publicType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ApprovedChannelInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHANNELINFO = 1
  APPROVEDAT = 2

  FIELDS = {
    CHANNELINFO => {:type => ::Thrift::Types::STRUCT, :name => 'channelInfo', :class => ::ChannelInfo},
    APPROVEDAT => {:type => ::Thrift::Types::I64, :name => 'approvedAt'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ApprovedChannelInfos
  include ::Thrift::Struct, ::Thrift::Struct_Union
  APPROVEDCHANNELINFOS = 1
  REVISION = 2

  FIELDS = {
    APPROVEDCHANNELINFOS => {:type => ::Thrift::Types::LIST, :name => 'approvedChannelInfos', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ApprovedChannelInfo}},
    REVISION => {:type => ::Thrift::Types::I64, :name => 'revision'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ChannelException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  REASON = 2
  PARAMETERMAP = 3

  FIELDS = {
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::J0_a_e_a_b_o5},
    REASON => {:type => ::Thrift::Types::STRING, :name => 'reason'},
    PARAMETERMAP => {:type => ::Thrift::Types::MAP, :name => 'parameterMap', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::J0_a_e_a_b_o5::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class CreateChatRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REQSEQ = 1
  TYPE = 2
  NAME = 3
  TARGETUSERMIDS = 4
  PICTUREPATH = 5

  FIELDS = {
    REQSEQ => {:type => ::Thrift::Types::I32, :name => 'reqSeq'},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::J0_a_e_a_b_q7},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name', :optional => true},
    TARGETUSERMIDS => {:type => ::Thrift::Types::SET, :name => 'targetUserMids', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
    PICTUREPATH => {:type => ::Thrift::Types::STRING, :name => 'picturePath', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::J0_a_e_a_b_q7::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class RejectChatInvitationResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class EmailConfirmationSession
  include ::Thrift::Struct, ::Thrift::Struct_Union
  EMAILCONFIRMATIONTYPE = 1
  VERIFIER = 2
  TARGETEMAIL = 3

  FIELDS = {
    EMAILCONFIRMATIONTYPE => {:type => ::Thrift::Types::I32, :name => 'emailConfirmationType', :enum_class => ::J0_a_e_a_b_aa},
    VERIFIER => {:type => ::Thrift::Types::STRING, :name => 'verifier'},
    TARGETEMAIL => {:type => ::Thrift::Types::STRING, :name => 'targetEmail'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @emailConfirmationType.nil? || ::J0_a_e_a_b_aa::VALID_VALUES.include?(@emailConfirmationType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field emailConfirmationType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ContactModification
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TYPE = 1
  LUID = 2
  PHONES = 11
  EMAILS = 12
  USERIDS = 13
  MOBILECONTACTNAME = 14
  PHONETICNAME = 15

  FIELDS = {
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::J0_a_e_a_b_fd},
    LUID => {:type => ::Thrift::Types::STRING, :name => 'luid'},
    PHONES => {:type => ::Thrift::Types::LIST, :name => 'phones', :element => {:type => ::Thrift::Types::STRING}},
    EMAILS => {:type => ::Thrift::Types::LIST, :name => 'emails', :element => {:type => ::Thrift::Types::STRING}},
    USERIDS => {:type => ::Thrift::Types::LIST, :name => 'userids', :element => {:type => ::Thrift::Types::STRING}},
    MOBILECONTACTNAME => {:type => ::Thrift::Types::STRING, :name => 'mobileContactName', :optional => true},
    PHONETICNAME => {:type => ::Thrift::Types::STRING, :name => 'phoneticName', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::J0_a_e_a_b_fd::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class AuthLoginResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  METADATA = 1
  CIPHERTEXT = 2

  FIELDS = {
    METADATA => {:type => ::Thrift::Types::MAP, :name => 'metaData', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    CIPHERTEXT => {:type => ::Thrift::Types::STRING, :name => 'cipherText'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CoinHistoryCondition
  include ::Thrift::Struct, ::Thrift::Struct_Union
  START = 1
  SIZE = 2
  LANGUAGE = 3
  EDDT = 4
  APPSTORECODE = 5

  FIELDS = {
    START => {:type => ::Thrift::Types::I64, :name => 'start'},
    SIZE => {:type => ::Thrift::Types::I32, :name => 'size'},
    LANGUAGE => {:type => ::Thrift::Types::STRING, :name => 'language'},
    EDDT => {:type => ::Thrift::Types::STRING, :name => 'eddt'},
    APPSTORECODE => {:type => ::Thrift::Types::I32, :name => 'appStoreCode', :enum_class => ::J0_a_e_a_b_ge}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @appStoreCode.nil? || ::J0_a_e_a_b_ge::VALID_VALUES.include?(@appStoreCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field appStoreCode!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class CoinPurchaseReservation
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTID = 1
  COUNTRY = 2
  CURRENCY = 3
  PRICE = 4
  APPSTORECODE = 5
  LANGUAGE = 6
  PGCODE = 7
  REDIRECTURL = 8

  FIELDS = {
    PRODUCTID => {:type => ::Thrift::Types::STRING, :name => 'productId'},
    COUNTRY => {:type => ::Thrift::Types::STRING, :name => 'country'},
    CURRENCY => {:type => ::Thrift::Types::STRING, :name => 'currency'},
    PRICE => {:type => ::Thrift::Types::STRING, :name => 'price'},
    APPSTORECODE => {:type => ::Thrift::Types::I32, :name => 'appStoreCode', :enum_class => ::J0_a_e_a_b_ge},
    LANGUAGE => {:type => ::Thrift::Types::STRING, :name => 'language'},
    PGCODE => {:type => ::Thrift::Types::I32, :name => 'pgCode', :enum_class => ::J0_a_e_a_b_ee},
    REDIRECTURL => {:type => ::Thrift::Types::STRING, :name => 'redirectUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @appStoreCode.nil? || ::J0_a_e_a_b_ge::VALID_VALUES.include?(@appStoreCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field appStoreCode!')
    end
    unless @pgCode.nil? || ::J0_a_e_a_b_ee::VALID_VALUES.include?(@pgCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field pgCode!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetCoinProductsRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  APPSTORECODE = 1
  COUNTRY = 2
  LANGUAGE = 3
  PGCODE = 4

  FIELDS = {
    APPSTORECODE => {:type => ::Thrift::Types::I32, :name => 'appStoreCode', :enum_class => ::J0_a_e_a_b_ge},
    COUNTRY => {:type => ::Thrift::Types::STRING, :name => 'country'},
    LANGUAGE => {:type => ::Thrift::Types::STRING, :name => 'language'},
    PGCODE => {:type => ::Thrift::Types::I32, :name => 'pgCode', :optional => true, :enum_class => ::J0_a_e_a_b_ee}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @appStoreCode.nil? || ::J0_a_e_a_b_ge::VALID_VALUES.include?(@appStoreCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field appStoreCode!')
    end
    unless @pgCode.nil? || ::J0_a_e_a_b_ee::VALID_VALUES.include?(@pgCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field pgCode!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class CreateChatResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHAT = 1

  FIELDS = {
    CHAT => {:type => ::Thrift::Types::STRUCT, :name => 'chat', :class => ::Chat}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class E2EEGroupSharedKey
  include ::Thrift::Struct, ::Thrift::Struct_Union
  KEYVERSION = 1
  GROUPKEYID = 2
  CREATOR = 3
  CREATORKEYID = 4
  RECEIVER = 5
  RECEIVERKEYID = 6
  ENCRYPTEDSHAREDKEY = 7
  ALLOWEDTYPES = 8
  SPECVERSION = 9

  FIELDS = {
    KEYVERSION => {:type => ::Thrift::Types::I32, :name => 'keyVersion'},
    GROUPKEYID => {:type => ::Thrift::Types::I32, :name => 'groupKeyId'},
    CREATOR => {:type => ::Thrift::Types::STRING, :name => 'creator'},
    CREATORKEYID => {:type => ::Thrift::Types::I32, :name => 'creatorKeyId'},
    RECEIVER => {:type => ::Thrift::Types::STRING, :name => 'receiver'},
    RECEIVERKEYID => {:type => ::Thrift::Types::I32, :name => 'receiverKeyId'},
    ENCRYPTEDSHAREDKEY => {:type => ::Thrift::Types::STRING, :name => 'encryptedSharedKey'},
    ALLOWEDTYPES => {:type => ::Thrift::Types::SET, :name => 'allowedTypes', :element => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_c9}},
    SPECVERSION => {:type => ::Thrift::Types::I32, :name => 'specVersion'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class MessageBoxListRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MINCHATID = 1
  MAXCHATID = 2
  ACTIVEONLY = 3
  MESSAGEBOXCOUNTLIMIT = 4
  WITHUNREADCOUNT = 5
  LASTMESSAGESPERMESSAGEBOXCOUNT = 6
  UNREADONLY = 7

  FIELDS = {
    MINCHATID => {:type => ::Thrift::Types::STRING, :name => 'minChatId', :optional => true},
    MAXCHATID => {:type => ::Thrift::Types::STRING, :name => 'maxChatId', :optional => true},
    ACTIVEONLY => {:type => ::Thrift::Types::BOOL, :name => 'activeOnly', :optional => true},
    MESSAGEBOXCOUNTLIMIT => {:type => ::Thrift::Types::I32, :name => 'messageBoxCountLimit', :optional => true},
    WITHUNREADCOUNT => {:type => ::Thrift::Types::BOOL, :name => 'withUnreadCount', :optional => true},
    LASTMESSAGESPERMESSAGEBOXCOUNT => {:type => ::Thrift::Types::I32, :name => 'lastMessagesPerMessageBoxCount', :optional => true},
    UNREADONLY => {:type => ::Thrift::Types::BOOL, :name => 'unreadOnly', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ContactRegistration
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LUID = 10
  CONTACTTYPE = 11
  CONTACTKEY = 12
  CONTACT = 1

  FIELDS = {
    LUID => {:type => ::Thrift::Types::STRING, :name => 'luid'},
    CONTACTTYPE => {:type => ::Thrift::Types::I32, :name => 'contactType', :enum_class => ::J0_a_e_a_b_b9},
    CONTACTKEY => {:type => ::Thrift::Types::STRING, :name => 'contactKey'},
    CONTACT => {:type => ::Thrift::Types::STRUCT, :name => 'contact', :class => ::Contact}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @contactType.nil? || ::J0_a_e_a_b_b9::VALID_VALUES.include?(@contactType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field contactType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class IdentifierConfirmationRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  METADATA = 1
  FORCEREGISTRATION = 2
  VERIFICATIONCODE = 3

  FIELDS = {
    METADATA => {:type => ::Thrift::Types::MAP, :name => 'metaData', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    FORCEREGISTRATION => {:type => ::Thrift::Types::BOOL, :name => 'forceRegistration'},
    VERIFICATIONCODE => {:type => ::Thrift::Types::STRING, :name => 'verificationCode'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class IdentityCredentialRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  METADATA = 1
  IDENTITYPROVIDER = 2
  CIPHERKEYID = 3
  CIPHERTEXT = 4
  CONFIRMATIONREQUEST = 5

  FIELDS = {
    METADATA => {:type => ::Thrift::Types::MAP, :name => 'metaData', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    IDENTITYPROVIDER => {:type => ::Thrift::Types::I32, :name => 'identityProvider', :enum_class => ::J0_a_e_a_b_rc},
    CIPHERKEYID => {:type => ::Thrift::Types::STRING, :name => 'cipherKeyId'},
    CIPHERTEXT => {:type => ::Thrift::Types::STRING, :name => 'cipherText'},
    CONFIRMATIONREQUEST => {:type => ::Thrift::Types::STRUCT, :name => 'confirmationRequest', :class => ::IdentifierConfirmationRequest}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @identityProvider.nil? || ::J0_a_e_a_b_rc::VALID_VALUES.include?(@identityProvider)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field identityProvider!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class CoinPayLoad
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PAYCOIN = 1
  FREECOIN = 2
  TYPE = 3
  REWARDCOIN = 4

  FIELDS = {
    PAYCOIN => {:type => ::Thrift::Types::I32, :name => 'payCoin'},
    FREECOIN => {:type => ::Thrift::Types::I32, :name => 'freeCoin'},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::J0_a_e_a_b_de},
    REWARDCOIN => {:type => ::Thrift::Types::I32, :name => 'rewardCoin'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::J0_a_e_a_b_de::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class CoinHistory
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PAYDATE = 1
  COINBALANCE = 2
  COIN = 3
  PRICE = 4
  TITLE = 5
  REFUND = 6
  PAYSEQ = 7
  CURRENCY = 8
  CURRENCYSIGN = 9
  DISPLAYPRICE = 10
  PAYLOAD = 11
  CHANNELID = 12

  FIELDS = {
    PAYDATE => {:type => ::Thrift::Types::I64, :name => 'payDate'},
    COINBALANCE => {:type => ::Thrift::Types::I32, :name => 'coinBalance'},
    COIN => {:type => ::Thrift::Types::I32, :name => 'coin'},
    PRICE => {:type => ::Thrift::Types::STRING, :name => 'price'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    REFUND => {:type => ::Thrift::Types::BOOL, :name => 'refund'},
    PAYSEQ => {:type => ::Thrift::Types::STRING, :name => 'paySeq'},
    CURRENCY => {:type => ::Thrift::Types::STRING, :name => 'currency'},
    CURRENCYSIGN => {:type => ::Thrift::Types::STRING, :name => 'currencySign'},
    DISPLAYPRICE => {:type => ::Thrift::Types::STRING, :name => 'displayPrice'},
    PAYLOAD => {:type => ::Thrift::Types::STRUCT, :name => 'payload', :class => ::CoinPayLoad},
    CHANNELID => {:type => ::Thrift::Types::STRING, :name => 'channelId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Coin
  include ::Thrift::Struct, ::Thrift::Struct_Union
  FREECOINBALANCE = 1
  PAYEDCOINBALANCE = 2
  TOTALCOINBALANCE = 3
  REWARDCOINBALANCE = 4

  FIELDS = {
    FREECOINBALANCE => {:type => ::Thrift::Types::I32, :name => 'freeCoinBalance'},
    PAYEDCOINBALANCE => {:type => ::Thrift::Types::I32, :name => 'payedCoinBalance'},
    TOTALCOINBALANCE => {:type => ::Thrift::Types::I32, :name => 'totalCoinBalance'},
    REWARDCOINBALANCE => {:type => ::Thrift::Types::I32, :name => 'rewardCoinBalance'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CoinHistoryResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  HISTORYS = 1
  BALANCE = 2
  HASNEXT = 3

  FIELDS = {
    HISTORYS => {:type => ::Thrift::Types::LIST, :name => 'historys', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CoinHistory}},
    BALANCE => {:type => ::Thrift::Types::STRUCT, :name => 'balance', :class => ::Coin},
    HASNEXT => {:type => ::Thrift::Types::BOOL, :name => 'hasNext'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaymentReservationResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ORDERID = 1
  CONFIRMURL = 2
  EXTRAS = 3

  FIELDS = {
    ORDERID => {:type => ::Thrift::Types::STRING, :name => 'orderId'},
    CONFIRMURL => {:type => ::Thrift::Types::STRING, :name => 'confirmUrl'},
    EXTRAS => {:type => ::Thrift::Types::MAP, :name => 'extras', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetCoinProductsResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ITEMS = 1

  FIELDS = {
    ITEMS => {:type => ::Thrift::Types::LIST, :name => 'items', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CoinProductItem}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GroupPreference
  include ::Thrift::Struct, ::Thrift::Struct_Union
  INVITATIONTICKET = 11
  FAVORITETIMESTAMP = 12

  FIELDS = {
    INVITATIONTICKET => {:type => ::Thrift::Types::STRING, :name => 'invitationTicket'},
    FAVORITETIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'favoriteTimestamp'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Group
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  CREATEDTIME = 2
  NAME = 10
  PICTURESTATUS = 11
  PREVENTEDJOINBYTICKET = 12
  GROUPPREFERENCE = 13
  MEMBERS = 20
  CREATOR = 21
  INVITEE = 22
  NOTIFICATIONDISABLED = 31
  PICTUREPATH = 32
  MEMBERMIDS = 40
  INVITEEMIDS = 41

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    CREATEDTIME => {:type => ::Thrift::Types::I64, :name => 'createdTime'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    PICTURESTATUS => {:type => ::Thrift::Types::STRING, :name => 'pictureStatus'},
    PREVENTEDJOINBYTICKET => {:type => ::Thrift::Types::BOOL, :name => 'preventedJoinByTicket'},
    GROUPPREFERENCE => {:type => ::Thrift::Types::STRUCT, :name => 'groupPreference', :class => ::GroupPreference},
    MEMBERS => {:type => ::Thrift::Types::LIST, :name => 'members', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Contact}},
    CREATOR => {:type => ::Thrift::Types::STRUCT, :name => 'creator', :class => ::Contact},
    INVITEE => {:type => ::Thrift::Types::LIST, :name => 'invitee', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Contact}},
    NOTIFICATIONDISABLED => {:type => ::Thrift::Types::BOOL, :name => 'notificationDisabled'},
    PICTUREPATH => {:type => ::Thrift::Types::STRING, :name => 'picturePath'},
    MEMBERMIDS => {:type => ::Thrift::Types::LIST, :name => 'memberMids', :element => {:type => ::Thrift::Types::STRING}},
    INVITEEMIDS => {:type => ::Thrift::Types::LIST, :name => 'inviteeMids', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class MessageBoxV2MessageId
  include ::Thrift::Struct, ::Thrift::Struct_Union
  DELIVEREDTIME = 1
  MESSAGEID = 2

  FIELDS = {
    DELIVEREDTIME => {:type => ::Thrift::Types::I64, :name => 'deliveredTime'},
    MESSAGEID => {:type => ::Thrift::Types::I64, :name => 'messageId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GeolocationAccuracy
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RADIUSMETERS = 1
  RADIUSCONFIDENCE = 2
  ALTITUDEACCURACY = 3
  VELOCITYACCURACY = 4
  BEARINGACCURACY = 5

  FIELDS = {
    RADIUSMETERS => {:type => ::Thrift::Types::DOUBLE, :name => 'radiusMeters'},
    RADIUSCONFIDENCE => {:type => ::Thrift::Types::DOUBLE, :name => 'radiusConfidence'},
    ALTITUDEACCURACY => {:type => ::Thrift::Types::DOUBLE, :name => 'altitudeAccuracy', :optional => true},
    VELOCITYACCURACY => {:type => ::Thrift::Types::DOUBLE, :name => 'velocityAccuracy', :optional => true},
    BEARINGACCURACY => {:type => ::Thrift::Types::DOUBLE, :name => 'bearingAccuracy', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Location
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TITLE = 1
  ADDRESS = 2
  LATITUDE = 3
  LONGITUDE = 4
  PHONE = 5
  CATEGORYID = 6
  PROVIDER = 7
  ACCURACY = 8
  ALTITUDEMETERS = 9

  FIELDS = {
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    ADDRESS => {:type => ::Thrift::Types::STRING, :name => 'address'},
    LATITUDE => {:type => ::Thrift::Types::DOUBLE, :name => 'latitude'},
    LONGITUDE => {:type => ::Thrift::Types::DOUBLE, :name => 'longitude'},
    PHONE => {:type => ::Thrift::Types::STRING, :name => 'phone'},
    CATEGORYID => {:type => ::Thrift::Types::STRING, :name => 'categoryId', :optional => true},
    PROVIDER => {:type => ::Thrift::Types::I32, :name => 'provider', :optional => true, :enum_class => ::J0_a_e_a_b_pe},
    ACCURACY => {:type => ::Thrift::Types::STRUCT, :name => 'accuracy', :class => ::GeolocationAccuracy, :optional => true},
    ALTITUDEMETERS => {:type => ::Thrift::Types::DOUBLE, :name => 'altitudeMeters', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @provider.nil? || ::J0_a_e_a_b_pe::VALID_VALUES.include?(@provider)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field provider!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class Message
  include ::Thrift::Struct, ::Thrift::Struct_Union
  FROM_ = 1
  TO = 2
  TOTYPE = 3
  ID = 4
  CREATEDTIME = 5
  DELIVEREDTIME = 6
  TEXT = 10
  LOCATION = 11
  HASCONTENT = 14
  CONTENTTYPE = 15
  CONTENTMETADATA = 18
  CONTENTPREVIEW = 17
  SESSIONID = 19
  CHUNKS = 20
  RELATEDMESSAGEID = 21
  MESSAGERELATIONTYPE = 22
  READCOUNT = 23
  RELATEDMESSAGESERVICECODE = 24
  APPEXTENSIONTYPE = 25

  FIELDS = {
    FROM_ => {:type => ::Thrift::Types::STRING, :name => 'from_'},
    TO => {:type => ::Thrift::Types::STRING, :name => 'to'},
    TOTYPE => {:type => ::Thrift::Types::I32, :name => 'toType', :enum_class => ::J0_a_e_a_b_zc},
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    CREATEDTIME => {:type => ::Thrift::Types::I64, :name => 'createdTime'},
    DELIVEREDTIME => {:type => ::Thrift::Types::I64, :name => 'deliveredTime'},
    TEXT => {:type => ::Thrift::Types::STRING, :name => 'text'},
    LOCATION => {:type => ::Thrift::Types::STRUCT, :name => 'location', :class => ::Location},
    HASCONTENT => {:type => ::Thrift::Types::BOOL, :name => 'hasContent'},
    CONTENTTYPE => {:type => ::Thrift::Types::I32, :name => 'contentType', :enum_class => ::J0_a_e_a_b_c9},
    CONTENTMETADATA => {:type => ::Thrift::Types::MAP, :name => 'contentMetadata', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    CONTENTPREVIEW => {:type => ::Thrift::Types::STRING, :name => 'contentPreview'},
    SESSIONID => {:type => ::Thrift::Types::BYTE, :name => 'sessionId'},
    CHUNKS => {:type => ::Thrift::Types::LIST, :name => 'chunks', :element => {:type => ::Thrift::Types::STRING}},
    RELATEDMESSAGEID => {:type => ::Thrift::Types::STRING, :name => 'relatedMessageId', :optional => true},
    MESSAGERELATIONTYPE => {:type => ::Thrift::Types::I32, :name => 'messageRelationType', :optional => true, :enum_class => ::J0_a_e_a_b_ed},
    READCOUNT => {:type => ::Thrift::Types::I32, :name => 'readCount', :optional => true},
    RELATEDMESSAGESERVICECODE => {:type => ::Thrift::Types::I32, :name => 'relatedMessageServiceCode', :optional => true, :enum_class => ::J0_a_e_a_b_zf},
    APPEXTENSIONTYPE => {:type => ::Thrift::Types::I32, :name => 'appExtensionType', :optional => true, :enum_class => ::J0_a_e_a_b_x}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @toType.nil? || ::J0_a_e_a_b_zc::VALID_VALUES.include?(@toType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field toType!')
    end
    unless @contentType.nil? || ::J0_a_e_a_b_c9::VALID_VALUES.include?(@contentType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field contentType!')
    end
    unless @messageRelationType.nil? || ::J0_a_e_a_b_ed::VALID_VALUES.include?(@messageRelationType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field messageRelationType!')
    end
    unless @relatedMessageServiceCode.nil? || ::J0_a_e_a_b_zf::VALID_VALUES.include?(@relatedMessageServiceCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field relatedMessageServiceCode!')
    end
    unless @appExtensionType.nil? || ::J0_a_e_a_b_x::VALID_VALUES.include?(@appExtensionType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field appExtensionType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ExtendedMessageBox
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  MIDTYPE = 2
  LASTDELIVEREDMESSAGEID = 4
  LASTSEENMESSAGEID = 5
  UNREADCOUNT = 6
  LASTMESSAGES = 7
  LASTREMOVEDMESSAGEID = 8
  LASTREMOVEDTIME = 9
  HIDDENATMESSAGEID = 10

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    MIDTYPE => {:type => ::Thrift::Types::I32, :name => 'midType', :enum_class => ::J0_a_e_a_b_zc},
    LASTDELIVEREDMESSAGEID => {:type => ::Thrift::Types::STRUCT, :name => 'lastDeliveredMessageId', :class => ::MessageBoxV2MessageId},
    LASTSEENMESSAGEID => {:type => ::Thrift::Types::I64, :name => 'lastSeenMessageId', :optional => true},
    UNREADCOUNT => {:type => ::Thrift::Types::I64, :name => 'unreadCount', :optional => true},
    LASTMESSAGES => {:type => ::Thrift::Types::LIST, :name => 'lastMessages', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Message}, :optional => true},
    LASTREMOVEDMESSAGEID => {:type => ::Thrift::Types::I64, :name => 'lastRemovedMessageId', :optional => true},
    LASTREMOVEDTIME => {:type => ::Thrift::Types::I64, :name => 'lastRemovedTime', :optional => true},
    HIDDENATMESSAGEID => {:type => ::Thrift::Types::I64, :name => 'hiddenAtMessageId', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @midType.nil? || ::J0_a_e_a_b_zc::VALID_VALUES.include?(@midType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field midType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class MessageBoxList
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MESSAGEBOXES = 1
  HASNEXT = 2

  FIELDS = {
    MESSAGEBOXES => {:type => ::Thrift::Types::LIST, :name => 'messageBoxes', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ExtendedMessageBox}},
    HASNEXT => {:type => ::Thrift::Types::BOOL, :name => 'hasNext'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Settings
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NOTIFICATIONENABLE = 10
  NOTIFICATIONMUTEEXPIRATION = 11
  NOTIFICATIONNEWMESSAGE = 12
  NOTIFICATIONGROUPINVITATION = 13
  NOTIFICATIONSHOWMESSAGE = 14
  NOTIFICATIONINCOMINGCALL = 15
  NOTIFICATIONSOUNDMESSAGE = 16
  NOTIFICATIONSOUNDGROUP = 17
  NOTIFICATIONDISABLEDWITHSUB = 18
  NOTIFICATIONPAYMENT = 19
  NOTIFICATIONMENTION = 68
  NOTIFICATIONTHUMBNAIL = 72
  NOTIFICATIONBADGETALKONLY = 93
  PRIVACYSYNCCONTACTS = 20
  PRIVACYSEARCHBYPHONENUMBER = 21
  PRIVACYSEARCHBYUSERID = 22
  PRIVACYSEARCHBYEMAIL = 23
  PRIVACYALLOWSECONDARYDEVICELOGIN = 24
  PRIVACYPROFILEIMAGEPOSTTOMYHOME = 25
  PRIVACYPROFILEMUSICPOSTTOMYHOME = 63
  PRIVACYALLOWPROFILEHISTORY = 85
  PRIVACYSTATUSMESSAGEHISTORY = 81
  PRIVACYRECEIVEMESSAGESFROMNOTFRIEND = 26
  PRIVACYAGREEUSELINECOINTOPAIDCALL = 27
  PRIVACYAGREEUSEPAIDCALL = 28
  PRIVACYALLOWFRIENDREQUEST = 29
  PRIVACYALLOWNEARBY = 65
  PRIVACYSHAREPERSONALINFOTOFRIENDS = 78
  PRIVACYAGERESULT = 88
  PRIVACYAGERESULTRECEIVED = 89
  PRIVACYALLOWFOLLOW = 91
  PRIVACYSHOWFOLLOWLIST = 92
  CONTACTMYTICKET = 30
  IDENTITYPROVIDER = 40
  IDENTITYIDENTIFIER = 41
  SNSACCOUNTS = 42
  PHONEREGISTRATION = 43
  EMAILCONFIRMATIONSTATUS = 44
  ACCOUNTMIGRATIONPINCODETYPE = 45
  ENFORCEDINPUTACCOUNTMIGRATIONPINCODE = 46
  SECURITYCENTERSETTINGSTYPE = 47
  ALLOWUNREGISTRATIONSECONDARYDEVICE = 48
  PWLESSPRIMARYCREDENTIALREGISTRATION = 49
  PREFERENCELOCALE = 50
  CUSTOMMODES = 60
  E2EEENABLE = 61
  HITOKOTOBACKUPREQUESTED = 62
  AGREEMENTNEARBYTIME = 66
  AGREEMENTSQUARETIME = 67
  BOTUSEAGREEMENTACCEPTEDAT = 69
  AGREEMENTSHAKEFUNCTION = 70
  AGREEMENTMOBILECONTACTNAME = 71
  AGREEMENTSOUNDTOTEXT = 73
  PRIVACYPOLICYVERSION = 74
  AGREEMENTADBYWEBACCESS = 75
  AGREEMENTPHONENUMBERMATCHING = 76
  AGREEMENTCOMMUNICATIONINFO = 77
  AGREEMENTTHINGSWIRELESSCOMMUNICATION = 79
  AGREEMENTGDPR = 80
  AGREEMENTPROVIDELOCATION = 82
  AGREEMENTBEACON = 83
  AGREEMENTCONTENTSSUGGEST = 86
  AGREEMENTCONTENTSSUGGESTDATACOLLECTION = 87
  AGREEMENTOCRIMAGECOLLECTION = 90
  AGREEMENTICNA = 94

  FIELDS = {
    NOTIFICATIONENABLE => {:type => ::Thrift::Types::BOOL, :name => 'notificationEnable'},
    NOTIFICATIONMUTEEXPIRATION => {:type => ::Thrift::Types::I32, :name => 'notificationMuteExpiration', :enum_class => ::J0_a_e_a_b_xe},
    NOTIFICATIONNEWMESSAGE => {:type => ::Thrift::Types::I32, :name => 'notificationNewMessage', :enum_class => ::J0_a_e_a_b_gt},
    NOTIFICATIONGROUPINVITATION => {:type => ::Thrift::Types::BOOL, :name => 'notificationGroupInvitation'},
    NOTIFICATIONSHOWMESSAGE => {:type => ::Thrift::Types::BOOL, :name => 'notificationShowMessage'},
    NOTIFICATIONINCOMINGCALL => {:type => ::Thrift::Types::BOOL, :name => 'notificationIncomingCall'},
    NOTIFICATIONSOUNDMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'notificationSoundMessage'},
    NOTIFICATIONSOUNDGROUP => {:type => ::Thrift::Types::I32, :name => 'notificationSoundGroup', :enum_class => ::J0_a_e_a_b_rc},
    NOTIFICATIONDISABLEDWITHSUB => {:type => ::Thrift::Types::STRING, :name => 'notificationDisabledWithSub'},
    NOTIFICATIONPAYMENT => {:type => ::Thrift::Types::MAP, :name => 'notificationPayment', :key => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_ig}, :value => {:type => ::Thrift::Types::STRING}},
    NOTIFICATIONMENTION => {:type => ::Thrift::Types::BOOL, :name => 'notificationMention'},
    NOTIFICATIONTHUMBNAIL => {:type => ::Thrift::Types::BOOL, :name => 'notificationThumbnail'},
    NOTIFICATIONBADGETALKONLY => {:type => ::Thrift::Types::I32, :name => 'notificationBadgeTalkOnly', :enum_class => ::J0_a_e_a_b_h},
    PRIVACYSYNCCONTACTS => {:type => ::Thrift::Types::BOOL, :name => 'privacySyncContacts'},
    PRIVACYSEARCHBYPHONENUMBER => {:type => ::Thrift::Types::I32, :name => 'privacySearchByPhoneNumber', :enum_class => ::J0_a_e_a_b_xf},
    PRIVACYSEARCHBYUSERID => {:type => ::Thrift::Types::BOOL, :name => 'privacySearchByUserid'},
    PRIVACYSEARCHBYEMAIL => {:type => ::Thrift::Types::BOOL, :name => 'privacySearchByEmail'},
    PRIVACYALLOWSECONDARYDEVICELOGIN => {:type => ::Thrift::Types::STRING, :name => 'privacyAllowSecondaryDeviceLogin'},
    PRIVACYPROFILEIMAGEPOSTTOMYHOME => {:type => ::Thrift::Types::BOOL, :name => 'privacyProfileImagePostToMyhome'},
    PRIVACYPROFILEMUSICPOSTTOMYHOME => {:type => ::Thrift::Types::I64, :name => 'privacyProfileMusicPostToMyhome'},
    PRIVACYALLOWPROFILEHISTORY => {:type => ::Thrift::Types::MAP, :name => 'privacyAllowProfileHistory', :key => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_i9}, :value => {:type => ::Thrift::Types::STRING}},
    PRIVACYSTATUSMESSAGEHISTORY => {:type => ::Thrift::Types::BOOL, :name => 'privacyStatusMessageHistory'},
    PRIVACYRECEIVEMESSAGESFROMNOTFRIEND => {:type => ::Thrift::Types::BOOL, :name => 'privacyReceiveMessagesFromNotFriend'},
    PRIVACYAGREEUSELINECOINTOPAIDCALL => {:type => ::Thrift::Types::BOOL, :name => 'privacyAgreeUseLineCoinToPaidCall'},
    PRIVACYAGREEUSEPAIDCALL => {:type => ::Thrift::Types::BOOL, :name => 'privacyAgreeUsePaidCall'},
    PRIVACYALLOWFRIENDREQUEST => {:type => ::Thrift::Types::BOOL, :name => 'privacyAllowFriendRequest'},
    PRIVACYALLOWNEARBY => {:type => ::Thrift::Types::I64, :name => 'privacyAllowNearby'},
    PRIVACYSHAREPERSONALINFOTOFRIENDS => {:type => ::Thrift::Types::BOOL, :name => 'privacySharePersonalInfoToFriends'},
    PRIVACYAGERESULT => {:type => ::Thrift::Types::I64, :name => 'privacyAgeResult'},
    PRIVACYAGERESULTRECEIVED => {:type => ::Thrift::Types::STRING, :name => 'privacyAgeResultReceived'},
    PRIVACYALLOWFOLLOW => {:type => ::Thrift::Types::I64, :name => 'privacyAllowFollow'},
    PRIVACYSHOWFOLLOWLIST => {:type => ::Thrift::Types::STRING, :name => 'privacyShowFollowList'},
    CONTACTMYTICKET => {:type => ::Thrift::Types::I64, :name => 'contactMyTicket'},
    IDENTITYPROVIDER => {:type => ::Thrift::Types::BOOL, :name => 'identityProvider'},
    IDENTITYIDENTIFIER => {:type => ::Thrift::Types::I64, :name => 'identityIdentifier'},
    SNSACCOUNTS => {:type => ::Thrift::Types::BOOL, :name => 'snsAccounts'},
    PHONEREGISTRATION => {:type => ::Thrift::Types::I64, :name => 'phoneRegistration'},
    EMAILCONFIRMATIONSTATUS => {:type => ::Thrift::Types::BOOL, :name => 'emailConfirmationStatus'},
    ACCOUNTMIGRATIONPINCODETYPE => {:type => ::Thrift::Types::STRING, :name => 'accountMigrationPincodeType'},
    ENFORCEDINPUTACCOUNTMIGRATIONPINCODE => {:type => ::Thrift::Types::BOOL, :name => 'enforcedInputAccountMigrationPincode'},
    SECURITYCENTERSETTINGSTYPE => {:type => ::Thrift::Types::I64, :name => 'securityCenterSettingsType'},
    ALLOWUNREGISTRATIONSECONDARYDEVICE => {:type => ::Thrift::Types::BOOL, :name => 'allowUnregistrationSecondaryDevice'},
    PWLESSPRIMARYCREDENTIALREGISTRATION => {:type => ::Thrift::Types::I64, :name => 'pwlessPrimaryCredentialRegistration'},
    PREFERENCELOCALE => {:type => ::Thrift::Types::BOOL, :name => 'preferenceLocale'},
    CUSTOMMODES => {:type => ::Thrift::Types::I64, :name => 'customModes'},
    E2EEENABLE => {:type => ::Thrift::Types::BOOL, :name => 'e2eeEnable'},
    HITOKOTOBACKUPREQUESTED => {:type => ::Thrift::Types::I64, :name => 'hitokotoBackupRequested'},
    AGREEMENTNEARBYTIME => {:type => ::Thrift::Types::BOOL, :name => 'agreementNearbyTime'},
    AGREEMENTSQUARETIME => {:type => ::Thrift::Types::I64, :name => 'agreementSquareTime'},
    BOTUSEAGREEMENTACCEPTEDAT => {:type => ::Thrift::Types::BOOL, :name => 'botUseAgreementAcceptedAt'},
    AGREEMENTSHAKEFUNCTION => {:type => ::Thrift::Types::I64, :name => 'agreementShakeFunction'},
    AGREEMENTMOBILECONTACTNAME => {:type => ::Thrift::Types::BOOL, :name => 'agreementMobileContactName'},
    AGREEMENTSOUNDTOTEXT => {:type => ::Thrift::Types::I64, :name => 'agreementSoundToText'},
    PRIVACYPOLICYVERSION => {:type => ::Thrift::Types::BOOL, :name => 'privacyPolicyVersion'},
    AGREEMENTADBYWEBACCESS => {:type => ::Thrift::Types::I64, :name => 'agreementAdByWebAccess'},
    AGREEMENTPHONENUMBERMATCHING => {:type => ::Thrift::Types::BOOL, :name => 'agreementPhoneNumberMatching'},
    AGREEMENTCOMMUNICATIONINFO => {:type => ::Thrift::Types::I64, :name => 'agreementCommunicationInfo'},
    AGREEMENTTHINGSWIRELESSCOMMUNICATION => {:type => ::Thrift::Types::I32, :name => 'agreementThingsWirelessCommunication', :enum_class => ::J0_a_e_a_b_bf},
    AGREEMENTGDPR => {:type => ::Thrift::Types::I64, :name => 'agreementGdpr'},
    AGREEMENTPROVIDELOCATION => {:type => ::Thrift::Types::I32, :name => 'agreementProvideLocation', :enum_class => ::J0_a_e_a_b_og},
    AGREEMENTBEACON => {:type => ::Thrift::Types::I64, :name => 'agreementBeacon'},
    AGREEMENTCONTENTSSUGGEST => {:type => ::Thrift::Types::BOOL, :name => 'agreementContentsSuggest'},
    AGREEMENTCONTENTSSUGGESTDATACOLLECTION => {:type => ::Thrift::Types::I64, :name => 'agreementContentsSuggestDataCollection'},
    AGREEMENTOCRIMAGECOLLECTION => {:type => ::Thrift::Types::BOOL, :name => 'agreementOcrImageCollection'},
    AGREEMENTICNA => {:type => ::Thrift::Types::BOOL, :name => 'agreementIcna'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @notificationMuteExpiration.nil? || ::J0_a_e_a_b_xe::VALID_VALUES.include?(@notificationMuteExpiration)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field notificationMuteExpiration!')
    end
    unless @notificationNewMessage.nil? || ::J0_a_e_a_b_gt::VALID_VALUES.include?(@notificationNewMessage)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field notificationNewMessage!')
    end
    unless @notificationSoundGroup.nil? || ::J0_a_e_a_b_rc::VALID_VALUES.include?(@notificationSoundGroup)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field notificationSoundGroup!')
    end
    unless @notificationBadgeTalkOnly.nil? || ::J0_a_e_a_b_h::VALID_VALUES.include?(@notificationBadgeTalkOnly)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field notificationBadgeTalkOnly!')
    end
    unless @privacySearchByPhoneNumber.nil? || ::J0_a_e_a_b_xf::VALID_VALUES.include?(@privacySearchByPhoneNumber)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field privacySearchByPhoneNumber!')
    end
    unless @agreementThingsWirelessCommunication.nil? || ::J0_a_e_a_b_bf::VALID_VALUES.include?(@agreementThingsWirelessCommunication)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field agreementThingsWirelessCommunication!')
    end
    unless @agreementProvideLocation.nil? || ::J0_a_e_a_b_og::VALID_VALUES.include?(@agreementProvideLocation)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field agreementProvideLocation!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class IdentityCredentialResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  METADATA = 1
  RESPONSETYPE = 2
  CONFIRMATIONVERIFIER = 3
  TIMEOUTINSECONDS = 4

  FIELDS = {
    METADATA => {:type => ::Thrift::Types::MAP, :name => 'metaData', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    RESPONSETYPE => {:type => ::Thrift::Types::I32, :name => 'responseType', :enum_class => ::J0_a_e_a_b_qc},
    CONFIRMATIONVERIFIER => {:type => ::Thrift::Types::STRING, :name => 'confirmationVerifier'},
    TIMEOUTINSECONDS => {:type => ::Thrift::Types::I64, :name => 'timeoutInSeconds'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @responseType.nil? || ::J0_a_e_a_b_qc::VALID_VALUES.include?(@responseType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field responseType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetGroupCallUrlInfoRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  URLID = 1

  FIELDS = {
    URLID => {:type => ::Thrift::Types::STRING, :name => 'urlId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetCoinHistoryRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  APPSTORECODE = 1
  COUNTRY = 2
  LANGUAGE = 3
  SEARCHENDDATE = 4
  OFFSET = 5
  LIMIT = 6

  FIELDS = {
    APPSTORECODE => {:type => ::Thrift::Types::I32, :name => 'appStoreCode', :enum_class => ::J0_a_e_a_b_ge},
    COUNTRY => {:type => ::Thrift::Types::STRING, :name => 'country'},
    LANGUAGE => {:type => ::Thrift::Types::STRING, :name => 'language'},
    SEARCHENDDATE => {:type => ::Thrift::Types::STRING, :name => 'searchEndDate'},
    OFFSET => {:type => ::Thrift::Types::I32, :name => 'offset', :optional => true},
    LIMIT => {:type => ::Thrift::Types::I32, :name => 'limit', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @appStoreCode.nil? || ::J0_a_e_a_b_ge::VALID_VALUES.include?(@appStoreCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field appStoreCode!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ChatEffectMetaContent
  include ::Thrift::Struct, ::Thrift::Struct_Union
  URL = 1
  CHECKSUM = 2

  FIELDS = {
    URL => {:type => ::Thrift::Types::STRING, :name => 'url'},
    CHECKSUM => {:type => ::Thrift::Types::STRING, :name => 'checksum'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ChatEffectMeta
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CONTENTID = 1
  CATEGORY = 2
  NAME = 3
  DEFAULTCONTENT = 4
  OPTIONALCONTENTS = 5
  KEYWORDS = 6
  BEGINTIMEMILLIS = 7
  ENDTIMEMILLIS = 8
  CREATEDTIMEMILLIS = 9
  UPDATEDTIMEMILLIS = 10

  FIELDS = {
    CONTENTID => {:type => ::Thrift::Types::I64, :name => 'contentId'},
    CATEGORY => {:type => ::Thrift::Types::I32, :name => 'category', :enum_class => ::J0_a_e_a_b_h7},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    DEFAULTCONTENT => {:type => ::Thrift::Types::STRUCT, :name => 'defaultContent', :class => ::ChatEffectMetaContent},
    OPTIONALCONTENTS => {:type => ::Thrift::Types::MAP, :name => 'optionalContents', :key => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_j7}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::ChatEffectMetaContent}},
    KEYWORDS => {:type => ::Thrift::Types::SET, :name => 'keywords', :element => {:type => ::Thrift::Types::STRING}},
    BEGINTIMEMILLIS => {:type => ::Thrift::Types::I64, :name => 'beginTimeMillis'},
    ENDTIMEMILLIS => {:type => ::Thrift::Types::I64, :name => 'endTimeMillis'},
    CREATEDTIMEMILLIS => {:type => ::Thrift::Types::I64, :name => 'createdTimeMillis'},
    UPDATEDTIMEMILLIS => {:type => ::Thrift::Types::I64, :name => 'updatedTimeMillis'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @category.nil? || ::J0_a_e_a_b_h7::VALID_VALUES.include?(@category)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field category!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class E2EEPublicKey
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VERSION = 1
  KEYID = 2
  KEYDATA = 4
  CREATEDTIME = 5

  FIELDS = {
    VERSION => {:type => ::Thrift::Types::I32, :name => 'version'},
    KEYID => {:type => ::Thrift::Types::I32, :name => 'keyId'},
    KEYDATA => {:type => ::Thrift::Types::STRING, :name => 'keyData'},
    CREATEDTIME => {:type => ::Thrift::Types::I64, :name => 'createdTime'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetGroupCallUrlInfoResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TITLE = 1
  CREATEDTIMEMILLIS = 2

  FIELDS = {
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    CREATEDTIMEMILLIS => {:type => ::Thrift::Types::I64, :name => 'createdTimeMillis'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaidCallUserRate
  include ::Thrift::Struct, ::Thrift::Struct_Union
  COUNTRYCODE = 1
  RATE = 2
  RATEDIVISION = 3
  RATENAME = 4

  FIELDS = {
    COUNTRYCODE => {:type => ::Thrift::Types::STRING, :name => 'countryCode'},
    RATE => {:type => ::Thrift::Types::I32, :name => 'rate'},
    RATEDIVISION => {:type => ::Thrift::Types::STRING, :name => 'rateDivision'},
    RATENAME => {:type => ::Thrift::Types::STRING, :name => 'rateName'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ChannelNotificationSetting
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHANNELID = 1
  NAME = 2
  NOTIFICATIONRECEIVABLE = 3
  MESSAGERECEIVABLE = 4
  SHOWDEFAULT = 5

  FIELDS = {
    CHANNELID => {:type => ::Thrift::Types::STRING, :name => 'channelId'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    NOTIFICATIONRECEIVABLE => {:type => ::Thrift::Types::BOOL, :name => 'notificationReceivable'},
    MESSAGERECEIVABLE => {:type => ::Thrift::Types::BOOL, :name => 'messageReceivable'},
    SHOWDEFAULT => {:type => ::Thrift::Types::BOOL, :name => 'showDefault'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetCoinHistoryResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  HISTORIES = 1
  BALANCE = 2
  OFFSET = 3
  HASNEXT = 4

  FIELDS = {
    HISTORIES => {:type => ::Thrift::Types::LIST, :name => 'histories', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CoinHistory}},
    BALANCE => {:type => ::Thrift::Types::STRUCT, :name => 'balance', :class => ::Coin},
    OFFSET => {:type => ::Thrift::Types::I32, :name => 'offset'},
    HASNEXT => {:type => ::Thrift::Types::BOOL, :name => 'hasNext'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Room
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MID = 1
  CREATEDTIME = 2
  CONTACTS = 10
  NOTIFICATIONDISABLED = 31
  MEMBERMIDS = 40

  FIELDS = {
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'},
    CREATEDTIME => {:type => ::Thrift::Types::I64, :name => 'createdTime'},
    CONTACTS => {:type => ::Thrift::Types::LIST, :name => 'contacts', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Contact}},
    NOTIFICATIONDISABLED => {:type => ::Thrift::Types::BOOL, :name => 'notificationDisabled'},
    MEMBERMIDS => {:type => ::Thrift::Types::LIST, :name => 'memberMids', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class TMessageReadRangeEntry
  include ::Thrift::Struct, ::Thrift::Struct_Union
  STARTMESSAGEID = 1
  ENDMESSAGEID = 2
  STARTTIME = 3
  ENDTIME = 4

  FIELDS = {
    STARTMESSAGEID => {:type => ::Thrift::Types::I64, :name => 'startMessageId'},
    ENDMESSAGEID => {:type => ::Thrift::Types::I64, :name => 'endMessageId'},
    STARTTIME => {:type => ::Thrift::Types::I64, :name => 'startTime'},
    ENDTIME => {:type => ::Thrift::Types::I64, :name => 'endTime'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class TMessageReadRange
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHATID = 1
  RANGES = 2

  FIELDS = {
    CHATID => {:type => ::Thrift::Types::STRING, :name => 'chatId'},
    RANGES => {:type => ::Thrift::Types::MAP, :name => 'ranges', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::TMessageReadRangeEntry}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetGroupCallUrlsRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class UpdateGroupCallUrlAttribute
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TITLE = 1

  FIELDS = {
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class UpdateGroupCallUrlRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  URLID = 1
  TARGETATTRIBUTE = 2

  FIELDS = {
    URLID => {:type => ::Thrift::Types::STRING, :name => 'urlId'},
    TARGETATTRIBUTE => {:type => ::Thrift::Types::STRUCT, :name => 'targetAttribute', :class => ::UpdateGroupCallUrlAttribute}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class DeviceInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  APPLICATIONTYPE = 20
  DEVICENAME = 1
  SYSTEMNAME = 2
  SYSTEMVERSION = 3
  MODEL = 4
  CARRIERCODE = 10
  CARRIERNAME = 11
  WEBVIEWVERSION = 5

  FIELDS = {
    APPLICATIONTYPE => {:type => ::Thrift::Types::I32, :name => 'applicationType', :enum_class => ::J0_a_e_a_b_y},
    DEVICENAME => {:type => ::Thrift::Types::STRING, :name => 'deviceName'},
    SYSTEMNAME => {:type => ::Thrift::Types::STRING, :name => 'systemName'},
    SYSTEMVERSION => {:type => ::Thrift::Types::STRING, :name => 'systemVersion'},
    MODEL => {:type => ::Thrift::Types::STRING, :name => 'model'},
    CARRIERCODE => {:type => ::Thrift::Types::I32, :name => 'carrierCode', :enum_class => ::J0_a_e_a_b_k5},
    CARRIERNAME => {:type => ::Thrift::Types::STRING, :name => 'carrierName'},
    WEBVIEWVERSION => {:type => ::Thrift::Types::STRING, :name => 'webViewVersion', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @applicationType.nil? || ::J0_a_e_a_b_y::VALID_VALUES.include?(@applicationType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field applicationType!')
    end
    unless @carrierCode.nil? || ::J0_a_e_a_b_k5::VALID_VALUES.include?(@carrierCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field carrierCode!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ProfileContent
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VALUE = 1
  META = 2

  FIELDS = {
    VALUE => {:type => ::Thrift::Types::STRING, :name => 'value'},
    META => {:type => ::Thrift::Types::MAP, :name => 'meta', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class UpdateProfileAttributesRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PROFILEATTRIBUTES = 1

  FIELDS = {
    PROFILEATTRIBUTES => {:type => ::Thrift::Types::MAP, :name => 'profileAttributes', :key => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_ze}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::ProfileContent}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GroupCallUrl
  include ::Thrift::Struct, ::Thrift::Struct_Union
  URLID = 1
  TITLE = 2
  CREATEDTIMEMILLIS = 3

  FIELDS = {
    URLID => {:type => ::Thrift::Types::STRING, :name => 'urlId'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    CREATEDTIMEMILLIS => {:type => ::Thrift::Types::I64, :name => 'createdTimeMillis'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetGroupCallUrlsResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  URLS = 1

  FIELDS = {
    URLS => {:type => ::Thrift::Types::LIST, :name => 'urls', :element => {:type => ::Thrift::Types::STRUCT, :class => ::GroupCallUrl}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class UpdateGroupCallUrlResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ChannelSettings
  include ::Thrift::Struct, ::Thrift::Struct_Union
  UNAPPROVEDMESSAGERECEIVABLE = 1

  FIELDS = {
    UNAPPROVEDMESSAGERECEIVABLE => {:type => ::Thrift::Types::BOOL, :name => 'unapprovedMessageReceivable'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SnsProfile
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SNSUSERID = 1
  SNSUSERNAME = 2
  EMAIL = 3
  THUMBNAILURL = 4

  FIELDS = {
    SNSUSERID => {:type => ::Thrift::Types::STRING, :name => 'snsUserId'},
    SNSUSERNAME => {:type => ::Thrift::Types::STRING, :name => 'snsUserName'},
    EMAIL => {:type => ::Thrift::Types::STRING, :name => 'email'},
    THUMBNAILURL => {:type => ::Thrift::Types::STRING, :name => 'thumbnailUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetEncryptedIdentityV3Response
  include ::Thrift::Struct, ::Thrift::Struct_Union
  WRAPPEDNONCE = 1
  KDFPARAMETER1 = 2
  KDFPARAMETER2 = 3

  FIELDS = {
    WRAPPEDNONCE => {:type => ::Thrift::Types::STRING, :name => 'wrappedNonce'},
    KDFPARAMETER1 => {:type => ::Thrift::Types::STRING, :name => 'kdfParameter1'},
    KDFPARAMETER2 => {:type => ::Thrift::Types::STRING, :name => 'kdfParameter2'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PendingAgreementsResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PENDINGAGREEMENTS = 1

  FIELDS = {
    PENDINGAGREEMENTS => {:type => ::Thrift::Types::LIST, :name => 'pendingAgreements', :element => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_cg}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Geolocation
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LONGITUDE = 1
  LATITUDE = 2
  ACCURACY = 3
  ALTITUDEMETERS = 4
  VELOCITYMETERSPERSECOND = 5
  BEARINGDEGREES = 6

  FIELDS = {
    LONGITUDE => {:type => ::Thrift::Types::DOUBLE, :name => 'longitude'},
    LATITUDE => {:type => ::Thrift::Types::DOUBLE, :name => 'latitude'},
    ACCURACY => {:type => ::Thrift::Types::STRUCT, :name => 'accuracy', :class => ::GeolocationAccuracy, :optional => true},
    ALTITUDEMETERS => {:type => ::Thrift::Types::DOUBLE, :name => 'altitudeMeters', :optional => true},
    VELOCITYMETERSPERSECOND => {:type => ::Thrift::Types::DOUBLE, :name => 'velocityMetersPerSecond', :optional => true},
    BEARINGDEGREES => {:type => ::Thrift::Types::DOUBLE, :name => 'bearingDegrees', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class FollowMid
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MID = 1
  EMID = 2

  FIELDS = {
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'},
    EMID => {:type => ::Thrift::Types::STRING, :name => 'eMid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RemoveFollowerRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  FOLLOWMID = 1

  FIELDS = {
    FOLLOWMID => {:type => ::Thrift::Types::STRUCT, :name => 'followMid', :class => ::FollowMid}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetTotalCoinBalanceRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  APPSTORECODE = 1

  FIELDS = {
    APPSTORECODE => {:type => ::Thrift::Types::I32, :name => 'appStoreCode', :enum_class => ::J0_a_e_a_b_ge}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @appStoreCode.nil? || ::J0_a_e_a_b_ge::VALID_VALUES.include?(@appStoreCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field appStoreCode!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetPreviousMessagesV2Request
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MESSAGEBOXID = 1
  ENDMESSAGEID = 2
  MESSAGESCOUNT = 3
  WITHREADCOUNT = 4
  RECEIVEDONLY = 5

  FIELDS = {
    MESSAGEBOXID => {:type => ::Thrift::Types::STRING, :name => 'messageBoxId'},
    ENDMESSAGEID => {:type => ::Thrift::Types::STRUCT, :name => 'endMessageId', :class => ::MessageBoxV2MessageId},
    MESSAGESCOUNT => {:type => ::Thrift::Types::I32, :name => 'messagesCount'},
    WITHREADCOUNT => {:type => ::Thrift::Types::BOOL, :name => 'withReadCount', :optional => true},
    RECEIVEDONLY => {:type => ::Thrift::Types::BOOL, :name => 'receivedOnly', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ClientNetworkStatus
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NETWORKTYPE = 1

  FIELDS = {
    NETWORKTYPE => {:type => ::Thrift::Types::I32, :name => 'networkType', :enum_class => ::J0_a_e_a_b_s7}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @networkType.nil? || ::J0_a_e_a_b_s7::VALID_VALUES.include?(@networkType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field networkType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GroupCall
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ONLINE = 1
  CHATMID = 2
  HOSTMID = 3
  MEMBERMIDS = 4
  STARTED = 5
  MEDIATYPE = 6
  PROTOCOL = 7

  FIELDS = {
    ONLINE => {:type => ::Thrift::Types::BOOL, :name => 'online'},
    CHATMID => {:type => ::Thrift::Types::STRING, :name => 'chatMid'},
    HOSTMID => {:type => ::Thrift::Types::STRING, :name => 'hostMid'},
    MEMBERMIDS => {:type => ::Thrift::Types::LIST, :name => 'memberMids', :element => {:type => ::Thrift::Types::STRING}},
    STARTED => {:type => ::Thrift::Types::I64, :name => 'started'},
    MEDIATYPE => {:type => ::Thrift::Types::I32, :name => 'mediaType', :enum_class => ::J0_a_e_a_b_gc},
    PROTOCOL => {:type => ::Thrift::Types::I32, :name => 'protocol', :enum_class => ::J0_a_e_a_b_hc}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @mediaType.nil? || ::J0_a_e_a_b_gc::VALID_VALUES.include?(@mediaType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field mediaType!')
    end
    unless @protocol.nil? || ::J0_a_e_a_b_hc::VALID_VALUES.include?(@protocol)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field protocol!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ChannelDomains
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHANNELDOMAINS = 1
  REVISION = 2

  FIELDS = {
    CHANNELDOMAINS => {:type => ::Thrift::Types::LIST, :name => 'channelDomains', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ChannelDomain}},
    REVISION => {:type => ::Thrift::Types::I64, :name => 'revision'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetTotalCoinBalanceResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TOTALBALANCE = 1
  PAIDCOINBALANCE = 2
  FREECOINBALANCE = 3
  REWARDCOINBALANCE = 4
  EXPECTEDAUTOEXCHANGEDCOINBALANCE = 5

  FIELDS = {
    TOTALBALANCE => {:type => ::Thrift::Types::STRING, :name => 'totalBalance'},
    PAIDCOINBALANCE => {:type => ::Thrift::Types::STRING, :name => 'paidCoinBalance'},
    FREECOINBALANCE => {:type => ::Thrift::Types::STRING, :name => 'freeCoinBalance'},
    REWARDCOINBALANCE => {:type => ::Thrift::Types::STRING, :name => 'rewardCoinBalance'},
    EXPECTEDAUTOEXCHANGEDCOINBALANCE => {:type => ::Thrift::Types::STRING, :name => 'expectedAutoExchangedCoinBalance'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PlaceSearchInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NAME = 1
  ADDRESS = 2
  LATITUDE = 3
  LONGITUDE = 4
  CATEGORYID = 5

  FIELDS = {
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
    ADDRESS => {:type => ::Thrift::Types::STRING, :name => 'address'},
    LATITUDE => {:type => ::Thrift::Types::DOUBLE, :name => 'latitude'},
    LONGITUDE => {:type => ::Thrift::Types::DOUBLE, :name => 'longitude'},
    CATEGORYID => {:type => ::Thrift::Types::STRING, :name => 'categoryId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class DeleteOtherFromChatRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REQSEQ = 1
  CHATMID = 2
  TARGETUSERMIDS = 3

  FIELDS = {
    REQSEQ => {:type => ::Thrift::Types::I32, :name => 'reqSeq'},
    CHATMID => {:type => ::Thrift::Types::STRING, :name => 'chatMid'},
    TARGETUSERMIDS => {:type => ::Thrift::Types::SET, :name => 'targetUserMids', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ExtendedProfileBirthday
  include ::Thrift::Struct, ::Thrift::Struct_Union
  YEAR = 1
  YEARPRIVACYLEVELTYPE = 2
  YEARENABLED = 3
  DAY = 5
  DAYPRIVACYLEVELTYPE = 6
  DAYENABLED = 7

  FIELDS = {
    YEAR => {:type => ::Thrift::Types::STRING, :name => 'year'},
    YEARPRIVACYLEVELTYPE => {:type => ::Thrift::Types::I32, :name => 'yearPrivacyLevelType', :enum_class => ::J0_a_e_a_b_we},
    YEARENABLED => {:type => ::Thrift::Types::BOOL, :name => 'yearEnabled'},
    DAY => {:type => ::Thrift::Types::STRING, :name => 'day'},
    DAYPRIVACYLEVELTYPE => {:type => ::Thrift::Types::I32, :name => 'dayPrivacyLevelType', :enum_class => ::J0_a_e_a_b_we},
    DAYENABLED => {:type => ::Thrift::Types::BOOL, :name => 'dayEnabled'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @yearPrivacyLevelType.nil? || ::J0_a_e_a_b_we::VALID_VALUES.include?(@yearPrivacyLevelType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field yearPrivacyLevelType!')
    end
    unless @dayPrivacyLevelType.nil? || ::J0_a_e_a_b_we::VALID_VALUES.include?(@dayPrivacyLevelType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field dayPrivacyLevelType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ExtendedProfile
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BIRTHDAY = 1

  FIELDS = {
    BIRTHDAY => {:type => ::Thrift::Types::STRUCT, :name => 'birthday', :class => ::ExtendedProfileBirthday}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class UnfollowRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  FOLLOWMID = 1

  FIELDS = {
    FOLLOWMID => {:type => ::Thrift::Types::STRUCT, :name => 'followMid', :class => ::FollowMid}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class WebLoginRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  HOOKEDFULLURL = 1
  SESSIONSTRING = 2
  FROMIAB = 3
  SOURCEAPPLICATION = 4

  FIELDS = {
    HOOKEDFULLURL => {:type => ::Thrift::Types::STRING, :name => 'hookedFullUrl'},
    SESSIONSTRING => {:type => ::Thrift::Types::STRING, :name => 'sessionString'},
    FROMIAB => {:type => ::Thrift::Types::BOOL, :name => 'fromIAB'},
    SOURCEAPPLICATION => {:type => ::Thrift::Types::STRING, :name => 'sourceApplication', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class DeleteOtherFromChatResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SnsIdUserStatus
  include ::Thrift::Struct, ::Thrift::Struct_Union
  USEREXISTING = 1
  PHONENUMBERREGISTERED = 2
  SAMEDEVICE = 3
  ACCOUNTMIGRATIONCHECKTYPE = 4

  FIELDS = {
    USEREXISTING => {:type => ::Thrift::Types::BOOL, :name => 'userExisting'},
    PHONENUMBERREGISTERED => {:type => ::Thrift::Types::BOOL, :name => 'phoneNumberRegistered'},
    SAMEDEVICE => {:type => ::Thrift::Types::BOOL, :name => 'sameDevice'},
    ACCOUNTMIGRATIONCHECKTYPE => {:type => ::Thrift::Types::I32, :name => 'accountMigrationCheckType', :enum_class => ::J0_a_e_a_b_g}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @accountMigrationCheckType.nil? || ::J0_a_e_a_b_g::VALID_VALUES.include?(@accountMigrationCheckType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field accountMigrationCheckType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ChatRoomBGM
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CREATORMID = 1
  CREATEDTIME = 2
  CHATROOMBGMINFO = 3

  FIELDS = {
    CREATORMID => {:type => ::Thrift::Types::STRING, :name => 'creatorMid'},
    CREATEDTIME => {:type => ::Thrift::Types::I64, :name => 'createdTime'},
    CHATROOMBGMINFO => {:type => ::Thrift::Types::STRING, :name => 'chatRoomBGMInfo'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetFollowersRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  FOLLOWMID = 1
  CURSOR = 2

  FIELDS = {
    FOLLOWMID => {:type => ::Thrift::Types::STRUCT, :name => 'followMid', :class => ::FollowMid},
    CURSOR => {:type => ::Thrift::Types::STRING, :name => 'cursor', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AuthKeyExchangeRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHKEYVERSION = 1
  PUBLICKEY = 2
  NONCE = 3

  FIELDS = {
    AUTHKEYVERSION => {:type => ::Thrift::Types::I32, :name => 'authKeyVersion', :enum_class => ::J0_a_e_a_b_d0},
    PUBLICKEY => {:type => ::Thrift::Types::STRING, :name => 'publicKey'},
    NONCE => {:type => ::Thrift::Types::STRING, :name => 'nonce'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @authKeyVersion.nil? || ::J0_a_e_a_b_d0::VALID_VALUES.include?(@authKeyVersion)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field authKeyVersion!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaidCallAdResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ADREMAINS = 1

  FIELDS = {
    ADREMAINS => {:type => ::Thrift::Types::I32, :name => 'adRemains'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class WebLoginResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RETURNURL = 1
  OPTIONALRETURNURL = 2
  REDIRECTCONFIRMATIONPAGEURL = 3

  FIELDS = {
    RETURNURL => {:type => ::Thrift::Types::STRING, :name => 'returnUrl'},
    OPTIONALRETURNURL => {:type => ::Thrift::Types::STRING, :name => 'optionalReturnUrl', :optional => true},
    REDIRECTCONFIRMATIONPAGEURL => {:type => ::Thrift::Types::STRING, :name => 'redirectConfirmationPageUrl', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CancelChatInvitationRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REQSEQ = 1
  CHATMID = 2
  TARGETUSERMIDS = 3

  FIELDS = {
    REQSEQ => {:type => ::Thrift::Types::I32, :name => 'reqSeq'},
    CHATMID => {:type => ::Thrift::Types::STRING, :name => 'chatMid'},
    TARGETUSERMIDS => {:type => ::Thrift::Types::SET, :name => 'targetUserMids', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class DeleteSelfFromChatRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REQSEQ = 1
  CHATMID = 2
  LASTSEENMESSAGEDELIVEREDTIME = 3
  LASTSEENMESSAGEID = 4
  LASTMESSAGEDELIVEREDTIME = 5
  LASTMESSAGEID = 6

  FIELDS = {
    REQSEQ => {:type => ::Thrift::Types::I32, :name => 'reqSeq'},
    CHATMID => {:type => ::Thrift::Types::STRING, :name => 'chatMid'},
    LASTSEENMESSAGEDELIVEREDTIME => {:type => ::Thrift::Types::I64, :name => 'lastSeenMessageDeliveredTime', :optional => true},
    LASTSEENMESSAGEID => {:type => ::Thrift::Types::STRING, :name => 'lastSeenMessageId', :optional => true},
    LASTMESSAGEDELIVEREDTIME => {:type => ::Thrift::Types::I64, :name => 'lastMessageDeliveredTime', :optional => true},
    LASTMESSAGEID => {:type => ::Thrift::Types::STRING, :name => 'lastMessageId', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetChatsRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHATMIDS = 1
  WITHMEMBERS = 2
  WITHINVITEES = 3

  FIELDS = {
    CHATMIDS => {:type => ::Thrift::Types::LIST, :name => 'chatMids', :element => {:type => ::Thrift::Types::STRING}},
    WITHMEMBERS => {:type => ::Thrift::Types::BOOL, :name => 'withMembers', :optional => true},
    WITHINVITEES => {:type => ::Thrift::Types::BOOL, :name => 'withInvitees', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class FollowBuddyDetail
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ICONTYPE = 1

  FIELDS = {
    ICONTYPE => {:type => ::Thrift::Types::I32, :name => 'iconType'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class FollowProfile
  include ::Thrift::Struct, ::Thrift::Struct_Union
  FOLLOWMID = 1
  DISPLAYNAME = 2
  PICTUREPATH = 3
  FOLLOWING = 4
  ALLOWFOLLOW = 5
  FOLLOWBUDDYDETAIL = 6

  FIELDS = {
    FOLLOWMID => {:type => ::Thrift::Types::STRUCT, :name => 'followMid', :class => ::FollowMid},
    DISPLAYNAME => {:type => ::Thrift::Types::STRING, :name => 'displayName'},
    PICTUREPATH => {:type => ::Thrift::Types::STRING, :name => 'picturePath'},
    FOLLOWING => {:type => ::Thrift::Types::BOOL, :name => 'following'},
    ALLOWFOLLOW => {:type => ::Thrift::Types::BOOL, :name => 'allowFollow'},
    FOLLOWBUDDYDETAIL => {:type => ::Thrift::Types::STRUCT, :name => 'followBuddyDetail', :class => ::FollowBuddyDetail, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetFollowersResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PROFILES = 1
  CURSOR = 2
  FOLLOWINGCOUNT = 3
  FOLLOWERCOUNT = 4

  FIELDS = {
    PROFILES => {:type => ::Thrift::Types::LIST, :name => 'profiles', :element => {:type => ::Thrift::Types::STRUCT, :class => ::FollowProfile}},
    CURSOR => {:type => ::Thrift::Types::STRING, :name => 'cursor', :optional => true},
    FOLLOWINGCOUNT => {:type => ::Thrift::Types::I64, :name => 'followingCount', :optional => true},
    FOLLOWERCOUNT => {:type => ::Thrift::Types::I64, :name => 'followerCount', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Profile
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MID = 1
  USERID = 3
  REGIONCODE = 12
  PHONE = 10
  EMAIL = 11
  DISPLAYNAME = 20
  PHONETICNAME = 21
  PICTURESTATUS = 22
  THUMBNAILURL = 23
  STATUSMESSAGE = 24
  ALLOWSEARCHBYUSERID = 31
  ALLOWSEARCHBYEMAIL = 32
  PICTUREPATH = 33
  MUSICPROFILE = 34
  VIDEOPROFILE = 35
  STATUSMESSAGECONTENTMETADATA = 36
  AVATARPROFILE = 37

  FIELDS = {
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'},
    USERID => {:type => ::Thrift::Types::STRING, :name => 'userid'},
    REGIONCODE => {:type => ::Thrift::Types::STRING, :name => 'regionCode'},
    PHONE => {:type => ::Thrift::Types::STRING, :name => 'phone'},
    EMAIL => {:type => ::Thrift::Types::STRING, :name => 'email'},
    DISPLAYNAME => {:type => ::Thrift::Types::STRING, :name => 'displayName'},
    PHONETICNAME => {:type => ::Thrift::Types::STRING, :name => 'phoneticName'},
    PICTURESTATUS => {:type => ::Thrift::Types::STRING, :name => 'pictureStatus'},
    THUMBNAILURL => {:type => ::Thrift::Types::STRING, :name => 'thumbnailUrl'},
    STATUSMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'statusMessage'},
    ALLOWSEARCHBYUSERID => {:type => ::Thrift::Types::BOOL, :name => 'allowSearchByUserid'},
    ALLOWSEARCHBYEMAIL => {:type => ::Thrift::Types::BOOL, :name => 'allowSearchByEmail'},
    PICTUREPATH => {:type => ::Thrift::Types::STRING, :name => 'picturePath'},
    MUSICPROFILE => {:type => ::Thrift::Types::STRING, :name => 'musicProfile'},
    VIDEOPROFILE => {:type => ::Thrift::Types::STRING, :name => 'videoProfile'},
    STATUSMESSAGECONTENTMETADATA => {:type => ::Thrift::Types::MAP, :name => 'statusMessageContentMetadata', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    AVATARPROFILE => {:type => ::Thrift::Types::STRUCT, :name => 'avatarProfile', :class => ::AvatarProfile, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class InviteIntoChatRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REQSEQ = 1
  CHATMID = 2
  TARGETUSERMIDS = 3

  FIELDS = {
    REQSEQ => {:type => ::Thrift::Types::I32, :name => 'reqSeq'},
    CHATMID => {:type => ::Thrift::Types::STRING, :name => 'chatMid'},
    TARGETUSERMIDS => {:type => ::Thrift::Types::SET, :name => 'targetUserMids', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AuthKeyExchangeResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PUBLICKEY = 1
  NONCE = 2

  FIELDS = {
    PUBLICKEY => {:type => ::Thrift::Types::STRING, :name => 'publicKey'},
    NONCE => {:type => ::Thrift::Types::STRING, :name => 'nonce'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetBuddyChatBarRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BUDDYMID = 1
  CHATBARREVISION = 2
  RICHMENUID = 3

  FIELDS = {
    BUDDYMID => {:type => ::Thrift::Types::STRING, :name => 'buddyMid'},
    CHATBARREVISION => {:type => ::Thrift::Types::I64, :name => 'chatBarRevision'},
    RICHMENUID => {:type => ::Thrift::Types::STRING, :name => 'richMenuId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ChannelIdWithLastUpdated
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHANNELID = 1
  LASTUPDATED = 2

  FIELDS = {
    CHANNELID => {:type => ::Thrift::Types::STRING, :name => 'channelId'},
    LASTUPDATED => {:type => ::Thrift::Types::I64, :name => 'lastUpdated'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class MoretabRecommendAccount
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MID = 1
  DISPLAYNAME = 2
  STATUSMESSAGE = 3
  PICTURESTATUS = 4
  PICTUREPATH = 5

  FIELDS = {
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'},
    DISPLAYNAME => {:type => ::Thrift::Types::STRING, :name => 'displayName'},
    STATUSMESSAGE => {:type => ::Thrift::Types::STRING, :name => 'statusMessage'},
    PICTURESTATUS => {:type => ::Thrift::Types::STRING, :name => 'pictureStatus'},
    PICTUREPATH => {:type => ::Thrift::Types::STRING, :name => 'picturePath'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class MoretabRecommend
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ACCOUNTS = 1
  NEXTUPDATETIME = 2
  CACHETTLMILLIS = 3

  FIELDS = {
    ACCOUNTS => {:type => ::Thrift::Types::LIST, :name => 'accounts', :element => {:type => ::Thrift::Types::STRUCT, :class => ::MoretabRecommendAccount}},
    NEXTUPDATETIME => {:type => ::Thrift::Types::I64, :name => 'nextUpdateTime'},
    CACHETTLMILLIS => {:type => ::Thrift::Types::I64, :name => 'cacheTtlMillis'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CancelChatInvitationResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class DeleteSelfFromChatResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetChatsResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHATS = 1

  FIELDS = {
    CHATS => {:type => ::Thrift::Types::LIST, :name => 'chats', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Chat}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetFollowingsRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  FOLLOWMID = 1
  CURSOR = 2

  FIELDS = {
    FOLLOWMID => {:type => ::Thrift::Types::STRUCT, :name => 'followMid', :class => ::FollowMid},
    CURSOR => {:type => ::Thrift::Types::STRING, :name => 'cursor', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class InviteIntoChatResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AbuseMessage
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MESSAGEID = 1
  MESSAGE = 2
  SENDERMID = 3
  CONTENTTYPE = 4
  CREATEDTIME = 5
  METADATA = 6

  FIELDS = {
    MESSAGEID => {:type => ::Thrift::Types::I64, :name => 'messageId'},
    MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message'},
    SENDERMID => {:type => ::Thrift::Types::STRING, :name => 'senderMid'},
    CONTENTTYPE => {:type => ::Thrift::Types::I32, :name => 'contentType', :enum_class => ::J0_a_e_a_b_c9},
    CREATEDTIME => {:type => ::Thrift::Types::I64, :name => 'createdTime'},
    METADATA => {:type => ::Thrift::Types::MAP, :name => 'metadata', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @contentType.nil? || ::J0_a_e_a_b_c9::VALID_VALUES.include?(@contentType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field contentType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class AbuseReport
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REPORTSOURCE = 1
  APPLICATIONTYPE = 2
  SPAMMERREASONS = 3
  ABUSEMESSAGES = 4
  METADATA = 5

  FIELDS = {
    REPORTSOURCE => {:type => ::Thrift::Types::I32, :name => 'reportSource', :enum_class => ::J0_a_e_a_b_pf},
    APPLICATIONTYPE => {:type => ::Thrift::Types::I32, :name => 'applicationType', :enum_class => ::J0_a_e_a_b_y},
    SPAMMERREASONS => {:type => ::Thrift::Types::LIST, :name => 'spammerReasons', :element => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_lg}},
    ABUSEMESSAGES => {:type => ::Thrift::Types::LIST, :name => 'abuseMessages', :element => {:type => ::Thrift::Types::STRUCT, :class => ::AbuseMessage}},
    METADATA => {:type => ::Thrift::Types::MAP, :name => 'metadata', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @reportSource.nil? || ::J0_a_e_a_b_pf::VALID_VALUES.include?(@reportSource)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field reportSource!')
    end
    unless @applicationType.nil? || ::J0_a_e_a_b_y::VALID_VALUES.include?(@applicationType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field applicationType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class BuddyRichMenuChatBarItem
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LABEL = 1
  BODY = 2
  SELECTED = 3

  FIELDS = {
    LABEL => {:type => ::Thrift::Types::STRING, :name => 'label'},
    BODY => {:type => ::Thrift::Types::STRING, :name => 'body'},
    SELECTED => {:type => ::Thrift::Types::BOOL, :name => 'selected'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BuddyWidget
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ICON = 1
  LABEL = 2
  URL = 3

  FIELDS = {
    ICON => {:type => ::Thrift::Types::STRING, :name => 'icon'},
    LABEL => {:type => ::Thrift::Types::STRING, :name => 'label'},
    URL => {:type => ::Thrift::Types::STRING, :name => 'url'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BuddyWidgetListCharBarItem
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LABEL = 1
  WIDGETS = 2
  SELECTED = 3

  FIELDS = {
    LABEL => {:type => ::Thrift::Types::STRING, :name => 'label'},
    WIDGETS => {:type => ::Thrift::Types::LIST, :name => 'widgets', :element => {:type => ::Thrift::Types::STRUCT, :class => ::BuddyWidget}},
    SELECTED => {:type => ::Thrift::Types::BOOL, :name => 'selected'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BuddyWebChatBarItem
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LABEL = 1
  URL = 2

  FIELDS = {
    LABEL => {:type => ::Thrift::Types::STRING, :name => 'label'},
    URL => {:type => ::Thrift::Types::STRING, :name => 'url'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BuddyChatBarItem
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RICH = 1
  WIDGETLIST = 2
  WEB = 3

  FIELDS = {
    RICH => {:type => ::Thrift::Types::STRUCT, :name => 'rich', :class => ::BuddyRichMenuChatBarItem},
    WIDGETLIST => {:type => ::Thrift::Types::STRUCT, :name => 'widgetList', :class => ::BuddyWidgetListCharBarItem},
    WEB => {:type => ::Thrift::Types::STRUCT, :name => 'web', :class => ::BuddyWebChatBarItem}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BuddyChatBar
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BARITEMS = 1

  FIELDS = {
    BARITEMS => {:type => ::Thrift::Types::LIST, :name => 'barItems', :element => {:type => ::Thrift::Types::STRUCT, :class => ::BuddyChatBarItem}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CallRoute
  include ::Thrift::Struct, ::Thrift::Struct_Union
  FROMTOKEN = 1
  CALLFLOWTYPE = 2
  VOIPADDRESS = 3
  VOIPUDPPORT = 4
  VOIPTCPPORT = 5
  FROMZONE = 6
  TOZONE = 7
  FAKECALL = 8
  RINGBACKTONE = 9
  TOMID = 10
  TUNNELING = 11
  COMMPARAM = 12
  STID = 13
  ENCMID = 14
  ENCTOMID = 15
  SWITCHABLETOVIDEO = 16

  FIELDS = {
    FROMTOKEN => {:type => ::Thrift::Types::STRING, :name => 'fromToken'},
    CALLFLOWTYPE => {:type => ::Thrift::Types::I32, :name => 'callFlowType', :enum_class => ::J0_a_e_a_b_h3},
    VOIPADDRESS => {:type => ::Thrift::Types::STRING, :name => 'voipAddress'},
    VOIPUDPPORT => {:type => ::Thrift::Types::I32, :name => 'voipUdpPort'},
    VOIPTCPPORT => {:type => ::Thrift::Types::I32, :name => 'voipTcpPort', :optional => true},
    FROMZONE => {:type => ::Thrift::Types::STRING, :name => 'fromZone', :optional => true},
    TOZONE => {:type => ::Thrift::Types::STRING, :name => 'toZone', :optional => true},
    FAKECALL => {:type => ::Thrift::Types::BOOL, :name => 'fakeCall', :optional => true},
    RINGBACKTONE => {:type => ::Thrift::Types::STRING, :name => 'ringbackTone', :optional => true},
    TOMID => {:type => ::Thrift::Types::STRING, :name => 'toMid', :optional => true},
    TUNNELING => {:type => ::Thrift::Types::STRING, :name => 'tunneling', :optional => true},
    COMMPARAM => {:type => ::Thrift::Types::STRING, :name => 'commParam', :optional => true},
    STID => {:type => ::Thrift::Types::STRING, :name => 'stid', :optional => true},
    ENCMID => {:type => ::Thrift::Types::STRING, :name => 'encMid', :optional => true},
    ENCTOMID => {:type => ::Thrift::Types::STRING, :name => 'encToMid', :optional => true},
    SWITCHABLETOVIDEO => {:type => ::Thrift::Types::BOOL, :name => 'switchableToVideo', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @callFlowType.nil? || ::J0_a_e_a_b_h3::VALID_VALUES.include?(@callFlowType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field callFlowType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaidCallBalance
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PRODUCTTYPE = 1
  PRODUCTNAME = 2
  UNIT = 3
  LIMITEDPAIDBALANCE = 4
  LIMITEDFREEBALANCE = 5
  UNLIMITEDPAIDBALANCE = 6
  UNLIMITEDFREEBALANCE = 7
  STARTTIME = 8
  ENDTIME = 9
  AUTOPAYENABLED = 10

  FIELDS = {
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_e_a_b_xd},
    PRODUCTNAME => {:type => ::Thrift::Types::STRING, :name => 'productName'},
    UNIT => {:type => ::Thrift::Types::STRING, :name => 'unit'},
    LIMITEDPAIDBALANCE => {:type => ::Thrift::Types::I32, :name => 'limitedPaidBalance'},
    LIMITEDFREEBALANCE => {:type => ::Thrift::Types::I32, :name => 'limitedFreeBalance'},
    UNLIMITEDPAIDBALANCE => {:type => ::Thrift::Types::I32, :name => 'unlimitedPaidBalance'},
    UNLIMITEDFREEBALANCE => {:type => ::Thrift::Types::I32, :name => 'unlimitedFreeBalance'},
    STARTTIME => {:type => ::Thrift::Types::I64, :name => 'startTime'},
    ENDTIME => {:type => ::Thrift::Types::I64, :name => 'endTime'},
    AUTOPAYENABLED => {:type => ::Thrift::Types::BOOL, :name => 'autopayEnabled'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @productType.nil? || ::J0_a_e_a_b_xd::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class FollowRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  FOLLOWMID = 1

  FIELDS = {
    FOLLOWMID => {:type => ::Thrift::Types::STRUCT, :name => 'followMid', :class => ::FollowMid}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetFollowingsResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PROFILES = 1
  CURSOR = 2
  FOLLOWINGCOUNT = 3
  FOLLOWERCOUNT = 4

  FIELDS = {
    PROFILES => {:type => ::Thrift::Types::LIST, :name => 'profiles', :element => {:type => ::Thrift::Types::STRUCT, :class => ::FollowProfile}},
    CURSOR => {:type => ::Thrift::Types::STRING, :name => 'cursor', :optional => true},
    FOLLOWINGCOUNT => {:type => ::Thrift::Types::I64, :name => 'followingCount', :optional => true},
    FOLLOWERCOUNT => {:type => ::Thrift::Types::I64, :name => 'followerCount', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BuddyDetail
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MID = 1
  MEMBERCOUNT = 2
  ONAIR = 3
  BUSINESSACCOUNT = 4
  ADDABLE = 5
  ACCEPTABLECONTENTTYPES = 6
  CAPABLEMYHOME = 7
  FREEPHONECALLABLE = 8
  PHONENUMBERTODIAL = 9
  NEEDPERMISSIONAPPROVAL = 10
  CHANNELID = 11
  CHANNELPROVIDERNAME = 12
  ICONTYPE = 13
  BOTTYPE = 14
  SHOWRICHMENU = 15
  RICHMENUREVISION = 16
  ONAIRLABEL = 17
  ONAIRVERSION = 27
  USETHEME = 18
  THEMEID = 19
  USEBAR = 20
  BARREVISION = 21
  USEBACKGROUND = 22
  BACKGROUNDID = 23
  STATUSBARENABLED = 24
  STATUSBARREVISION = 25
  SEARCHID = 26
  BLOCKABLE = 28

  FIELDS = {
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'},
    MEMBERCOUNT => {:type => ::Thrift::Types::BOOL, :name => 'memberCount'},
    ONAIR => {:type => ::Thrift::Types::I32, :name => 'onAir'},
    BUSINESSACCOUNT => {:type => ::Thrift::Types::STRING, :name => 'businessAccount'},
    ADDABLE => {:type => ::Thrift::Types::I64, :name => 'addable'},
    ACCEPTABLECONTENTTYPES => {:type => ::Thrift::Types::BOOL, :name => 'acceptableContentTypes'},
    CAPABLEMYHOME => {:type => ::Thrift::Types::BOOL, :name => 'capableMyhome'},
    FREEPHONECALLABLE => {:type => ::Thrift::Types::BOOL, :name => 'freePhoneCallable'},
    PHONENUMBERTODIAL => {:type => ::Thrift::Types::SET, :name => 'phoneNumberToDial', :element => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_c9}},
    NEEDPERMISSIONAPPROVAL => {:type => ::Thrift::Types::BOOL, :name => 'needPermissionApproval'},
    CHANNELID => {:type => ::Thrift::Types::BOOL, :name => 'channelId'},
    CHANNELPROVIDERNAME => {:type => ::Thrift::Types::STRING, :name => 'channelProviderName'},
    ICONTYPE => {:type => ::Thrift::Types::BOOL, :name => 'iconType'},
    BOTTYPE => {:type => ::Thrift::Types::I32, :name => 'botType'},
    SHOWRICHMENU => {:type => ::Thrift::Types::STRING, :name => 'showRichMenu'},
    RICHMENUREVISION => {:type => ::Thrift::Types::I32, :name => 'richMenuRevision'},
    ONAIRLABEL => {:type => ::Thrift::Types::I32, :name => 'onAirLabel', :enum_class => ::J0_a_e_a_b_t1},
    ONAIRVERSION => {:type => ::Thrift::Types::BOOL, :name => 'onAirVersion'},
    USETHEME => {:type => ::Thrift::Types::I64, :name => 'useTheme'},
    THEMEID => {:type => ::Thrift::Types::I32, :name => 'themeId', :enum_class => ::J0_a_e_a_b_a2},
    USEBAR => {:type => ::Thrift::Types::I32, :name => 'useBar'},
    BARREVISION => {:type => ::Thrift::Types::BOOL, :name => 'barRevision'},
    USEBACKGROUND => {:type => ::Thrift::Types::STRING, :name => 'useBackground'},
    BACKGROUNDID => {:type => ::Thrift::Types::BOOL, :name => 'backgroundId'},
    STATUSBARENABLED => {:type => ::Thrift::Types::I64, :name => 'statusBarEnabled'},
    STATUSBARREVISION => {:type => ::Thrift::Types::BOOL, :name => 'statusBarRevision'},
    SEARCHID => {:type => ::Thrift::Types::STRING, :name => 'searchId'},
    BLOCKABLE => {:type => ::Thrift::Types::BOOL, :name => 'blockable'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @onAirLabel.nil? || ::J0_a_e_a_b_t1::VALID_VALUES.include?(@onAirLabel)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field onAirLabel!')
    end
    unless @themeId.nil? || ::J0_a_e_a_b_a2::VALID_VALUES.include?(@themeId)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field themeId!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ProximityMatchCandidateEntry
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CONTACT = 1
  BUDDYDETAIL = 11

  FIELDS = {
    CONTACT => {:type => ::Thrift::Types::STRUCT, :name => 'contact', :class => ::Contact},
    BUDDYDETAIL => {:type => ::Thrift::Types::STRUCT, :name => 'buddyDetail', :class => ::BuddyDetail}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ProximityMatchCandidateResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  USERS = 1
  BUDDIES = 2
  ENDOFRESULT = 91

  FIELDS = {
    USERS => {:type => ::Thrift::Types::LIST, :name => 'users', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ProximityMatchCandidateEntry}},
    BUDDIES => {:type => ::Thrift::Types::LIST, :name => 'buddies', :element => {:type => ::Thrift::Types::STRUCT, :class => ::ProximityMatchCandidateEntry}},
    ENDOFRESULT => {:type => ::Thrift::Types::BOOL, :name => 'endOfResult'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RSAKey
  include ::Thrift::Struct, ::Thrift::Struct_Union
  KEYNM = 1
  NVALUE = 2
  EVALUE = 3
  SESSIONKEY = 4

  FIELDS = {
    KEYNM => {:type => ::Thrift::Types::STRING, :name => 'keynm'},
    NVALUE => {:type => ::Thrift::Types::STRING, :name => 'nvalue'},
    EVALUE => {:type => ::Thrift::Types::STRING, :name => 'evalue'},
    SESSIONKEY => {:type => ::Thrift::Types::STRING, :name => 'sessionKey'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Configurations
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REVISION = 1
  CONFIGMAP = 2

  FIELDS = {
    REVISION => {:type => ::Thrift::Types::I64, :name => 'revision'},
    CONFIGMAP => {:type => ::Thrift::Types::MAP, :name => 'configMap', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AgeCheckDocomoResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHURL = 1
  USERAGETYPE = 2

  FIELDS = {
    AUTHURL => {:type => ::Thrift::Types::STRING, :name => 'authUrl'},
    USERAGETYPE => {:type => ::Thrift::Types::I32, :name => 'userAgeType', :enum_class => ::J0_a_e_a_b_gt}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @userAgeType.nil? || ::J0_a_e_a_b_gt::VALID_VALUES.include?(@userAgeType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field userAgeType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class BuddyPersonalDetail
  include ::Thrift::Struct, ::Thrift::Struct_Union
  RICHMENUID = 1
  STATUSBARREVISION = 2

  FIELDS = {
    RICHMENUID => {:type => ::Thrift::Types::STRING, :name => 'richMenuId', :optional => true},
    STATUSBARREVISION => {:type => ::Thrift::Types::I64, :name => 'statusBarRevision', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BuddyDetailWithPersonal
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BUDDYDETAIL = 1
  PERSONALDETAIL = 2

  FIELDS = {
    BUDDYDETAIL => {:type => ::Thrift::Types::STRUCT, :name => 'buddyDetail', :class => ::BuddyDetail},
    PERSONALDETAIL => {:type => ::Thrift::Types::STRUCT, :name => 'personalDetail', :class => ::BuddyPersonalDetail}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CallHost
  include ::Thrift::Struct, ::Thrift::Struct_Union
  HOST = 1
  PORT = 2
  ZONE = 3

  FIELDS = {
    HOST => {:type => ::Thrift::Types::STRING, :name => 'host'},
    PORT => {:type => ::Thrift::Types::I32, :name => 'port'},
    ZONE => {:type => ::Thrift::Types::STRING, :name => 'zone'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GroupCallRoute
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TOKEN = 1
  CSCF = 2
  MIX = 3
  HOSTMID = 4
  CAPABILITIES = 5
  PROTO = 6
  VOIPADDRESS = 7
  VOIPUDPPORT = 8
  VOIPTCPPORT = 9
  FROMZONE = 10
  COMMPARAM = 11
  POLARISADDRESS = 12
  POLARISUDPPORT = 13
  POLARISZONE = 14
  ORIONADDRESS = 15

  FIELDS = {
    TOKEN => {:type => ::Thrift::Types::STRING, :name => 'token'},
    CSCF => {:type => ::Thrift::Types::STRUCT, :name => 'cscf', :class => ::CallHost},
    MIX => {:type => ::Thrift::Types::STRUCT, :name => 'mix', :class => ::CallHost},
    HOSTMID => {:type => ::Thrift::Types::STRING, :name => 'hostMid'},
    CAPABILITIES => {:type => ::Thrift::Types::LIST, :name => 'capabilities', :element => {:type => ::Thrift::Types::STRING}},
    PROTO => {:type => ::Thrift::Types::I32, :name => 'proto', :enum_class => ::J0_a_e_a_b_hc},
    VOIPADDRESS => {:type => ::Thrift::Types::STRING, :name => 'voipAddress'},
    VOIPUDPPORT => {:type => ::Thrift::Types::I32, :name => 'voipUdpPort'},
    VOIPTCPPORT => {:type => ::Thrift::Types::I32, :name => 'voipTcpPort'},
    FROMZONE => {:type => ::Thrift::Types::STRING, :name => 'fromZone'},
    COMMPARAM => {:type => ::Thrift::Types::STRING, :name => 'commParam'},
    POLARISADDRESS => {:type => ::Thrift::Types::STRING, :name => 'polarisAddress'},
    POLARISUDPPORT => {:type => ::Thrift::Types::I32, :name => 'polarisUdpPort'},
    POLARISZONE => {:type => ::Thrift::Types::STRING, :name => 'polarisZone'},
    ORIONADDRESS => {:type => ::Thrift::Types::STRING, :name => 'orionAddress'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @proto.nil? || ::J0_a_e_a_b_hc::VALID_VALUES.include?(@proto)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field proto!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaidCallHistory
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SEQ = 1
  TYPE = 2
  DIALEDNUMBER = 3
  CALLEDNUMBER = 4
  TOMID = 5
  TONAME = 6
  SETUPTIME = 7
  STARTTIME = 8
  ENDTIME = 9
  DURATION = 10
  TERMINATE = 11
  PRODUCTTYPE = 12
  CHARGE = 13
  UNIT = 14
  RESULT = 15

  FIELDS = {
    SEQ => {:type => ::Thrift::Types::I64, :name => 'seq'},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::J0_a_e_a_b_ae},
    DIALEDNUMBER => {:type => ::Thrift::Types::STRING, :name => 'dialedNumber'},
    CALLEDNUMBER => {:type => ::Thrift::Types::STRING, :name => 'calledNumber'},
    TOMID => {:type => ::Thrift::Types::STRING, :name => 'toMid'},
    TONAME => {:type => ::Thrift::Types::STRING, :name => 'toName'},
    SETUPTIME => {:type => ::Thrift::Types::I64, :name => 'setupTime'},
    STARTTIME => {:type => ::Thrift::Types::I64, :name => 'startTime'},
    ENDTIME => {:type => ::Thrift::Types::I64, :name => 'endTime'},
    DURATION => {:type => ::Thrift::Types::I64, :name => 'duration'},
    TERMINATE => {:type => ::Thrift::Types::I32, :name => 'terminate'},
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_e_a_b_xd},
    CHARGE => {:type => ::Thrift::Types::I32, :name => 'charge'},
    UNIT => {:type => ::Thrift::Types::STRING, :name => 'unit'},
    RESULT => {:type => ::Thrift::Types::STRING, :name => 'result'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::J0_a_e_a_b_ae::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
    unless @productType.nil? || ::J0_a_e_a_b_xd::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaidCallHistoryResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  HISTORYS = 1
  HASNEXT = 2

  FIELDS = {
    HISTORYS => {:type => ::Thrift::Types::LIST, :name => 'historys', :element => {:type => ::Thrift::Types::STRUCT, :class => ::PaidCallHistory}},
    HASNEXT => {:type => ::Thrift::Types::BOOL, :name => 'hasNext'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class FriendRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  EMID = 1
  MID = 2
  DIRECTION = 3
  METHOD = 4
  PARAM = 5
  TIMESTAMP = 6
  SEQID = 7
  DISPLAYNAME = 10
  PICTUREPATH = 11
  PICTURESTATUS = 12

  FIELDS = {
    EMID => {:type => ::Thrift::Types::STRING, :name => 'eMid'},
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'},
    DIRECTION => {:type => ::Thrift::Types::I32, :name => 'direction', :enum_class => ::J0_a_e_a_b_wa},
    METHOD => {:type => ::Thrift::Types::I32, :name => 'method', :enum_class => ::J0_a_e_a_b_xa},
    PARAM => {:type => ::Thrift::Types::STRING, :name => 'param'},
    TIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'timestamp'},
    SEQID => {:type => ::Thrift::Types::I64, :name => 'seqId'},
    DISPLAYNAME => {:type => ::Thrift::Types::STRING, :name => 'displayName'},
    PICTUREPATH => {:type => ::Thrift::Types::STRING, :name => 'picturePath'},
    PICTURESTATUS => {:type => ::Thrift::Types::STRING, :name => 'pictureStatus'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @direction.nil? || ::J0_a_e_a_b_wa::VALID_VALUES.include?(@direction)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field direction!')
    end
    unless @method.nil? || ::J0_a_e_a_b_xa::VALID_VALUES.include?(@method)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field method!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class IdentityCredential
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PROVIDER = 1
  IDENTIFIER = 2
  PASSWORD = 3

  FIELDS = {
    PROVIDER => {:type => ::Thrift::Types::I32, :name => 'provider', :enum_class => ::J0_a_e_a_b_rc},
    IDENTIFIER => {:type => ::Thrift::Types::STRING, :name => 'identifier'},
    PASSWORD => {:type => ::Thrift::Types::STRING, :name => 'password'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @provider.nil? || ::J0_a_e_a_b_rc::VALID_VALUES.include?(@provider)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field provider!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class SecurityCenterResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  URI = 1
  TOKEN = 2
  COOKIEPATH = 3
  SKIP = 4

  FIELDS = {
    URI => {:type => ::Thrift::Types::STRING, :name => 'uri'},
    TOKEN => {:type => ::Thrift::Types::STRING, :name => 'token'},
    COOKIEPATH => {:type => ::Thrift::Types::STRING, :name => 'cookiePath'},
    SKIP => {:type => ::Thrift::Types::BOOL, :name => 'skip'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AcquireOACallRouteRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  SEARCHID = 1
  FROMENVINFO = 2

  FIELDS = {
    SEARCHID => {:type => ::Thrift::Types::STRING, :name => 'searchId'},
    FROMENVINFO => {:type => ::Thrift::Types::MAP, :name => 'fromEnvInfo', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Operation
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REVISION = 1
  CREATEDTIME = 2
  TYPE = 3
  REQSEQ = 4
  CHECKSUM = 5
  STATUS = 7
  PARAM1 = 10
  PARAM2 = 11
  PARAM3 = 12
  MESSAGE = 20

  FIELDS = {
    REVISION => {:type => ::Thrift::Types::I64, :name => 'revision'},
    CREATEDTIME => {:type => ::Thrift::Types::I64, :name => 'createdTime'},
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::J0_a_e_a_b_nd},
    REQSEQ => {:type => ::Thrift::Types::I32, :name => 'reqSeq'},
    CHECKSUM => {:type => ::Thrift::Types::STRING, :name => 'checksum'},
    STATUS => {:type => ::Thrift::Types::I32, :name => 'status', :enum_class => ::J0_a_e_a_b_md},
    PARAM1 => {:type => ::Thrift::Types::STRING, :name => 'param1'},
    PARAM2 => {:type => ::Thrift::Types::STRING, :name => 'param2'},
    PARAM3 => {:type => ::Thrift::Types::STRING, :name => 'param3'},
    MESSAGE => {:type => ::Thrift::Types::STRUCT, :name => 'message', :class => ::Message}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::J0_a_e_a_b_nd::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
    unless @status.nil? || ::J0_a_e_a_b_md::VALID_VALUES.include?(@status)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field status!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class UserAuthStatus
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PHONENUMBERREGISTERED = 1
  REGISTEREDSNSIDTYPES = 2
  ACCOUNTMIGRATIONCHECKTYPE = 3

  FIELDS = {
    PHONENUMBERREGISTERED => {:type => ::Thrift::Types::BOOL, :name => 'phoneNumberRegistered'},
    REGISTEREDSNSIDTYPES => {:type => ::Thrift::Types::LIST, :name => 'registeredSnsIdTypes', :element => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_ig}},
    ACCOUNTMIGRATIONCHECKTYPE => {:type => ::Thrift::Types::I32, :name => 'accountMigrationCheckType', :enum_class => ::J0_a_e_a_b_g}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @accountMigrationCheckType.nil? || ::J0_a_e_a_b_g::VALID_VALUES.include?(@accountMigrationCheckType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field accountMigrationCheckType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaidCallDialing
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TYPE = 1
  DIALEDNUMBER = 2
  SERVICEDOMAIN = 3
  PRODUCTTYPE = 4
  PRODUCTNAME = 5
  MULTIPLEPRODUCT = 6
  CALLERIDSTATUS = 7
  BALANCE = 10
  UNIT = 11
  RATE = 12
  DISPLAYCODE = 13
  CALLEDNUMBER = 14
  CALLEENATIONALNUMBER = 15
  CALLEECALLINGCODE = 16
  RATEDIVISION = 17
  ADMAXMIN = 20
  ADREMAINS = 21
  ADSESSIONID = 22

  FIELDS = {
    TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::J0_a_e_a_b_ae},
    DIALEDNUMBER => {:type => ::Thrift::Types::STRING, :name => 'dialedNumber'},
    SERVICEDOMAIN => {:type => ::Thrift::Types::STRING, :name => 'serviceDomain'},
    PRODUCTTYPE => {:type => ::Thrift::Types::I32, :name => 'productType', :enum_class => ::J0_a_e_a_b_xd},
    PRODUCTNAME => {:type => ::Thrift::Types::STRING, :name => 'productName'},
    MULTIPLEPRODUCT => {:type => ::Thrift::Types::BOOL, :name => 'multipleProduct'},
    CALLERIDSTATUS => {:type => ::Thrift::Types::I32, :name => 'callerIdStatus', :enum_class => ::J0_a_e_a_b_ce},
    BALANCE => {:type => ::Thrift::Types::I32, :name => 'balance'},
    UNIT => {:type => ::Thrift::Types::STRING, :name => 'unit'},
    RATE => {:type => ::Thrift::Types::I32, :name => 'rate'},
    DISPLAYCODE => {:type => ::Thrift::Types::STRING, :name => 'displayCode'},
    CALLEDNUMBER => {:type => ::Thrift::Types::STRING, :name => 'calledNumber'},
    CALLEENATIONALNUMBER => {:type => ::Thrift::Types::STRING, :name => 'calleeNationalNumber'},
    CALLEECALLINGCODE => {:type => ::Thrift::Types::STRING, :name => 'calleeCallingCode'},
    RATEDIVISION => {:type => ::Thrift::Types::STRING, :name => 'rateDivision'},
    ADMAXMIN => {:type => ::Thrift::Types::I32, :name => 'adMaxMin'},
    ADREMAINS => {:type => ::Thrift::Types::I32, :name => 'adRemains'},
    ADSESSIONID => {:type => ::Thrift::Types::STRING, :name => 'adSessionId'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @type.nil? || ::J0_a_e_a_b_ae::VALID_VALUES.include?(@type)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
    end
    unless @productType.nil? || ::J0_a_e_a_b_xd::VALID_VALUES.include?(@productType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field productType!')
    end
    unless @callerIdStatus.nil? || ::J0_a_e_a_b_ce::VALID_VALUES.include?(@callerIdStatus)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field callerIdStatus!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class PaidCallResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  HOST = 1
  DIALING = 2
  TOKEN = 3
  SPOTITEMS = 4

  FIELDS = {
    HOST => {:type => ::Thrift::Types::STRUCT, :name => 'host', :class => ::CallHost},
    DIALING => {:type => ::Thrift::Types::STRUCT, :name => 'dialing', :class => ::PaidCallDialing},
    TOKEN => {:type => ::Thrift::Types::STRING, :name => 'token'},
    SPOTITEMS => {:type => ::Thrift::Types::LIST, :name => 'spotItems', :element => {:type => ::Thrift::Types::STRUCT, :class => ::SpotItem}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class OACallRoute
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CALLROUTE = 1
  PAIDCALLRESPONSE = 2

  FIELDS = {
    CALLROUTE => {:type => ::Thrift::Types::STRUCT, :name => 'callRoute', :class => ::CallRoute},
    PAIDCALLRESPONSE => {:type => ::Thrift::Types::STRUCT, :name => 'paidCallResponse', :class => ::PaidCallResponse}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AcquireOACallRouteResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  OACALLROUTE = 1

  FIELDS = {
    OACALLROUTE => {:type => ::Thrift::Types::STRUCT, :name => 'oaCallRoute', :class => ::OACallRoute}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaidCallCurrencyExchangeRate
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CURRENCYCODE = 1
  CURRENCYNAME = 2
  CURRENCYSIGN = 3
  PREFERRED = 4
  COINRATE = 5
  CREDITRATE = 6

  FIELDS = {
    CURRENCYCODE => {:type => ::Thrift::Types::STRING, :name => 'currencyCode'},
    CURRENCYNAME => {:type => ::Thrift::Types::STRING, :name => 'currencyName'},
    CURRENCYSIGN => {:type => ::Thrift::Types::STRING, :name => 'currencySign'},
    PREFERRED => {:type => ::Thrift::Types::BOOL, :name => 'preferred'},
    COINRATE => {:type => ::Thrift::Types::STRING, :name => 'coinRate'},
    CREDITRATE => {:type => ::Thrift::Types::STRING, :name => 'creditRate'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaidCallAdCountry
  include ::Thrift::Struct, ::Thrift::Struct_Union
  COUNTRYCODE = 1
  RATEDIVISION = 2

  FIELDS = {
    COUNTRYCODE => {:type => ::Thrift::Types::STRING, :name => 'countryCode'},
    RATEDIVISION => {:type => ::Thrift::Types::STRING, :name => 'rateDivision'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PaidCallMetadataResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CURRENCYEXCHANGERATES = 1
  RECOMMENDEDCOUNTRYCODES = 2
  ADCOUNTRIES = 3
  SUPPORTEDCALLEDCOUNTRYCODES = 4

  FIELDS = {
    CURRENCYEXCHANGERATES => {:type => ::Thrift::Types::LIST, :name => 'currencyExchangeRates', :element => {:type => ::Thrift::Types::STRUCT, :class => ::PaidCallCurrencyExchangeRate}},
    RECOMMENDEDCOUNTRYCODES => {:type => ::Thrift::Types::LIST, :name => 'recommendedCountryCodes', :element => {:type => ::Thrift::Types::STRING}},
    ADCOUNTRIES => {:type => ::Thrift::Types::LIST, :name => 'adCountries', :element => {:type => ::Thrift::Types::STRUCT, :class => ::PaidCallAdCountry}},
    SUPPORTEDCALLEDCOUNTRYCODES => {:type => ::Thrift::Types::LIST, :name => 'supportedCalledCountryCodes', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ChannelToken
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TOKEN = 1
  OBSTOKEN = 2
  EXPIRATION = 3
  REFRESHTOKEN = 4
  CHANNELACCESSTOKEN = 5

  FIELDS = {
    TOKEN => {:type => ::Thrift::Types::STRING, :name => 'token'},
    OBSTOKEN => {:type => ::Thrift::Types::STRING, :name => 'obsToken'},
    EXPIRATION => {:type => ::Thrift::Types::I64, :name => 'expiration'},
    REFRESHTOKEN => {:type => ::Thrift::Types::STRING, :name => 'refreshToken'},
    CHANNELACCESSTOKEN => {:type => ::Thrift::Types::STRING, :name => 'channelAccessToken'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class FriendRequestsInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TOTALINCOMINGCOUNT = 1
  TOTALOUTGOINGCOUNT = 2
  RECENTINCOMINGS = 3
  RECENTOUTGOINGS = 4
  TOTALINCOMINGLIMIT = 5
  TOTALOUTGOINGLIMIT = 6

  FIELDS = {
    TOTALINCOMINGCOUNT => {:type => ::Thrift::Types::I32, :name => 'totalIncomingCount'},
    TOTALOUTGOINGCOUNT => {:type => ::Thrift::Types::I32, :name => 'totalOutgoingCount'},
    RECENTINCOMINGS => {:type => ::Thrift::Types::LIST, :name => 'recentIncomings', :element => {:type => ::Thrift::Types::STRUCT, :class => ::FriendRequest}},
    RECENTOUTGOINGS => {:type => ::Thrift::Types::LIST, :name => 'recentOutgoings', :element => {:type => ::Thrift::Types::STRUCT, :class => ::FriendRequest}},
    TOTALINCOMINGLIMIT => {:type => ::Thrift::Types::I32, :name => 'totalIncomingLimit'},
    TOTALOUTGOINGLIMIT => {:type => ::Thrift::Types::I32, :name => 'totalOutgoingLimit'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetBuddyLiveRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MID = 1

  FIELDS = {
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PushRecvReport
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PUSHTRACKINGID = 1
  RECVTIMESTAMP = 2
  BATTERY = 3
  BATTERYMODE = 4
  CLIENTNETWORKTYPE = 5
  CARRIERCODE = 6
  DISPLAYTIMESTAMP = 7

  FIELDS = {
    PUSHTRACKINGID => {:type => ::Thrift::Types::STRING, :name => 'pushTrackingId'},
    RECVTIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'recvTimestamp'},
    BATTERY => {:type => ::Thrift::Types::I32, :name => 'battery'},
    BATTERYMODE => {:type => ::Thrift::Types::I32, :name => 'batteryMode', :enum_class => ::J0_a_e_a_b_s1},
    CLIENTNETWORKTYPE => {:type => ::Thrift::Types::I32, :name => 'clientNetworkType', :enum_class => ::J0_a_e_a_b_s7},
    CARRIERCODE => {:type => ::Thrift::Types::STRING, :name => 'carrierCode'},
    DISPLAYTIMESTAMP => {:type => ::Thrift::Types::I64, :name => 'displayTimestamp', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @batteryMode.nil? || ::J0_a_e_a_b_s1::VALID_VALUES.include?(@batteryMode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field batteryMode!')
    end
    unless @clientNetworkType.nil? || ::J0_a_e_a_b_s7::VALID_VALUES.include?(@clientNetworkType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field clientNetworkType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class NearbyEntry
  include ::Thrift::Struct, ::Thrift::Struct_Union
  EMID = 1
  DISTANCE = 2
  LASTUPDATEDINSEC = 3
  PROPERTY = 4
  PROFILE = 5

  FIELDS = {
    EMID => {:type => ::Thrift::Types::STRING, :name => 'emid'},
    DISTANCE => {:type => ::Thrift::Types::DOUBLE, :name => 'distance'},
    LASTUPDATEDINSEC => {:type => ::Thrift::Types::I32, :name => 'lastUpdatedInSec'},
    PROPERTY => {:type => ::Thrift::Types::MAP, :name => 'property', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    PROFILE => {:type => ::Thrift::Types::STRUCT, :name => 'profile', :class => ::Profile}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PhoneVerificationResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  VERIFICATIONRESULT = 1
  ACCOUNTMIGRATIONCHECKTYPE = 2
  RECOMMENDADDFRIENDS = 3

  FIELDS = {
    VERIFICATIONRESULT => {:type => ::Thrift::Types::I32, :name => 'verificationResult', :enum_class => ::J0_a_e_a_b_rt},
    ACCOUNTMIGRATIONCHECKTYPE => {:type => ::Thrift::Types::I32, :name => 'accountMigrationCheckType', :enum_class => ::J0_a_e_a_b_g},
    RECOMMENDADDFRIENDS => {:type => ::Thrift::Types::BOOL, :name => 'recommendAddFriends'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @verificationResult.nil? || ::J0_a_e_a_b_rt::VALID_VALUES.include?(@verificationResult)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field verificationResult!')
    end
    unless @accountMigrationCheckType.nil? || ::J0_a_e_a_b_g::VALID_VALUES.include?(@accountMigrationCheckType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field accountMigrationCheckType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class AuthSessionRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  METADATA = 1

  FIELDS = {
    METADATA => {:type => ::Thrift::Types::MAP, :name => 'metaData', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BuddyLive
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MID = 1
  ONLIVE = 2
  TITLE = 3
  VIEWERCOUNT = 4
  LIVEURL = 5

  FIELDS = {
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'},
    ONLIVE => {:type => ::Thrift::Types::BOOL, :name => 'onLive'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    VIEWERCOUNT => {:type => ::Thrift::Types::I64, :name => 'viewerCount'},
    LIVEURL => {:type => ::Thrift::Types::STRING, :name => 'liveUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetBuddyLiveResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  INFO = 1
  REFRESHEDIN = 2

  FIELDS = {
    INFO => {:type => ::Thrift::Types::STRUCT, :name => 'info', :class => ::BuddyLive},
    REFRESHEDIN => {:type => ::Thrift::Types::I64, :name => 'refreshedIn'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RequestTokenResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REQUESTTOKEN = 1
  RETURNURL = 2

  FIELDS = {
    REQUESTTOKEN => {:type => ::Thrift::Types::STRING, :name => 'requestToken'},
    RETURNURL => {:type => ::Thrift::Types::STRING, :name => 'returnUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetAllChatMidsRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  WITHMEMBERCHATS = 1
  WITHINVITEDCHATS = 2

  FIELDS = {
    WITHMEMBERCHATS => {:type => ::Thrift::Types::BOOL, :name => 'withMemberChats', :optional => true},
    WITHINVITEDCHATS => {:type => ::Thrift::Types::BOOL, :name => 'withInvitedChats', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetContactsV2Request
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TARGETUSERMIDS = 1
  NEEDEDCONTACTCALENDAREVENTS = 2
  WITHUSERSTATUS = 3

  FIELDS = {
    TARGETUSERMIDS => {:type => ::Thrift::Types::LIST, :name => 'targetUserMids', :element => {:type => ::Thrift::Types::STRING}},
    NEEDEDCONTACTCALENDAREVENTS => {:type => ::Thrift::Types::SET, :name => 'neededContactCalendarEvents', :element => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_t8}},
    WITHUSERSTATUS => {:type => ::Thrift::Types::BOOL, :name => 'withUserStatus', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RegisterWithPhoneNumberResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHTOKEN = 1
  RECOMMENDEMAILREGISTRATION = 2
  CERTIFICATE = 3

  FIELDS = {
    AUTHTOKEN => {:type => ::Thrift::Types::STRING, :name => 'authToken'},
    RECOMMENDEMAILREGISTRATION => {:type => ::Thrift::Types::BOOL, :name => 'recommendEmailRegistration'},
    CERTIFICATE => {:type => ::Thrift::Types::STRING, :name => 'certificate', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SendPostbackRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MESSAGEID = 1
  URL = 2
  CHATMID = 3
  ORIGINMID = 4

  FIELDS = {
    MESSAGEID => {:type => ::Thrift::Types::STRING, :name => 'messageId'},
    URL => {:type => ::Thrift::Types::STRING, :name => 'url'},
    CHATMID => {:type => ::Thrift::Types::STRING, :name => 'chatMID'},
    ORIGINMID => {:type => ::Thrift::Types::STRING, :name => 'originMID'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class JoinChatByCallUrlRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  URLID = 1
  REQSEQ = 2

  FIELDS = {
    URLID => {:type => ::Thrift::Types::STRING, :name => 'urlId'},
    REQSEQ => {:type => ::Thrift::Types::I32, :name => 'reqSeq'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CoinUseReservationItem
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ITEMID = 1
  ITEMNAME = 2
  AMOUNT = 3

  FIELDS = {
    ITEMID => {:type => ::Thrift::Types::STRING, :name => 'itemId'},
    ITEMNAME => {:type => ::Thrift::Types::STRING, :name => 'itemName'},
    AMOUNT => {:type => ::Thrift::Types::I32, :name => 'amount'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CoinUseReservation
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHANNELID = 1
  SHOPORDERID = 2
  APPSTORECODE = 3
  ITEMS = 4
  COUNTRY = 5

  FIELDS = {
    CHANNELID => {:type => ::Thrift::Types::STRING, :name => 'channelId'},
    SHOPORDERID => {:type => ::Thrift::Types::STRING, :name => 'shopOrderId'},
    APPSTORECODE => {:type => ::Thrift::Types::I32, :name => 'appStoreCode', :enum_class => ::J0_a_e_a_b_ge},
    ITEMS => {:type => ::Thrift::Types::LIST, :name => 'items', :element => {:type => ::Thrift::Types::STRUCT, :class => ::CoinUseReservationItem}},
    COUNTRY => {:type => ::Thrift::Types::STRING, :name => 'country'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @appStoreCode.nil? || ::J0_a_e_a_b_ge::VALID_VALUES.include?(@appStoreCode)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field appStoreCode!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetBalanceRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetAllChatMidsResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MEMBERCHATMIDS = 1
  INVITEDCHATMIDS = 2

  FIELDS = {
    MEMBERCHATMIDS => {:type => ::Thrift::Types::SET, :name => 'memberChatMids', :element => {:type => ::Thrift::Types::STRING}},
    INVITEDCHATMIDS => {:type => ::Thrift::Types::SET, :name => 'invitedChatMids', :element => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ContactCalendarEvent
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  STATE = 2
  YEAR = 3
  MONTH = 4
  DAY = 5

  FIELDS = {
    ID => {:type => ::Thrift::Types::STRING, :name => 'id'},
    STATE => {:type => ::Thrift::Types::I32, :name => 'state', :enum_class => ::J0_a_e_a_b_s8},
    YEAR => {:type => ::Thrift::Types::I32, :name => 'year', :optional => true},
    MONTH => {:type => ::Thrift::Types::I32, :name => 'month', :optional => true},
    DAY => {:type => ::Thrift::Types::I32, :name => 'day', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @state.nil? || ::J0_a_e_a_b_s8::VALID_VALUES.include?(@state)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field state!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class ContactCalendarEvents
  include ::Thrift::Struct, ::Thrift::Struct_Union
  EVENTS = 1

  FIELDS = {
    EVENTS => {:type => ::Thrift::Types::MAP, :name => 'events', :key => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_t8}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::ContactCalendarEvent}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ContactEntry
  include ::Thrift::Struct, ::Thrift::Struct_Union
  USERSTATUS = 1
  SNAPSHOTTIMEMILLIS = 2
  CONTACT = 3
  CALENDAREVENTS = 4

  FIELDS = {
    USERSTATUS => {:type => ::Thrift::Types::I32, :name => 'userStatus', :optional => true, :enum_class => ::J0_a_e_a_b_pt},
    SNAPSHOTTIMEMILLIS => {:type => ::Thrift::Types::I64, :name => 'snapshotTimeMillis', :optional => true},
    CONTACT => {:type => ::Thrift::Types::STRUCT, :name => 'contact', :class => ::Contact, :optional => true},
    CALENDAREVENTS => {:type => ::Thrift::Types::STRUCT, :name => 'calendarEvents', :class => ::ContactCalendarEvents, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @userStatus.nil? || ::J0_a_e_a_b_pt::VALID_VALUES.include?(@userStatus)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field userStatus!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetContactsV2Response
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CONTACTS = 1

  FIELDS = {
    CONTACTS => {:type => ::Thrift::Types::MAP, :name => 'contacts', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::ContactEntry}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AgeCheckRequestResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHURL = 1
  SESSIONID = 2

  FIELDS = {
    AUTHURL => {:type => ::Thrift::Types::STRING, :name => 'authUrl'},
    SESSIONID => {:type => ::Thrift::Types::STRING, :name => 'sessionId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BuddyOnAirUrls
  include ::Thrift::Struct, ::Thrift::Struct_Union
  HLS = 1
  SMOOTHSTREAMING = 2

  FIELDS = {
    HLS => {:type => ::Thrift::Types::MAP, :name => 'hls', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    SMOOTHSTREAMING => {:type => ::Thrift::Types::MAP, :name => 'smoothStreaming', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BuddyOnAir
  include ::Thrift::Struct, ::Thrift::Struct_Union
  MID = 1
  FRESHNESSLIFETIME = 3
  ONAIRID = 4
  ONAIR = 5
  TEXT = 11
  VIEWERCOUNT = 12
  TARGETCOUNT = 13
  LIVEPLAYTIME = 14
  SCREENASPECTRATE = 15
  ONAIRTYPE = 31
  ONAIRURLS = 32
  ASPECTRATIOOFSOURCE = 33
  USEFADINGOUT = 41
  FADINGOUTIN = 42
  URLAFTERFADINGOUT = 43
  LABELAFTERFADINGOUT = 44
  USELOWERBANNER = 51
  LOWERBANNERURL = 52
  LOWERBANNERLABEL = 53

  FIELDS = {
    MID => {:type => ::Thrift::Types::STRING, :name => 'mid'},
    FRESHNESSLIFETIME => {:type => ::Thrift::Types::I64, :name => 'freshnessLifetime'},
    ONAIRID => {:type => ::Thrift::Types::STRING, :name => 'onAirId'},
    ONAIR => {:type => ::Thrift::Types::BOOL, :name => 'onAir'},
    TEXT => {:type => ::Thrift::Types::STRING, :name => 'text'},
    VIEWERCOUNT => {:type => ::Thrift::Types::I64, :name => 'viewerCount'},
    TARGETCOUNT => {:type => ::Thrift::Types::I64, :name => 'targetCount'},
    LIVEPLAYTIME => {:type => ::Thrift::Types::I64, :name => 'livePlayTime'},
    SCREENASPECTRATE => {:type => ::Thrift::Types::STRING, :name => 'screenAspectRate'},
    ONAIRTYPE => {:type => ::Thrift::Types::I32, :name => 'onAirType', :enum_class => ::J0_a_e_a_b_b2},
    ONAIRURLS => {:type => ::Thrift::Types::STRUCT, :name => 'onAirUrls', :class => ::BuddyOnAirUrls},
    ASPECTRATIOOFSOURCE => {:type => ::Thrift::Types::STRING, :name => 'aspectRatioOfSource'},
    USEFADINGOUT => {:type => ::Thrift::Types::BOOL, :name => 'useFadingOut'},
    FADINGOUTIN => {:type => ::Thrift::Types::I64, :name => 'fadingOutIn', :optional => true},
    URLAFTERFADINGOUT => {:type => ::Thrift::Types::STRING, :name => 'urlAfterFadingOut', :optional => true},
    LABELAFTERFADINGOUT => {:type => ::Thrift::Types::STRING, :name => 'labelAfterFadingOut', :optional => true},
    USELOWERBANNER => {:type => ::Thrift::Types::BOOL, :name => 'useLowerBanner', :optional => true},
    LOWERBANNERURL => {:type => ::Thrift::Types::STRING, :name => 'lowerBannerUrl', :optional => true},
    LOWERBANNERLABEL => {:type => ::Thrift::Types::STRING, :name => 'lowerBannerLabel', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @onAirType.nil? || ::J0_a_e_a_b_b2::VALID_VALUES.include?(@onAirType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field onAirType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class TestCallRoute
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TOKEN = 1
  VOIPSERVER = 2

  FIELDS = {
    TOKEN => {:type => ::Thrift::Types::STRING, :name => 'token'},
    VOIPSERVER => {:type => ::Thrift::Types::STRUCT, :name => 'voipServer', :class => ::CallHost}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class JoinChatByCallUrlResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CHAT = 1

  FIELDS = {
    CHAT => {:type => ::Thrift::Types::STRUCT, :name => 'chat', :class => ::Chat}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Balance
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CURRENTPOINTSFIXEDPOINTDECIMAL = 1

  FIELDS = {
    CURRENTPOINTSFIXEDPOINTDECIMAL => {:type => ::Thrift::Types::STRING, :name => 'currentPointsFixedPointDecimal'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class GetBalanceResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BALANCE = 1

  FIELDS = {
    BALANCE => {:type => ::Thrift::Types::STRUCT, :name => 'balance', :class => ::Balance}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class PointException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CODE = 1
  REASON = 2
  EXTRA = 3

  FIELDS = {
    CODE => {:type => ::Thrift::Types::I32, :name => 'code', :enum_class => ::J0_a_e_a_b_qe},
    REASON => {:type => ::Thrift::Types::STRING, :name => 'reason'},
    EXTRA => {:type => ::Thrift::Types::MAP, :name => 'extra', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}, :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @code.nil? || ::J0_a_e_a_b_qe::VALID_VALUES.include?(@code)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field code!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class InstantNews
  include ::Thrift::Struct, ::Thrift::Struct_Union
  NEWSID = 1
  NEWSSERVICE = 2
  TTLMILLIS = 3
  CATEGORY = 4
  CATEGORYBGCOLOR = 5
  CATEGORYCOLOR = 6
  TITLE = 7
  URL = 8
  IMAGE = 9

  FIELDS = {
    NEWSID => {:type => ::Thrift::Types::I64, :name => 'newsId'},
    NEWSSERVICE => {:type => ::Thrift::Types::STRING, :name => 'newsService'},
    TTLMILLIS => {:type => ::Thrift::Types::I64, :name => 'ttlMillis'},
    CATEGORY => {:type => ::Thrift::Types::STRING, :name => 'category'},
    CATEGORYBGCOLOR => {:type => ::Thrift::Types::STRING, :name => 'categoryBgColor'},
    CATEGORYCOLOR => {:type => ::Thrift::Types::STRING, :name => 'categoryColor'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    URL => {:type => ::Thrift::Types::STRING, :name => 'url'},
    IMAGE => {:type => ::Thrift::Types::STRING, :name => 'image', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RingbackTone
  include ::Thrift::Struct, ::Thrift::Struct_Union
  UUID = 1
  TRACKID = 2
  TITLE = 3
  OID = 4
  TIDS = 5
  SID = 6
  ARTIST = 7
  CHANNELID = 8

  FIELDS = {
    UUID => {:type => ::Thrift::Types::STRING, :name => 'uuid'},
    TRACKID => {:type => ::Thrift::Types::STRING, :name => 'trackId'},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    OID => {:type => ::Thrift::Types::STRING, :name => 'oid'},
    TIDS => {:type => ::Thrift::Types::MAP, :name => 'tids', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
    SID => {:type => ::Thrift::Types::STRING, :name => 'sid'},
    ARTIST => {:type => ::Thrift::Types::STRING, :name => 'artist', :optional => true},
    CHANNELID => {:type => ::Thrift::Types::STRING, :name => 'channelId', :optional => true}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class UpdateChatRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REQSEQ = 1
  CHAT = 2
  UPDATEDATTRIBUTE = 3

  FIELDS = {
    REQSEQ => {:type => ::Thrift::Types::I32, :name => 'reqSeq'},
    CHAT => {:type => ::Thrift::Types::STRUCT, :name => 'chat', :class => ::Chat},
    UPDATEDATTRIBUTE => {:type => ::Thrift::Types::I32, :name => 'updatedAttribute', :enum_class => ::J0_a_e_a_b_f7}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @updatedAttribute.nil? || ::J0_a_e_a_b_f7::VALID_VALUES.include?(@updatedAttribute)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field updatedAttribute!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class GetBuddyStatusBarV2Request
  include ::Thrift::Struct, ::Thrift::Struct_Union
  BOTMID = 1
  REVISION = 2

  FIELDS = {
    BOTMID => {:type => ::Thrift::Types::STRING, :name => 'botMid'},
    REVISION => {:type => ::Thrift::Types::I64, :name => 'revision'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class CreateGroupCallUrlRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TITLE = 1

  FIELDS = {
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class EmailConfirmationResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  CERTIFICATE = 1

  FIELDS = {
    CERTIFICATE => {:type => ::Thrift::Types::STRING, :name => 'certificate'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class UpdateChatResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class BuddyStatusBar
  include ::Thrift::Struct, ::Thrift::Struct_Union
  LABEL = 1
  DISPLAYTYPE = 2
  TITLE = 3
  ICONURL = 4
  LINKURL = 5

  FIELDS = {
    LABEL => {:type => ::Thrift::Types::STRING, :name => 'label'},
    DISPLAYTYPE => {:type => ::Thrift::Types::I32, :name => 'displayType', :enum_class => ::J0_a_e_a_b_d3},
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    ICONURL => {:type => ::Thrift::Types::STRING, :name => 'iconUrl'},
    LINKURL => {:type => ::Thrift::Types::STRING, :name => 'linkUrl'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @displayType.nil? || ::J0_a_e_a_b_d3::VALID_VALUES.include?(@displayType)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field displayType!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

class CreateGroupCallUrlResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  URL = 1

  FIELDS = {
    URL => {:type => ::Thrift::Types::STRUCT, :name => 'url', :class => ::GroupCallUrl}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AcceptChatInvitationByTicketRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REQSEQ = 1
  CHATMID = 2
  TICKETID = 3

  FIELDS = {
    REQSEQ => {:type => ::Thrift::Types::I32, :name => 'reqSeq'},
    CHATMID => {:type => ::Thrift::Types::STRING, :name => 'chatMid'},
    TICKETID => {:type => ::Thrift::Types::STRING, :name => 'ticketId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Ringtone
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TITLE = 1
  ARTIST = 2
  OID = 3
  CHANNELID = 4

  FIELDS = {
    TITLE => {:type => ::Thrift::Types::STRING, :name => 'title'},
    ARTIST => {:type => ::Thrift::Types::STRING, :name => 'artist'},
    OID => {:type => ::Thrift::Types::STRING, :name => 'oid'},
    CHANNELID => {:type => ::Thrift::Types::STRING, :name => 'channelId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class E2EENegotiationResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ALLOWEDTYPES = 1
  PUBLICKEY = 2
  SPECVERSION = 3

  FIELDS = {
    ALLOWEDTYPES => {:type => ::Thrift::Types::SET, :name => 'allowedTypes', :element => {:type => ::Thrift::Types::I32, :enum_class => ::J0_a_e_a_b_c9}},
    PUBLICKEY => {:type => ::Thrift::Types::STRUCT, :name => 'publicKey', :class => ::E2EEPublicKey},
    SPECVERSION => {:type => ::Thrift::Types::I32, :name => 'specVersion'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RegisterWithSnsIdResult
  include ::Thrift::Struct, ::Thrift::Struct_Union
  AUTHTOKEN = 1
  USERCREATED = 2
  RECOMMENDEMAILREGISTRATION = 3

  FIELDS = {
    AUTHTOKEN => {:type => ::Thrift::Types::STRING, :name => 'authToken'},
    USERCREATED => {:type => ::Thrift::Types::BOOL, :name => 'userCreated'},
    RECOMMENDEMAILREGISTRATION => {:type => ::Thrift::Types::BOOL, :name => 'recommendEmailRegistration'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class SIMInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  PHONENUMBER = 1
  COUNTRYCODE = 2

  FIELDS = {
    PHONENUMBER => {:type => ::Thrift::Types::STRING, :name => 'phoneNumber'},
    COUNTRYCODE => {:type => ::Thrift::Types::STRING, :name => 'countryCode'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class DeleteGroupCallUrlRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  URLID = 1

  FIELDS = {
    URLID => {:type => ::Thrift::Types::STRING, :name => 'urlId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AcceptChatInvitationByTicketResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AnalyticsInfo
  include ::Thrift::Struct, ::Thrift::Struct_Union
  GASAMPLINGRATE = 1
  TMID = 2

  FIELDS = {
    GASAMPLINGRATE => {:type => ::Thrift::Types::DOUBLE, :name => 'gaSamplingRate'},
    TMID => {:type => ::Thrift::Types::STRING, :name => 'tmid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ReissueChatTicketRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REQSEQ = 1
  GROUPMID = 2

  FIELDS = {
    REQSEQ => {:type => ::Thrift::Types::I32, :name => 'reqSeq'},
    GROUPMID => {:type => ::Thrift::Types::STRING, :name => 'groupMid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class DeleteGroupCallUrlResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union

  FIELDS = {

  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class AcceptChatInvitationRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  REQSEQ = 1
  CHATMID = 2

  FIELDS = {
    REQSEQ => {:type => ::Thrift::Types::I32, :name => 'reqSeq'},
    CHATMID => {:type => ::Thrift::Types::STRING, :name => 'chatMid'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class FindChatByTicketRequest
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TICKETID = 1

  FIELDS = {
    TICKETID => {:type => ::Thrift::Types::STRING, :name => 'ticketId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class ReissueChatTicketResponse
  include ::Thrift::Struct, ::Thrift::Struct_Union
  TICKETID = 1

  FIELDS = {
    TICKETID => {:type => ::Thrift::Types::STRING, :name => 'ticketId'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

